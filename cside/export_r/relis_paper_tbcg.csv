#;key;Title;Link;Preview;Abstract;Year;Bibtex
287;Abdallah2015;"Using model driven engineering to support multi-paradigms security analysis";http://dx.doi.org/10.1007/978-3-319-27869-8_16;"<p><b><i>ARTICLE</i>(Abdallah2015)</b></p>
<p>R. Abdallah., A. Motii., N. Yakymets., and A. Lanusse. Using model driven engineering to support multi-paradigms security analysis. <i>Communications in Computer and Information Science</i>: 580, pp. 278&#8211;292 (2015).</p>
<p><center>cited By 2</center></p>";"Nowadays, security analysis of complex systems has become a major concern. Many works have been achieved to reduce vulnerabilities in such systems. However, existing methods used to perform security assessment as a holistic approach are still poorly instrumented and limited in scope. In this work, we propose methodology and associated framework for security analysis. The methodology relies upon model-driven engineering approach and combines two types of methods: a qualitative method named EBIOS that is usually simple and helps to identify critical parts of the system; then a quantitative method, the Attack Trees method, that is more complex but gives more accurate results. We present the automatic generation of Attack trees from EBIOS analysis phase. We show on a SCADA system case study how our process can be applied. {\textcopyright} Springer International Publishing Switzerland 2015.";2015;"@ARTICLE{Abdallah2015,
  author = {Abdallah, R and Motii, A and Yakymets, N and Lanusse, A},
  journal = {Communications in Computer and Information Science},
  title = {{Using model driven engineering to support multi-paradigms security analysis}},
  year = {2015},
  abstract = {Nowadays, security analysis of complex systems has become a major concern. Many works have been achieved to reduce vulnerabilities in such systems. However, existing methods used to perform security assessment as a holistic approach are still poorly instrumented and limited in scope. In this work, we propose methodology and associated framework for security analysis. The methodology relies upon model-driven engineering approach and combines two types of methods: a qualitative method named EBIOS that is usually simple and helps to identify critical parts of the system; then a quantitative method, the Attack Trees method, that is more complex but gives more accurate results. We present the automatic generation of Attack trees from EBIOS analysis phase. We show on a SCADA system case study how our process can be applied. {\textcopyright} Springer International Publishing Switzerland 2015.},
  annote = {cited By 2},
  pages = {278--292},
  volume = {580},
  doi = {10.1007/978-3-319-27869-8_16},
  paper = {http://dx.doi.org/10.1007/978-3-319-27869-8_16}
}"
288;Agostinho2015;"Underpinning EISB with enterprise interoperability neighboring scientific domains";http://dx.doi.org/10.4018/978-1-4666-8111-8.ch071;"<p><b><i>BOOK</i>(Agostinho2015)</b></p>
<p>C. Agostinho., R. Jardim-Goncalves., and A. Steiger-Garcao. <i>Underpinning EISB with enterprise interoperability neighboring scientific domains</i>. IGI Global (2015).</p>
<p><center>cited By 0</center></p>";"Over the last decade, interoperability appeared as a key enabler towards unlocking the full potential of enterprises, products, processes, and systems. With methods to support their lifecycle, contributing towards removing communication barriers, and fostering a new-networked business culture in industrial domains, Enterprise Interoperability (EI) requires tangible scientific foundations. This chapter recognizes that, in terms of content, any scientific field exists in an ecosystem of neighboring domains and presents a methodology to identify EI's relationship with its neighbors, thus supporting the foundations of EI Science Base (EISB). It can be agreed that formalisms like logic and mathematics are an integrant part of every science, but others also share relationships such as application fields' boundaries, methodologies, techniques, or even tools. With the support of the European Commission, through the Future Internet and Enterprise Systems (FInES) cluster of research projects, the authors have initiated an analysis of comprehensive domains (e.g. complexity and software). {\textcopyright} 2015 by IGI Global. All rights reserved.";2015;"@BOOK{Agostinho2015,
  author = {Agostinho, C and Jardim-Goncalves, R and Steiger-Garcao, A},
  publisher = {IGI Global},
  title = {{Underpinning EISB with enterprise interoperability neighboring scientific domains}},
  year = {2015},
  abstract = {Over the last decade, interoperability appeared as a key enabler towards unlocking the full potential of enterprises, products, processes, and systems. With methods to support their lifecycle, contributing towards removing communication barriers, and fostering a new-networked business culture in industrial domains, Enterprise Interoperability (EI) requires tangible scientific foundations. This chapter recognizes that, in terms of content, any scientific field exists in an ecosystem of neighboring domains and presents a methodology to identify EI's relationship with its neighbors, thus supporting the foundations of EI Science Base (EISB). It can be agreed that formalisms like logic and mathematics are an integrant part of every science, but others also share relationships such as application fields' boundaries, methodologies, techniques, or even tools. With the support of the European Commission, through the Future Internet and Enterprise Systems (FInES) cluster of research projects, the authors have initiated an analysis of comprehensive domains (e.g. complexity and software). {\textcopyright} 2015 by IGI Global. All rights reserved.},
  annote = {cited By 0},
  doi = {10.4018/978-1-4666-8111-8.ch071},
  paper = {http://dx.doi.org/10.4018/978-1-4666-8111-8.ch071}
}"
289;Agostinho2017;"Underpinning EISB with enterprise interoperability neighboring scientific domains";http://dx.doi.org/10.4018/978-1-5225-3923-0.ch048;"<p><b><i>BOOK</i>(Agostinho2017)</b></p>
<p>C. Agostinho., R. Jardim-Goncalves., and A. Steiger-Garcao. <i>Underpinning EISB with enterprise interoperability neighboring scientific domains</i>. IGI Global (2017).</p>
<p><center>cited By 0</center></p>";"Over the last decade, interoperability appeared as a key enabler towards unlocking the full potential of enterprises, products, processes, and systems. With methods to support their lifecycle, contributing towards removing communication barriers, and fostering a new-networked business culture in industrial domains, Enterprise Interoperability (EI) requires tangible scientific foundations. This chapter recognizes that, in terms of content, any scientific field exists in an ecosystem of neighboring domains and presents a methodology to identify EI's relationship with its neighbors, thus supporting the foundations of EI Science Base (EISB). It can be agreed that formalisms like logic and mathematics are an integrant part of every science, but others also share relationships such as application fields' boundaries, methodologies, techniques, or even tools. With the support of the European Commission, through the Future Internet and Enterprise Systems (FInES) cluster of research projects, the authors have initiated an analysis of comprehensive domains (e.g. complexity and software). {\textcopyright} 2018 by IGI Global. All rights reserved.";2017;"@BOOK{Agostinho2017,
  author = {Agostinho, C and Jardim-Goncalves, R and Steiger-Garcao, A},
  publisher = {IGI Global},
  title = {{Underpinning EISB with enterprise interoperability neighboring scientific domains}},
  year = {2017},
  abstract = {Over the last decade, interoperability appeared as a key enabler towards unlocking the full potential of enterprises, products, processes, and systems. With methods to support their lifecycle, contributing towards removing communication barriers, and fostering a new-networked business culture in industrial domains, Enterprise Interoperability (EI) requires tangible scientific foundations. This chapter recognizes that, in terms of content, any scientific field exists in an ecosystem of neighboring domains and presents a methodology to identify EI's relationship with its neighbors, thus supporting the foundations of EI Science Base (EISB). It can be agreed that formalisms like logic and mathematics are an integrant part of every science, but others also share relationships such as application fields' boundaries, methodologies, techniques, or even tools. With the support of the European Commission, through the Future Internet and Enterprise Systems (FInES) cluster of research projects, the authors have initiated an analysis of comprehensive domains (e.g. complexity and software). {\textcopyright} 2018 by IGI Global. All rights reserved.},
  annote = {cited By 0},
  doi = {10.4018/978-1-5225-3923-0.ch048},
  paper = {http://dx.doi.org/10.4018/978-1-5225-3923-0.ch048}
}"
290;Akiki2017;"Visual simple transformations: Empowering end-users to wire internet of things objects";http://dx.doi.org/10.1145/3057857;"<p><b><i>ARTICLE</i>(Akiki2017)</b></p>
<p>P. A. Akiki., A. K. Bandara., and Y. Yu. Visual simple transformations: Empowering end-users to wire internet of things objects. <i>ACM Transactions on Computer-Human Interaction</i>: 24(2) (2017).</p>
<p><center>cited By 0</center></p>";"Empowering end-users to wire Internet of Things (IoT) objects (things and services) together would allow them to more easily conceive and realize interesting IoT solutions. A challenge lies in devising a simple end-user development approach to support the specification of transformations, which can bridge the mismatch in the data being exchanged among IoT objects. To tackle this challenge, we present Visual Simple Transformations (ViSiT) as an approach that allows end-users to use a jigsaw puzzle metaphor for specifying transformations that are automatically converted into underlying executable workflows. ViSiT is explained by presenting meta-models and an architecture for implementing a system of connected IoT objects. A tool is provided for supporting end-users in visually developing and testing transformations. Another tool is also provided for allowing software developers to modify, if they wish, a transformation's underlying implementation. This work was evaluated from a technical perspective by developing transformations and measuring ViSiT's efficiency and scalability and by constructing an example application to show ViSiT's practicality. A study was conducted to evaluate this work from an end-user perspective, and its results showed positive indications of perceived usability, learnability, and the ability to conceive real-life scenarios for ViSiT. {\textcopyright} 2017 ACM.";2017;"@ARTICLE{Akiki2017,
  author = {Akiki, P A and Bandara, A K and Yu, Y},
  journal = {ACM Transactions on Computer-Human Interaction},
  title = {{Visual simple transformations: Empowering end-users to wire internet of things objects}},
  year = {2017},
  abstract = {Empowering end-users to wire Internet of Things (IoT) objects (things and services) together would allow them to more easily conceive and realize interesting IoT solutions. A challenge lies in devising a simple end-user development approach to support the specification of transformations, which can bridge the mismatch in the data being exchanged among IoT objects. To tackle this challenge, we present Visual Simple Transformations (ViSiT) as an approach that allows end-users to use a jigsaw puzzle metaphor for specifying transformations that are automatically converted into underlying executable workflows. ViSiT is explained by presenting meta-models and an architecture for implementing a system of connected IoT objects. A tool is provided for supporting end-users in visually developing and testing transformations. Another tool is also provided for allowing software developers to modify, if they wish, a transformation's underlying implementation. This work was evaluated from a technical perspective by developing transformations and measuring ViSiT's efficiency and scalability and by constructing an example application to show ViSiT's practicality. A study was conducted to evaluate this work from an end-user perspective, and its results showed positive indications of perceived usability, learnability, and the ability to conceive real-life scenarios for ViSiT. {\textcopyright} 2017 ACM.},
  annote = {cited By 0},
  number = {2},
  volume = {24},
  doi = {10.1145/3057857},
  paper = {http://dx.doi.org/10.1145/3057857}
}"
291;AlMamun2013;"MDE-based sensor management and verification for a self-driving miniature vehicle";http://dx.doi.org/10.1145/10.1145/2541928.2541929;"<p><b><i>ARTICLE</i>(AlMamun2013)</b></p>
<p>M. A. Al Mamun., C. Berger., and J. Hansson. MDE-based sensor management and verification for a self-driving miniature vehicle. <i>DSM 2013 - Proceedings of the 2013 ACM Workshop on Domain-Specific Modeling</i>, pp. 1&#8211;6 (2013).</p>
<p><center>cited By 2</center></p>";"Innovations for today's vehicle functions are mainly driven by software. They realize comfort systems like automated parking but also safety systems where sensors are continuously monitoring the vehicle's surroundings to brake autonomously for avoiding collisions with cars, pedestrians, or bicyclists. In simulation environments, various traffic situations with alternative sensor setups are imitated before testing them on prototypical cars. In this paper, we are presenting an MDE approach for managing different sensor setups in a cyber-physical system development environment to leverage automated model verification, support system testing, and enable code generation. For example, the models are used as the single point of truth to configure and generate sensor setups for system validations in a 3D simulation environment. After their validation, a considered sensor configuration is transformed into a constraint satisfaction model to be solved by the logical programming language Prolog. Based on this transformation, the conformance to the embedded system specification is formally verified and possible pin assignments, for how to connect the required sensors are calculated. The approach was validated during the development of a self-driving miniature vehicle using an STM32F4-based embedded system running the real-time operating system ChibiOS as the software/hardware interface to the sensors and actors. Copyright {\textcopyright} 2013 ACM.";2013;"@ARTICLE{AlMamun2013,
  author = {{Al Mamun}, M A and Berger, C and Hansson, J},
  journal = {DSM 2013 - Proceedings of the 2013 ACM Workshop on Domain-Specific Modeling},
  title = {{MDE-based sensor management and verification for a self-driving miniature vehicle}},
  year = {2013},
  abstract = {Innovations for today's vehicle functions are mainly driven by software. They realize comfort systems like automated parking but also safety systems where sensors are continuously monitoring the vehicle's surroundings to brake autonomously for avoiding collisions with cars, pedestrians, or bicyclists. In simulation environments, various traffic situations with alternative sensor setups are imitated before testing them on prototypical cars. In this paper, we are presenting an MDE approach for managing different sensor setups in a cyber-physical system development environment to leverage automated model verification, support system testing, and enable code generation. For example, the models are used as the single point of truth to configure and generate sensor setups for system validations in a 3D simulation environment. After their validation, a considered sensor configuration is transformed into a constraint satisfaction model to be solved by the logical programming language Prolog. Based on this transformation, the conformance to the embedded system specification is formally verified and possible pin assignments, for how to connect the required sensors are calculated. The approach was validated during the development of a self-driving miniature vehicle using an STM32F4-based embedded system running the real-time operating system ChibiOS as the software/hardware interface to the sensors and actors. Copyright {\textcopyright} 2013 ACM.},
  annote = {cited By 2},
  pages = {1--6},
  doi = {10.1145/10.1145/2541928.2541929},
  paper = {http://dx.doi.org/10.1145/10.1145/2541928.2541929}
}"
292;Alam2014;"Using technology tools to innovate assessment, reporting, and teaching practices in engineering education";http://dx.doi.org/10.4018/978-1-4666-5011-4;"<p><b><i>BOOK</i>(Alam2014)</b></p>
<p>F. Alam. <i>Using technology tools to innovate assessment, reporting, and teaching practices in engineering education</i>. IGI Global (2014).</p>
<p><center>cited By 1</center></p>";"Many can now conclude that utilizing educational technologies can be considered the primary tools to inspire students to learn. Combining these technologies with the best teaching and learning practices can engage in creativity and imagination in the engineering field. Using Technology Tools to Innovate Assessment, Reporting, and Teaching Practices in Engineering Education highlights the lack of understanding of teaching and learning with technology in higher education engineering programs while emphasizing the important use of this technology. This book aims to be essential for professors, graduate, and undergraduate students in the engineering programs interested learning the appropriate use of technological tools. {\textcopyright} 2014 by IGI Global. All rights reserved.";2014;"@BOOK{Alam2014,
  author = {Alam, F},
  publisher = {IGI Global},
  title = {{Using technology tools to innovate assessment, reporting, and teaching practices in engineering education}},
  year = {2014},
  abstract = {Many can now conclude that utilizing educational technologies can be considered the primary tools to inspire students to learn. Combining these technologies with the best teaching and learning practices can engage in creativity and imagination in the engineering field. Using Technology Tools to Innovate Assessment, Reporting, and Teaching Practices in Engineering Education highlights the lack of understanding of teaching and learning with technology in higher education engineering programs while emphasizing the important use of this technology. This book aims to be essential for professors, graduate, and undergraduate students in the engineering programs interested learning the appropriate use of technological tools. {\textcopyright} 2014 by IGI Global. All rights reserved.},
  annote = {cited By 1},
  doi = {10.4018/978-1-4666-5011-4},
  paper = {http://dx.doi.org/10.4018/978-1-4666-5011-4}
}"
293;Amaral2013;"A multiparadigm approach to integrate gestures and sound in the modeling framework";;"<p><b><i>ARTICLE</i>(Amaral2013)</b></p>
<p>V. Amaral., A. Cicchetti., and R. Deshayes. A multiparadigm approach to integrate gestures and sound in the modeling framework. <i>CEUR Workshop Proceedings</i>: 1112, pp. 57&#8211;66 (2013).</p>
<p><center>cited By 0</center></p>";"One of the essential means of supporting Human-Machine Interaction is a (software) language, exploited to input commands and receive corresponding outputs in a well-defined manner. In the past, language creation and customization used to be accessible to software developers only. But today, as software applications gain more ubiquity, these features tend to be more accessible to application users themselves. However, current language development techniques are still based on traditional concepts of human-machine interaction, i.e. manipulating text and/or diagrams by means of more or less sophisticated keypads (e.g. mouse and keyboard).In this paper we propose to enhance the typical approach for dealing with language intensive applications by widening available human-machine interactions to multiple modalities, including sounds, gestures, and their combination. In particular, we adopt a Multi-Paradigm Modelling approach in which the forms of interaction can be specified by means of appropriate modelling techniques. The aim is to provide a more advanced human-machine interaction support for language intensive applications.";2013;"@ARTICLE{Amaral2013,
  author = {Amaral, V and Cicchetti, A and Deshayes, R},
  journal = {CEUR Workshop Proceedings},
  title = {{A multiparadigm approach to integrate gestures and sound in the modeling framework}},
  year = {2013},
  abstract = {One of the essential means of supporting Human-Machine Interaction is a (software) language, exploited to input commands and receive corresponding outputs in a well-defined manner. In the past, language creation and customization used to be accessible to software developers only. But today, as software applications gain more ubiquity, these features tend to be more accessible to application users themselves. However, current language development techniques are still based on traditional concepts of human-machine interaction, i.e. manipulating text and/or diagrams by means of more or less sophisticated keypads (e.g. mouse and keyboard).In this paper we propose to enhance the typical approach for dealing with language intensive applications by widening available human-machine interactions to multiple modalities, including sounds, gestures, and their combination. In particular, we adopt a Multi-Paradigm Modelling approach in which the forms of interaction can be specified by means of appropriate modelling techniques. The aim is to provide a more advanced human-machine interaction support for language intensive applications.},
  annote = {cited By 0},
  pages = {57--66},
  volume = {1112}
}"
294;Amrani2016;"Real-time model-driven engineering: An overview";;"<p><b><i>ARTICLE</i>(Amrani2016)</b></p>
<p>M. Amrani. and P. Schobbens. Real-time model-driven engineering: An overview. <i>CEUR Workshop Proceedings</i>: 1693, pp. 18&#8211;27 (2016).</p>
<p><center>cited By 0</center></p>";"After a maturing period of over a decade, Model-Driven Engineering (MDE) starts to extend to novel areas that include safety-critical or embedded, but also cyberphysical systems. These domains explicitly manipulate time. This paper proposes three dimensions to analyse how MDE frameworks integrate time: which transformation paradigm is used, how time is represented inside it, and which characteristics of time are considered. Without claiming for exhaustivity, we validate our approach by analysis several contributions from the literature, thus offering an overview of the current practice in Real-Time MDE. {\textcopyright} 2016, CEUR-WS. All rights reserved.";2016;"@ARTICLE{Amrani2016,
  author = {Amrani, M and Schobbens, P.-Y.},
  journal = {CEUR Workshop Proceedings},
  title = {{Real-time model-driven engineering: An overview}},
  year = {2016},
  abstract = {After a maturing period of over a decade, Model-Driven Engineering (MDE) starts to extend to novel areas that include safety-critical or embedded, but also cyberphysical systems. These domains explicitly manipulate time. This paper proposes three dimensions to analyse how MDE frameworks integrate time: which transformation paradigm is used, how time is represented inside it, and which characteristics of time are considered. Without claiming for exhaustivity, we validate our approach by analysis several contributions from the literature, thus offering an overview of the current practice in Real-Time MDE. {\textcopyright} 2016, CEUR-WS. All rights reserved.},
  annote = {cited By 0},
  pages = {18--27},
  volume = {1693}
}"
295;Atkinson2016;"Demystifying ontological classification in language engineering";http://dx.doi.org/10.1007/978-3-319-42061-5_6;"<p><b><i>ARTICLE</i>(Atkinson2016)</b></p>
<p>C. Atkinson. and T. K&uuml;hne. Demystifying ontological classification in language engineering. <i>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</i>: 9764, pp. 83&#8211;100 (2016).</p>
<p><center>cited By 2</center></p>";"The introduction of ontological classification to support domain-metamodeling has been pivotal in the emergence of multi-level modeling as a dynamic research area. However, existing expositions of ontological classification have only used a limited context to distinguish it from the historically more commonly used linguistic classification. In important areas such as domain-specific languages and classic language engineering the distinction can appear to become blurred and the role of ontological classification is obscured, if not fundamentally challenged. In this paper we therefore examine critical points of confusion regarding the distinction and provide an expanded explanation of the differences. We maintain that optimally utilizing ontological classification, even for tasks that traditionally have only been viewed as language engineering, is critical for mastering the challenges in complex systems modeling including the validation of multi-language models. {\textcopyright} Springer International Publishing Switzerland 2016.";2016;"@ARTICLE{Atkinson2016,
  author = {Atkinson, C and K{\"{u}}hne, T},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  title = {{Demystifying ontological classification in language engineering}},
  year = {2016},
  abstract = {The introduction of ontological classification to support domain-metamodeling has been pivotal in the emergence of multi-level modeling as a dynamic research area. However, existing expositions of ontological classification have only used a limited context to distinguish it from the historically more commonly used linguistic classification. In important areas such as domain-specific languages and classic language engineering the distinction can appear to become blurred and the role of ontological classification is obscured, if not fundamentally challenged. In this paper we therefore examine critical points of confusion regarding the distinction and provide an expanded explanation of the differences. We maintain that optimally utilizing ontological classification, even for tasks that traditionally have only been viewed as language engineering, is critical for mastering the challenges in complex systems modeling including the validation of multi-language models. {\textcopyright} Springer International Publishing Switzerland 2016.},
  annote = {cited By 2},
  pages = {83--100},
  volume = {9764},
  doi = {10.1007/978-3-319-42061-5_6},
  paper = {http://dx.doi.org/10.1007/978-3-319-42061-5_6}
}"
296;Attarzadeh-Niaki2016;"An extensible modeling methodology for embedded and cyber-physical system design";http://dx.doi.org/10.1177/0037549716659753;"<p><b><i>ARTICLE</i>(Attarzadeh-Niaki2016)</b></p>
<p>S. Attarzadeh-Niaki. and I. Sander. An extensible modeling methodology for embedded and cyber-physical system design. <i>Simulation</i>: 92(8), pp. 771&#8211;794 (2016).</p>
<p><center>cited By 0</center></p>";"Models are important tools to manage the increasing complexity of system design. The choice of a modeling language for constructing models governs what types of systems can be modeled, and which subsequent design activities can be performed. This is especially true for the area of embedded electronic and cyber-physical system design, which poses several challenging requirements of modeling and design methodologies. This article argues that the Formal System Design (ForSyDe) methodology with the necessary presented extensions fulfills these requirements, and thus qualifies for the design of tomorrow's systems. Based on the theory of models of computation and the concept of process constructors, heterogeneous models are captured in ForSyDe with formal semantics. A refined layer of the formalism is introduced to make its denotational-style semantics easy to implement on top of commonly used imperative languages, and an open-source realization on top of the IEEE standard language SystemC is presented. The introspection mechanism is introduced to automatically export an intermediate representation of the constructed models for further analysis/synthesis by external tools. Flexibility and extensibility of ForSyDe is emphasized by integrating a new timed model of computation without central synchronization, and by providing mechanisms for integrating foreign models, parallel and distributed simulation, modeling adaptive, data-parallel, and non-deterministic systems. A set of ForSyDe features is demonstrated in practice, and compared with similar approaches using a running example and two relevant case studies. {\textcopyright} Simulation Councils Inc.";2016;"@ARTICLE{Attarzadeh-Niaki2016,
  author = {Attarzadeh-Niaki, S.-H. and Sander, I},
  journal = {Simulation},
  title = {{An extensible modeling methodology for embedded and cyber-physical system design}},
  year = {2016},
  abstract = {Models are important tools to manage the increasing complexity of system design. The choice of a modeling language for constructing models governs what types of systems can be modeled, and which subsequent design activities can be performed. This is especially true for the area of embedded electronic and cyber-physical system design, which poses several challenging requirements of modeling and design methodologies. This article argues that the Formal System Design (ForSyDe) methodology with the necessary presented extensions fulfills these requirements, and thus qualifies for the design of tomorrow's systems. Based on the theory of models of computation and the concept of process constructors, heterogeneous models are captured in ForSyDe with formal semantics. A refined layer of the formalism is introduced to make its denotational-style semantics easy to implement on top of commonly used imperative languages, and an open-source realization on top of the IEEE standard language SystemC is presented. The introspection mechanism is introduced to automatically export an intermediate representation of the constructed models for further analysis/synthesis by external tools. Flexibility and extensibility of ForSyDe is emphasized by integrating a new timed model of computation without central synchronization, and by providing mechanisms for integrating foreign models, parallel and distributed simulation, modeling adaptive, data-parallel, and non-deterministic systems. A set of ForSyDe features is demonstrated in practice, and compared with similar approaches using a running example and two relevant case studies. {\textcopyright} Simulation Councils Inc.},
  annote = {cited By 0},
  number = {8},
  pages = {771--794},
  volume = {92},
  doi = {10.1177/0037549716659753},
  paper = {http://dx.doi.org/10.1177/0037549716659753}
}"
297;Balasubramanian2017;"Algorithmic Strategies for Solving Complex Problems in Cryptography";http://dx.doi.org/10.4018/978-1-5225-2915-6;"<p><b><i>BOOK</i>(Balasubramanian2017)</b></p>
<p>K. Balasubramanian. and M. Rajakani. <i>Algorithmic Strategies for Solving Complex Problems in Cryptography</i>. IGI Global (2017).</p>
<p><center>cited By 0</center></p>";"Cryptography is a field that is constantly advancing, due to exponential growth in new technologies within the past few decades. Applying strategic algorithms to cryptic issues can help save time and energy in solving the expanding problems within this field. Algorithmic Strategies for Solving Complex Problems in Cryptography is an essential reference source that discusses the evolution and current trends in cryptology, and it offers new insight into how to use strategic algorithms to aid in solving intricate difficulties within this domain. Featuring relevant topics such as hash functions, homomorphic encryption schemes, two party computation, and integer factoring, this publication is ideal for academicians, graduate students, engineers, professionals, and researchers interested in expanding their knowledge of current trends and techniques within the cryptology field. {\textcopyright} 2018 by IGI Global. All rights reserved.";2017;"@BOOK{Balasubramanian2017,
  author = {Balasubramanian, K and Rajakani, M},
  publisher = {IGI Global},
  title = {{Algorithmic Strategies for Solving Complex Problems in Cryptography}},
  year = {2017},
  abstract = {Cryptography is a field that is constantly advancing, due to exponential growth in new technologies within the past few decades. Applying strategic algorithms to cryptic issues can help save time and energy in solving the expanding problems within this field. Algorithmic Strategies for Solving Complex Problems in Cryptography is an essential reference source that discusses the evolution and current trends in cryptology, and it offers new insight into how to use strategic algorithms to aid in solving intricate difficulties within this domain. Featuring relevant topics such as hash functions, homomorphic encryption schemes, two party computation, and integer factoring, this publication is ideal for academicians, graduate students, engineers, professionals, and researchers interested in expanding their knowledge of current trends and techniques within the cryptology field. {\textcopyright} 2018 by IGI Global. All rights reserved.},
  annote = {cited By 0},
  doi = {10.4018/978-1-5225-2915-6},
  paper = {http://dx.doi.org/10.4018/978-1-5225-2915-6}
}"
298;Barbierato2012;"PerfBPEL: A graph-based approach for the performance analysis of BPEL SOA applications";http://dx.doi.org/10.4108/icst.valuetools.2012.250340;"<p><b><i>ARTICLE</i>(Barbierato2012)</b></p>
<p>E. Barbierato., M. Iacono., and S. Marrone. PerfBPEL: A graph-based approach for the performance analysis of BPEL SOA applications. <i>Proceedings of the 2012 6th International ICST ARTICLE on Performance Evaluation Methodologies and Tools, VALUETOOLS 2012</i>, pp. 64&#8211;73 (2012).</p>
<p><center>cited By 13</center></p>";"Non-functional properties evaluation in Service Oriented Architecture (SOA) is still mostly an open challenge. Although this is a problem that has been already partially explored with some success, there is lack of consolidated results for more complex SOA applications based on services composition. This paper presents a contribution to performance evaluation of SOA-based applications integrated by BPEL. The evaluation technique is based on a performance-oriented reinterpretation of the BPEL specification as a performance modeling language within a multiformalism framework. The approach is based on automatic translation of PerfBPEL into Markov chains and it is implemented by means of SIMTHESys modeling and analysis framework to enable the interaction with other performance oriented formalisms. {\textcopyright} 2012 ICST.";2012;"@ARTICLE{Barbierato2012,
  author = {Barbierato, E and Iacono, M and Marrone, S},
  journal = {Proceedings of the 2012 6th International ICST ARTICLE on Performance Evaluation Methodologies and Tools, VALUETOOLS 2012},
  title = {{PerfBPEL: A graph-based approach for the performance analysis of BPEL SOA applications}},
  year = {2012},
  abstract = {Non-functional properties evaluation in Service Oriented Architecture (SOA) is still mostly an open challenge. Although this is a problem that has been already partially explored with some success, there is lack of consolidated results for more complex SOA applications based on services composition. This paper presents a contribution to performance evaluation of SOA-based applications integrated by BPEL. The evaluation technique is based on a performance-oriented reinterpretation of the BPEL specification as a performance modeling language within a multiformalism framework. The approach is based on automatic translation of PerfBPEL into Markov chains and it is implemented by means of SIMTHESys modeling and analysis framework to enable the interaction with other performance oriented formalisms. {\textcopyright} 2012 ICST.},
  annote = {cited By 13},
  pages = {64--73},
  doi = {10.4108/icst.valuetools.2012.250340},
  paper = {http://dx.doi.org/10.4108/icst.valuetools.2012.250340}
}"
299;Barbierato2013;"Exploiting product forms solution techniques in multiformalism modeling";;"<p><b><i>ARTICLE</i>(Barbierato2013)</b></p>
<p>E. Barbierato., G. D. Rossi., M. Gribaudo., M. Iacono., and A. Marin. Exploiting product forms solution techniques in multiformalism modeling. <i>Electronic Notes in Theoretical Computer Science</i>: 296, pp. 61&#8211;77 (2013).</p>
<p><center>Proceedings the Sixth International Workshop on the Practical Application of Stochastic Modelling (PASM) and the Eleventh International Workshop on Parallel and Distributed Methods in Verification (PDMC).</center></p>";"Multiformalism modeling has shown to be a valuable technique to cope with the complexity of the constraints that apply to specifications of computer-based systems state of the art. Multiformalism techniques help modelers and designers by providing a more (natural and) convenient approach in the specification process and in analysis of performance. Although their application does not necessarily provide an advantage in the solutions of the models, this paper shows how a compositional multiformalism modeling approach can leverage the power of product-form solutions to offer both efficient solution and specification of models for complex systems.";2013;"@ARTICLE{Barbierato2013,
  author = {Barbierato, Enrico and Rossi, Gian-Luca Dei and Gribaudo, Marco and Iacono, Mauro and Marin, Andrea},
  journal = {Electronic Notes in Theoretical Computer Science},
  title = {{Exploiting product forms solution techniques in multiformalism modeling}},
  year = {2013},
  abstract = {Multiformalism modeling has shown to be a valuable technique to cope with the complexity of the constraints that apply to specifications of computer-based systems state of the art. Multiformalism techniques help modelers and designers by providing a more (natural and) convenient approach in the specification process and in analysis of performance. Although their application does not necessarily provide an advantage in the solutions of the models, this paper shows how a compositional multiformalism modeling approach can leverage the power of product-form solutions to offer both efficient solution and specification of models for complex systems.},
  annote = {Proceedings the Sixth International Workshop on the Practical Application of Stochastic Modelling (PASM) and the Eleventh International Workshop on Parallel and Distributed Methods in Verification (PDMC).},
  pages = {61--77},
  volume = {296},
  doi = {https://doi.org/10.1016/j.entcs.2013.07.005}
}"
300;"Bari\vsi2017";"Framework Support for Usability Evaluation of Domain Specific Languages?";http://dx.doi.org/10.1145/3135932.3135953;"<p><b><i>ARTICLE</i>(Bari\vsi2017)</b></p>
<p>A. Bari\vsi. Framework Support for Usability Evaluation of Domain Specific Languages?. <i>SPLASH Companion 2017 - Proceedings Companion of the 2017 ACM SIGPLAN International ARTICLE on Systems, Programming, Languages, and Applications: Software for Humanity</i>, pp. 16&#8211;18 (2017).</p>
<p><center>cited By 0</center></p>";"In this paper we propose a conceptual framework that supports the iterative development process of DSLs concerning the issue of their Usability evaluation. A multiple-case studies were conducted in order validate the proposed method. {\textcopyright} 2017 Association for Computing Machinery.";2017;"@ARTICLE{Bari\vsi2017,
  author = {Bari{\v{s}}i, A},
  journal = {SPLASH Companion 2017 - Proceedings Companion of the 2017 ACM SIGPLAN International ARTICLE on Systems, Programming, Languages, and Applications: Software for Humanity},
  title = {{Framework Support for Usability Evaluation of Domain Specific Languages?}},
  year = {2017},
  abstract = {In this paper we propose a conceptual framework that supports the iterative development process of DSLs concerning the issue of their Usability evaluation. A multiple-case studies were conducted in order validate the proposed method. {\textcopyright} 2017 Association for Computing Machinery.},
  annote = {cited By 0},
  pages = {16--18},
  doi = {10.1145/3135932.3135953},
  paper = {http://dx.doi.org/10.1145/3135932.3135953}
}"
301;"Bari\vsic2018";"Usability driven DSL development with USE-ME";http://dx.doi.org/10.1016/j.cl.2017.06.005;"<p><b><i>ARTICLE</i>(Bari\vsic2018)</b></p>
<p>A. Bari\vsi&cacute;., V. Amaral., and M. Goul&atilde;o. Usability driven DSL development with USE-ME. <i>Computer Languages, Systems and Structures</i>: 51, pp. 1339&#8211;1351 (2018).</p>
<p><center>cited By 1</center></p>";"The adoption of Domain-Specific Languages (DSLs) is regarded as an approach to reduce the accidental complexity of software systems development. The availability of sophisticated language workbenches facilitates the development of DSLs making them increasingly more popular. The adoption of DSLs at large comes at the risk that a poorly designed DSL can be too hard to adopt by its domain users. As such, Usability is one of the essential characteristics to mitigate this risk as it has an important impact on the productivity achieved by DSL users. The current state of practice in Software Language Engineering (SLE) neglects the Usability of DSLs. A pertinent research question in SLE is how to engineer Usability into DSLs systematically. We argue that a timely systematic approach based on User Interface experimental evaluation techniques should be used to assess the impact of DSLs during their development process, while the cost of fixing the usability problems is relatively small, when compared to fixing them at the end of the development process. For that purpose, we introduce a conceptual framework, called USE-ME, which supports the iterative incremental development process of DSLs concerning the issue of their Usability evaluation. We illustrate the feasibility of the approach on a case study of the development of a DSL meant for children to program robots. {\textcopyright} 2017 Elsevier Ltd";2018;"@ARTICLE{Bari\vsic2018,
  author = {Bari{\v{s}}i{\'{c}}, A and Amaral, V and Goul{\~{a}}o, M},
  journal = {Computer Languages, Systems and Structures},
  title = {{Usability driven DSL development with USE-ME}},
  year = {2018},
  abstract = {The adoption of Domain-Specific Languages (DSLs) is regarded as an approach to reduce the accidental complexity of software systems development. The availability of sophisticated language workbenches facilitates the development of DSLs making them increasingly more popular. The adoption of DSLs at large comes at the risk that a poorly designed DSL can be too hard to adopt by its domain users. As such, Usability is one of the essential characteristics to mitigate this risk as it has an important impact on the productivity achieved by DSL users. The current state of practice in Software Language Engineering (SLE) neglects the Usability of DSLs. A pertinent research question in SLE is how to engineer Usability into DSLs systematically. We argue that a timely systematic approach based on User Interface experimental evaluation techniques should be used to assess the impact of DSLs during their development process, while the cost of fixing the usability problems is relatively small, when compared to fixing them at the end of the development process. For that purpose, we introduce a conceptual framework, called USE-ME, which supports the iterative incremental development process of DSLs concerning the issue of their Usability evaluation. We illustrate the feasibility of the approach on a case study of the development of a DSL meant for children to program robots. {\textcopyright} 2017 Elsevier Ltd},
  annote = {cited By 1},
  pages = {1339--1351},
  volume = {51},
  doi = {10.1016/j.cl.2017.06.005},
  paper = {http://dx.doi.org/10.1016/j.cl.2017.06.005}
}"
302;"Bari\vsic2017";"A requirements engineering approach for usability-driven DSL development";http://dx.doi.org/10.1145/3136014.3136027;"<p><b><i>ARTICLE</i>(Bari\vsic2017)</b></p>
<p>A. Bari\vsi&cacute;., D. Blouin., V. Amaral., and M. Goul&atilde;o. A requirements engineering approach for usability-driven DSL development. <i>SLE 2017 - Proceedings of the 10th ACM SIGPLAN International ARTICLE on Software Language Engineering, co-located with SPLASH 2017</i>, pp. 115&#8211;128 (2017).</p>
<p><center>cited By 1</center></p>";"There is currently a lack of Requirements Engineering (RE) approaches applied to, or supporting, the development of a Domain-Specific Language (DSL) taking into account the environment in which it is to be used. We present a modelbased RE approach to support DSL development with a focus on usability concerns. RDAL is a RE fragment language that can be complemented with other languages to support RE and design. USE-ME is a model driven approach for DSLs usability evaluation which is integrable with a DSL development approach. We combine RDAL and a new DSL, named DSSL, that we created for the specification of DSL-based systems. Integrated with this combination we add USE-ME to support usability evaluation. This combination of existing languages and tools provides a comprehensive RE approach for DSL development. We illustrate the approach with the development of the Gyro DSL for programming robots. {\textcopyright} 2017 Association for Computing Machinery.";2017;"@ARTICLE{Bari\vsic2017,
  author = {Bari{\v{s}}i{\'{c}}, A and Blouin, D and Amaral, V and Goul{\~{a}}o, M},
  journal = {SLE 2017 - Proceedings of the 10th ACM SIGPLAN International ARTICLE on Software Language Engineering, co-located with SPLASH 2017},
  title = {{A requirements engineering approach for usability-driven DSL development}},
  year = {2017},
  abstract = {There is currently a lack of Requirements Engineering (RE) approaches applied to, or supporting, the development of a Domain-Specific Language (DSL) taking into account the environment in which it is to be used. We present a modelbased RE approach to support DSL development with a focus on usability concerns. RDAL is a RE fragment language that can be complemented with other languages to support RE and design. USE-ME is a model driven approach for DSLs usability evaluation which is integrable with a DSL development approach. We combine RDAL and a new DSL, named DSSL, that we created for the specification of DSL-based systems. Integrated with this combination we add USE-ME to support usability evaluation. This combination of existing languages and tools provides a comprehensive RE approach for DSL development. We illustrate the approach with the development of the Gyro DSL for programming robots. {\textcopyright} 2017 Association for Computing Machinery.},
  annote = {cited By 1},
  pages = {115--128},
  doi = {10.1145/3136014.3136027},
  paper = {http://dx.doi.org/10.1145/3136014.3136027}
}"
303;Berger2016;"Efficiency of projectional editing: A controlled experiment";http://dx.doi.org/10.1145/2950290.2950315;"<p><b><i>ARTICLE</i>(Berger2016)</b></p>
<p>T. Berger., M. V&ouml;lter., H. P. Jensen., T. Dangprasert., and J. Siegmund. Efficiency of projectional editing: A controlled experiment. <i>Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering</i>: 13-18-November-2016, pp. 763&#8211;774 (2016).</p>
<p><center>cited By 8</center></p>";"Projectional editors are editors where a user's editing actions directly change the ABSTRACT syntax tree without using a parser. They promise essentially unrestricted language composition as well as flexible notations, which supports aligning languages with their respective domain and constitutes an essential ingredient of model-driven development. Such editors have existed since the 1980s and gained widespread attention with the Intentional Programming paradigm, which used projectional editing at its core. However, despite the benefits, programming still mainly relies on editing textual code, where projectional editors imply a very different-typically perceived as worse-editing experience, often seen as the main challenge prohibiting their widespread adoption. We present an experiment of code-editing activities in a projectional editor, conducted with 19 graduate computer-science students and industrial developers. We investigate the effects of projectional editing on editing efficiency, editing strategies, and error rates-each of which we also compare to conventional, parser-based editing. We observe that editing is efficient for basic-editing tasks, but that editing strategies and typical errors differ. More complex tasks require substantial experience and a better understanding of the abstract-syntax-Tree structure-then, projectional editing is also efficient. We also witness a tradeoff between fewer typing mistakes and an increased complexity of code editing.";2016;"@ARTICLE{Berger2016,
  author = {Berger, T and V{\"{o}}lter, M and Jensen, H P and Dangprasert, T and Siegmund, J},
  journal = {Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  title = {{Efficiency of projectional editing: A controlled experiment}},
  year = {2016},
  abstract = {Projectional editors are editors where a user's editing actions directly change the ABSTRACT syntax tree without using a parser. They promise essentially unrestricted language composition as well as flexible notations, which supports aligning languages with their respective domain and constitutes an essential ingredient of model-driven development. Such editors have existed since the 1980s and gained widespread attention with the Intentional Programming paradigm, which used projectional editing at its core. However, despite the benefits, programming still mainly relies on editing textual code, where projectional editors imply a very different-typically perceived as worse-editing experience, often seen as the main challenge prohibiting their widespread adoption. We present an experiment of code-editing activities in a projectional editor, conducted with 19 graduate computer-science students and industrial developers. We investigate the effects of projectional editing on editing efficiency, editing strategies, and error rates-each of which we also compare to conventional, parser-based editing. We observe that editing is efficient for basic-editing tasks, but that editing strategies and typical errors differ. More complex tasks require substantial experience and a better understanding of the abstract-syntax-Tree structure-then, projectional editing is also efficient. We also witness a tradeoff between fewer typing mistakes and an increased complexity of code editing.},
  annote = {cited By 8},
  pages = {763--774},
  volume = {13-18-November-2016},
  doi = {10.1145/2950290.2950315},
  paper = {http://dx.doi.org/10.1145/2950290.2950315}
}"
304;Bergmann2017;"Towards efficient evaluation of rule-based permissions for fine-grained access control in collaborative modeling";;"<p><b><i>ARTICLE</i>(Bergmann2017)</b></p>
<p>G. Bergmann., C. Debreceni., I. R&aacute;th., and D. Varr. Towards efficient evaluation of rule-based permissions for fine-grained access control in collaborative modeling. <i>CEUR Workshop Proceedings</i>: 2019, pp. 135&#8211;144 (2017).</p>
<p><center>cited By 0</center></p>";"In case of collaborative modeling, complex systems are developed by different stakeholders, in offline submissions or online sessions. To guarantee security, access control policies need to be enforced during the collaboration. As levels of required confidentiality and integrity may vary across model parts, we have previously proposed fine-grained rule-based access control, and shown how to consistently interpret flexible access control policies. Now we present an improvement on the previous results allowing for incremental recomputation, which is vital for online collaboration scenarios. Our approach is illustrated using a case study of the MONDO EU project.";2017;"@ARTICLE{Bergmann2017,
  author = {Bergmann, G and Debreceni, C and R{\'{a}}th, I and Varr, D},
  journal = {CEUR Workshop Proceedings},
  title = {{Towards efficient evaluation of rule-based permissions for fine-grained access control in collaborative modeling}},
  year = {2017},
  abstract = {In case of collaborative modeling, complex systems are developed by different stakeholders, in offline submissions or online sessions. To guarantee security, access control policies need to be enforced during the collaboration. As levels of required confidentiality and integrity may vary across model parts, we have previously proposed fine-grained rule-based access control, and shown how to consistently interpret flexible access control policies. Now we present an improvement on the previous results allowing for incremental recomputation, which is vital for online collaboration scenarios. Our approach is illustrated using a case study of the MONDO EU project.},
  annote = {cited By 0},
  pages = {135--144},
  volume = {2019}
}"
305;Broman2013;"Temporal issues in cyber-physical systems";;"<p><b><i>ARTICLE</i>(Broman2013)</b></p>
<p>D. Broman., P. Derler., and J. C. Eidson. Temporal issues in cyber-physical systems. <i>Journal of the Indian Institute of Science</i>: 93(3), pp. 389&#8211;402 (2013).</p>
<p><center>cited By 13</center></p>";"This paper reviews the use of time, clocks, and clock synchronization protocols in cyber-physical systems (CPS). Recent advances in the area of timing suggest avenues of research and potential new application areas. We discuss how introducing timestamps and clocks can help overcome issues such as latency, jitter, and determining correct execution order. Furthermore, we show how system complexity can be reduced and distribution as well as parallelism can be done deterministically. We also point to recent work in raising time to first class citizen status in modeling and implementation. In particular, we describe design and execution environments of CPS and specialized hardware such as predictable timing architectures where time plays a key role. {\textcopyright} Indian Institute of Science.";2013;"@ARTICLE{Broman2013,
  author = {Broman, D and Derler, P and Eidson, J C},
  journal = {Journal of the Indian Institute of Science},
  title = {{Temporal issues in cyber-physical systems}},
  year = {2013},
  abstract = {This paper reviews the use of time, clocks, and clock synchronization protocols in cyber-physical systems (CPS). Recent advances in the area of timing suggest avenues of research and potential new application areas. We discuss how introducing timestamps and clocks can help overcome issues such as latency, jitter, and determining correct execution order. Furthermore, we show how system complexity can be reduced and distribution as well as parallelism can be done deterministically. We also point to recent work in raising time to first class citizen status in modeling and implementation. In particular, we describe design and execution environments of CPS and specialized hardware such as predictable timing architectures where time plays a key role. {\textcopyright} Indian Institute of Science.},
  annote = {cited By 13},
  number = {3},
  pages = {389--402},
  volume = {93}
}"
306;Broman2012;"Viewpoints, Formalisms, Languages, and Tools for Cyber-physical Systems";http://dx.doi.org/10.1145/2508443.2508452;"<p><b><i>INPROCEEDINGS</i>(Broman2012)</b></p>
<p>D. Broman., E. A. Lee., S. Tripakis., and M. T&ouml;rngren. Viewpoints, Formalisms, Languages, and Tools for Cyber-physical Systems. <i>Proceedings of the 6th International Workshop on Multi-Paradigm Modeling</i>. MPM '12: pp. 49&#8211;54. ACM, New York, NY, USA (2012).</p>
<p><center></center></p>";;2012;"@INPROCEEDINGS{Broman2012,
  author = {Broman, David and Lee, Edward A and Tripakis, Stavros and T{\"{o}}rngren, Martin},
  booktitle = {Proceedings of the 6th International Workshop on Multi-Paradigm Modeling},
  title = {{Viewpoints, Formalisms, Languages, and Tools for Cyber-physical Systems}},
  year = {2012},
  address = {New York, NY, USA},
  pages = {49--54},
  publisher = {ACM},
  series = {MPM '12},
  doi = {10.1145/2508443.2508452},
  paper = {http://dx.doi.org/10.1145/2508443.2508452}
}"
307;Bucaioni2018;"MoVES: A Model-Driven Methodology for Vehicular Embedded Systems";http://dx.doi.org/10.1109/ACCESS.2018.2789400;"<p><b><i>ARTICLE</i>(Bucaioni2018)</b></p>
<p>A. Bucaioni., L. Addazi., A. Cicchetti., F. Ciccozzi., R. Eramo., S. Mubeen., and M. Sj&ouml;din. MoVES: A Model-Driven Methodology for Vehicular Embedded Systems. <i>IEEE Access</i>: 6, pp. 6424&#8211;6445 (2018).</p>
<p><center></center></p>";"This paper introduces a novel model-driven methodology for the software development of real-time distributed vehicular embedded systems on single- and multi-core platforms. The proposed methodology discloses the opportunity of improving the cost-efficiency of the development process by providing automated support to identify viable design solutions with respect to selected non-functional requirements. To this end, it leverages the interplay of modeling languages for the vehicular domain whose integration is achieved by a suite of model transformations. An instantiation of the methodology is discussed for timing requirements, which are among the most critical ones for vehicular systems. To support the design of temporally correct systems, cooperation between EAST-ADL and the Rubus component model is opportunely built-up by means of model transformations, enabling timing-aware design and model-based timing analysis of the system. The applicability of the methodology is demonstrated as the proof of concepts on industrial use cases performed in cooperation with our industrial partners.";2018;"@ARTICLE{Bucaioni2018,
  author = {Bucaioni, A and Addazi, L and Cicchetti, A and Ciccozzi, F and Eramo, R and Mubeen, S and Sj{\"{o}}din, M},
  journal = {IEEE Access},
  title = {{MoVES: A Model-Driven Methodology for Vehicular Embedded Systems}},
  year = {2018},
  abstract = {This paper introduces a novel model-driven methodology for the software development of real-time distributed vehicular embedded systems on single- and multi-core platforms. The proposed methodology discloses the opportunity of improving the cost-efficiency of the development process by providing automated support to identify viable design solutions with respect to selected non-functional requirements. To this end, it leverages the interplay of modeling languages for the vehicular domain whose integration is achieved by a suite of model transformations. An instantiation of the methodology is discussed for timing requirements, which are among the most critical ones for vehicular systems. To support the design of temporally correct systems, cooperation between EAST-ADL and the Rubus component model is opportunely built-up by means of model transformations, enabling timing-aware design and model-based timing analysis of the system. The applicability of the methodology is demonstrated as the proof of concepts on industrial use cases performed in cooperation with our industrial partners.},
  pages = {6424--6445},
  volume = {6},
  doi = {10.1109/ACCESS.2018.2789400},
  paper = {http://dx.doi.org/10.1109/ACCESS.2018.2789400}
}"
308;Burger2014;"Flexible views for view-based model-driven development";http://dx.doi.org/10.5445/KSP/1000043437;"<p><b><i>BOOK</i>(Burger2014)</b></p>
<p>E. Burger. <i>Flexible views for view-based model-driven development</i>. Karlsruher Institut fur Technologie (KIT) (2014).</p>
<p><center>cited By 1</center></p>";"Bei moderner Software-Entwicklung entsteht das Problem der Fragmentierung von Information in heterogene Modellierungs- und Programmierprachen. In dieser Dissertation wird der Vitruvius-Ansatz f{\"{u}}r sichtenbasierte Entwicklung vorgestellt. Flexible Sichten bieten eine kompakte Definition von benutzerspezifischen Sichten auf Software-Systeme und k{\"{o}}nnen mit der ModelJoin-Sprache definiert werden. Dieser Prozess wird durch ein {\"{a}}nderungs-Metamodell f{\"{u}}r Evolution und Change-Impact-Analyse unterst{\"{u}}tzt. {\textcopyright} 2014 Karlsruher Institut fur Technologie (KIT). All rights reserved.";2014;"@BOOK{Burger2014,
  author = {Burger, E},
  publisher = {Karlsruher Institut fur Technologie (KIT)},
  title = {{Flexible views for view-based model-driven development}},
  year = {2014},
  abstract = {Bei moderner Software-Entwicklung entsteht das Problem der Fragmentierung von Information in heterogene Modellierungs- und Programmierprachen. In dieser Dissertation wird der Vitruvius-Ansatz f{\"{u}}r sichtenbasierte Entwicklung vorgestellt. Flexible Sichten bieten eine kompakte Definition von benutzerspezifischen Sichten auf Software-Systeme und k{\"{o}}nnen mit der ModelJoin-Sprache definiert werden. Dieser Prozess wird durch ein {\"{a}}nderungs-Metamodell f{\"{u}}r Evolution und Change-Impact-Analyse unterst{\"{u}}tzt. {\textcopyright} 2014 Karlsruher Institut fur Technologie (KIT). All rights reserved.},
  annote = {cited By 1},
  doi = {10.5445/KSP/1000043437},
  paper = {http://dx.doi.org/10.5445/KSP/1000043437}
}"
309;Callow2013;"A Satisficing bi-directional model transformation engine using mixed integer linear programming";http://dx.doi.org/10.5381/jot.2013.12.1.a1;"<p><b><i>ARTICLE</i>(Callow2013)</b></p>
<p>G. Callow. and R. Kalawsky. A Satisficing bi-directional model transformation engine using mixed integer linear programming. <i>Journal of Object Technology</i>: 12(1) (2013).</p>
<p><center>cited By 8</center></p>";"The use of model transformation in software engineering has increased significantly during the past decade, with the ability to rapidly transform models and ensure consistency between those models being a key property of Model Driven Architecture. However, these approaches can be applied to a wide variety of different model types and some of these models and associated transformations require different semantics than those popularised by current model transformation tools. Specifically, current relational model transformation languages typically prioritise matching relation patterns in the source model over creating a target model that is compliant with its meta-model. In this paper we describe a relational model transformation engine implemented as a series of Mixed Integer Linear Programs (MILP). This engine has a key novel feature; it prioritises target model compliance with its meta-model by considering multiple interpretations of applying the transformation specification in order to ensure a correct target model is generated. In this paper the MILP transformation engine and the representations it uses are described, followed by the results of applying it to examples of varying complexity. {\textcopyright} JOT 2011.";2013;"@ARTICLE{Callow2013,
  author = {Callow, G and Kalawsky, R},
  journal = {Journal of Object Technology},
  title = {{A Satisficing bi-directional model transformation engine using mixed integer linear programming}},
  year = {2013},
  abstract = {The use of model transformation in software engineering has increased significantly during the past decade, with the ability to rapidly transform models and ensure consistency between those models being a key property of Model Driven Architecture. However, these approaches can be applied to a wide variety of different model types and some of these models and associated transformations require different semantics than those popularised by current model transformation tools. Specifically, current relational model transformation languages typically prioritise matching relation patterns in the source model over creating a target model that is compliant with its meta-model. In this paper we describe a relational model transformation engine implemented as a series of Mixed Integer Linear Programs (MILP). This engine has a key novel feature; it prioritises target model compliance with its meta-model by considering multiple interpretations of applying the transformation specification in order to ensure a correct target model is generated. In this paper the MILP transformation engine and the representations it uses are described, followed by the results of applying it to examples of varying complexity. {\textcopyright} JOT 2011.},
  annote = {cited By 8},
  number = {1},
  volume = {12},
  doi = {10.5381/jot.2013.12.1.a1},
  paper = {http://dx.doi.org/10.5381/jot.2013.12.1.a1}
}"
310;Chen2016;"Design and model checking of service oriented software architecture for internet of things: A survey";http://dx.doi.org/10.11897/SP.J.1016.2016.00853;"<p><b><i>ARTICLE</i>(Chen2016)</b></p>
<p>H. Chen. and L. Cui. Design and model checking of service oriented software architecture for internet of things: A survey. <i>Jisuanji Xuebao/Chinese Journal of Computers</i>: 39(5), pp. 853&#8211;871 (2016).</p>
<p><center>cited By 6</center></p>";"Software architecture of Internet of Things (IoT) is to define component model and interconnection topology of IoT application systems with the aim to construct IoT application systems featured by horizontally interconnect ability, heterogeneously integratability, resource usability and dynamically maintainability. Service Oriented Architecture (SOA) is currently the most popular architecture style used in guiding development of IoT application systems. So far, there have been several architecture reference models based on SOA proposed for thing-centric IoT applications. In this paper, we make a comparative analysis on these reference models in terms of component type, design principle and structural characteristics. The results of comparison explain why these reference models are suitable for guiding design of IoT application systems with different scales and requirements. We also analyze ways to establish formal models and model check of IoT application systems based on these architecture reference models. Finally, we figure out some future work to be done to establish a software-architecture-based development method of IoT application systems. {\textcopyright} 2016, Science Press. All right reserved.";2016;"@ARTICLE{Chen2016,
  author = {Chen, H.-M. and Cui, L},
  journal = {Jisuanji Xuebao/Chinese Journal of Computers},
  title = {{Design and model checking of service oriented software architecture for internet of things: A survey}},
  year = {2016},
  abstract = {Software architecture of Internet of Things (IoT) is to define component model and interconnection topology of IoT application systems with the aim to construct IoT application systems featured by horizontally interconnect ability, heterogeneously integratability, resource usability and dynamically maintainability. Service Oriented Architecture (SOA) is currently the most popular architecture style used in guiding development of IoT application systems. So far, there have been several architecture reference models based on SOA proposed for thing-centric IoT applications. In this paper, we make a comparative analysis on these reference models in terms of component type, design principle and structural characteristics. The results of comparison explain why these reference models are suitable for guiding design of IoT application systems with different scales and requirements. We also analyze ways to establish formal models and model check of IoT application systems based on these architecture reference models. Finally, we figure out some future work to be done to establish a software-architecture-based development method of IoT application systems. {\textcopyright} 2016, Science Press. All right reserved.},
  annote = {cited By 6},
  number = {5},
  pages = {853--871},
  volume = {39},
  doi = {10.11897/SP.J.1016.2016.00853},
  paper = {http://dx.doi.org/10.11897/SP.J.1016.2016.00853}
}"
311;Courtney2009;"M \#x00F6;bius 2.3: An extensible tool for dependability, security, and performance evaluation of large and complex system models";http://dx.doi.org/10.1109/DSN.2009.5270318;"<p><b><i>INPROCEEDINGS</i>(Courtney2009)</b></p>
<p>T. Courtney., S. Gaonkar., K. Keefe., E. W. D. Rozier., and W. H. Sanders. M \#x00F6;bius 2.3: An extensible tool for dependability, security, and performance evaluation of large and complex system models. <i>2009 IEEE/IFIP International Conference on Dependable Systems Networks</i>. pp. 353&#8211;358. jun (2009).</p>
<p><center></center></p>";"Mobius 2.3 is an extensible dependability, security, and performance modeling environment for large-scale discrete-event systems. It provides multiple model formalisms and solution techniques, facilitating the representation of each part of a system in the formalism that is most appropriate for it, and the application of the solution method or methods best-suited to estimating the system's behavior. Since its initial release in 2001, many advances have been made in Moumlbius's design and implementation that have strengthened its place in the modeling and analysis community. With almost a decade of widespread academic and industrial use, Moumlbius has proven itself to be useful in a wide variety of modeling situations. This paper documents the current feature set of Mobius 2.3, emphasizing recent significant enhancements.";2009;"@INPROCEEDINGS{Courtney2009,
  author = {Courtney, T and Gaonkar, S and Keefe, K and Rozier, E W D and Sanders, W H},
  booktitle = {2009 IEEE/IFIP International Conference on Dependable Systems Networks},
  title = {{M {\#}x00F6;bius 2.3: An extensible tool for dependability, security, and performance evaluation of large and complex system models}},
  year = {2009},
  abstract = {Mobius 2.3 is an extensible dependability, security, and performance modeling environment for large-scale discrete-event systems. It provides multiple model formalisms and solution techniques, facilitating the representation of each part of a system in the formalism that is most appropriate for it, and the application of the solution method or methods best-suited to estimating the system's behavior. Since its initial release in 2001, many advances have been made in Moumlbius's design and implementation that have strengthened its place in the modeling and analysis community. With almost a decade of widespread academic and industrial use, Moumlbius has proven itself to be useful in a wide variety of modeling situations. This paper documents the current feature set of Mobius 2.3, emphasizing recent significant enhancements.},
  month = {jun},
  pages = {353--358},
  doi = {10.1109/DSN.2009.5270318},
  paper = {http://dx.doi.org/10.1109/DSN.2009.5270318}
}"
312;David2016;"A multi-paradigm modeling foundation for collaborative multi-view model/system development";;"<p><b><i>ARTICLE</i>(David2016)</b></p>
<p>I. D&aacute;vid. A multi-paradigm modeling foundation for collaborative multi-view model/system development. <i>CEUR Workshop Proceedings</i>: 1775 (2016).</p>
<p><center>cited By 0</center></p>";"The complexity of current engineered systems has increased drastically over the last decades. Due to this complexity, these systems are typically developed in collaborative settings with stakeholders from different domains involved. A pertinent example is engineering of cyber-physical systems (CPS). Such collaborative endeavours are severely hindered by inconsistencies that arise due to semantic overlaps between different models. Additionally, since the involved domain-specific languages of stakeholders may be very disparate, inconsistencies often do not manifest on the linguistic level. To cope with this problem, we propose an approach that enables better understanding how inconsistencies arise, evolve and how they should be managed. The core of our approach is a rich process modeling formalism that allows modeling multiple aspects of the development workflow in accordance with the guidelines of multiparadigm modeling (MPM). We support our approach with an open-source prototype tool for designing engineering processes, defining inconsistency patterns and their respective management alternatives, and with the ability to optimize the original process for various optimality criteria, such as consistency and costs. {\textcopyright} 2016, CEUR-WS. All rights reserved.";2016;"@ARTICLE{David2016,
  author = {D{\'{a}}vid, I},
  journal = {CEUR Workshop Proceedings},
  title = {{A multi-paradigm modeling foundation for collaborative multi-view model/system development}},
  year = {2016},
  abstract = {The complexity of current engineered systems has increased drastically over the last decades. Due to this complexity, these systems are typically developed in collaborative settings with stakeholders from different domains involved. A pertinent example is engineering of cyber-physical systems (CPS). Such collaborative endeavours are severely hindered by inconsistencies that arise due to semantic overlaps between different models. Additionally, since the involved domain-specific languages of stakeholders may be very disparate, inconsistencies often do not manifest on the linguistic level. To cope with this problem, we propose an approach that enables better understanding how inconsistencies arise, evolve and how they should be managed. The core of our approach is a rich process modeling formalism that allows modeling multiple aspects of the development workflow in accordance with the guidelines of multiparadigm modeling (MPM). We support our approach with an open-source prototype tool for designing engineering processes, defining inconsistency patterns and their respective management alternatives, and with the ability to optimize the original process for various optimality criteria, such as consistency and costs. {\textcopyright} 2016, CEUR-WS. All rights reserved.},
  annote = {cited By 0},
  volume = {1775}
}"
313;David2017;"Modeling and enactment support for early detection of inconsistencies in engineering processes";;"<p><b><i>ARTICLE</i>(David2017)</b></p>
<p>I. D&aacute;vid., B. Meyers., K. Vanherpen., Y. Van Tendeloo., K. Berx., and H. Vangheluwe. Modeling and enactment support for early detection of inconsistencies in engineering processes. <i>CEUR Workshop Proceedings</i>: 2019, pp. 145&#8211;154 (2017).</p>
<p><center>cited By 0</center></p>";"Managing inconsistencies between models is a key challenge in engineering processes of complex systems. Early detection of inconsistencies results in more efficient processes, because it can reduce the amount of re-execution of costly engineering activities. In this paper, we propose an approach for early inconsistency detection in engineering processes. In our approach, the engineering process is explicitly modeled, along with the important characteristics and constraints of the system, imposed by the requirements and system specifications. This information is then used to enact the process and augment it with a run-time consistency monitoring service. Inconsistencies are expressed as a satisfiability problem of the constraints. Early detection of inconsistencies is achieved by monitoring the constraints, that is, checking their satisfiability at specific points of the process. Our approach is supported with a framework which includes a visual process modeling tool, a process enactment engine and a state-of-the-art symbolic solver for early inconsistency detection.";2017;"@ARTICLE{David2017,
  author = {D{\'{a}}vid, I and Meyers, B and Vanherpen, K and {Van Tendeloo}, Y and Berx, K and Vangheluwe, H},
  journal = {CEUR Workshop Proceedings},
  title = {{Modeling and enactment support for early detection of inconsistencies in engineering processes}},
  year = {2017},
  abstract = {Managing inconsistencies between models is a key challenge in engineering processes of complex systems. Early detection of inconsistencies results in more efficient processes, because it can reduce the amount of re-execution of costly engineering activities. In this paper, we propose an approach for early inconsistency detection in engineering processes. In our approach, the engineering process is explicitly modeled, along with the important characteristics and constraints of the system, imposed by the requirements and system specifications. This information is then used to enact the process and augment it with a run-time consistency monitoring service. Inconsistencies are expressed as a satisfiability problem of the constraints. Early detection of inconsistencies is achieved by monitoring the constraints, that is, checking their satisfiability at specific points of the process. Our approach is supported with a framework which includes a visual process modeling tool, a process enactment engine and a state-of-the-art symbolic solver for early inconsistency detection.},
  annote = {cited By 0},
  pages = {145--154},
  volume = {2019}
}"
314;David2018;"Foundations for Streaming Model Transformations by Complex Event Processing";http://dx.doi.org/10.1007/s10270-016-0533-1;"<p><b><i>ARTICLE</i>(David2018)</b></p>
<p>I. D&aacute;vid., I. R&aacute;th., and D. Varr&oacute;. Foundations for Streaming Model Transformations by Complex Event Processing. <i>Software and Systems Modeling</i>: 17(1), pp. 135&#8211;162 (2018).</p>
<p><center>cited By 3</center></p>";"Streaming model transformations represent a novel class of transformations to manipulate models whose elements are continuously produced or modified in high volume and with rapid rate of change. Executing streaming transformations requires efficient techniques to recognize activated transformation rules over a live model and a potentially infinite stream of events. In this paper, we propose foundations of streaming model transformations by innovatively integrating incremental model query, complex event processing (CEP) and reactive (event-driven) transformation techniques. Complex event processing allows to identify relevant patterns and sequences of events over an event stream. Our approach enables event streams to include model change events which are automatically and continuously populated by incremental model queries. Furthermore, a reactive rule engine carries out transformations on identified complex event patterns. We provide an integrated domain-specific language with precise semantics for capturing complex event patterns and streaming transformations together with an execution engine, all of which is now part of the Viatra reactive transformation framework. We demonstrate the feasibility of our approach with two case studies: one in an advanced model engineering workflow; and one in the context of on-the-fly gesture recognition. {\textcopyright} 2016, The Author(s).";2018;"@ARTICLE{David2018,
  author = {D{\'{a}}vid, I and R{\'{a}}th, I and Varr{\'{o}}, D},
  journal = {Software and Systems Modeling},
  title = {{Foundations for Streaming Model Transformations by Complex Event Processing}},
  year = {2018},
  abstract = {Streaming model transformations represent a novel class of transformations to manipulate models whose elements are continuously produced or modified in high volume and with rapid rate of change. Executing streaming transformations requires efficient techniques to recognize activated transformation rules over a live model and a potentially infinite stream of events. In this paper, we propose foundations of streaming model transformations by innovatively integrating incremental model query, complex event processing (CEP) and reactive (event-driven) transformation techniques. Complex event processing allows to identify relevant patterns and sequences of events over an event stream. Our approach enables event streams to include model change events which are automatically and continuously populated by incremental model queries. Furthermore, a reactive rule engine carries out transformations on identified complex event patterns. We provide an integrated domain-specific language with precise semantics for capturing complex event patterns and streaming transformations together with an execution engine, all of which is now part of the Viatra reactive transformation framework. We demonstrate the feasibility of our approach with two case studies: one in an advanced model engineering workflow; and one in the context of on-the-fly gesture recognition. {\textcopyright} 2016, The Author(s).},
  annote = {cited By 3},
  number = {1},
  pages = {135--162},
  volume = {17},
  doi = {10.1007/s10270-016-0533-1},
  paper = {http://dx.doi.org/10.1007/s10270-016-0533-1}
}"
315;David2016a;"Towards inconsistency tolerance by quantification of semantic inconsistencies";;"<p><b><i>ARTICLE</i>(David2016a)</b></p>
<p>I. D&aacute;vid., E. Syriani., C. Verbrugge., D. Buchs., D. Blouin., A. Cicchetti., and K. Vanherpen. Towards inconsistency tolerance by quantification of semantic inconsistencies. <i>CEUR Workshop Proceedings</i>: 1717, pp. 35&#8211;44 (2016).</p>
<p><center>cited By 2</center></p>";"Due to the increase of their complexity, currently engineered systems cannot be developed by one individual, but are a product of a collaboration between multiple stakeholders who develop the system from different domain-specific views. Inconsistencies between views, however, hinder collaboration and therefore, must be managed. Since the encountered inconsistencies may potentially disappear as the natural consequence of a design workflow, tolerating them to a given extent may be desirable and can lead to a more efficient collaboration. A key to reason about tolerance is the quantification of the impact of single inconsistencies on the overall system design. In this paper we present a quantification model for semantic inconsistencies in discrete and continuous systems. We investigate characteristic behavioral patterns of inconsistencies based on this model and identify the links with various forms of tolerance. Finally, we discuss the directions of further expanding the approach required for a comprehensive inconsistency tolerance technique.";2016;"@ARTICLE{David2016a,
  author = {D{\'{a}}vid, I and Syriani, E and Verbrugge, C and Buchs, D and Blouin, D and Cicchetti, A and Vanherpen, K},
  journal = {CEUR Workshop Proceedings},
  title = {{Towards inconsistency tolerance by quantification of semantic inconsistencies}},
  year = {2016},
  abstract = {Due to the increase of their complexity, currently engineered systems cannot be developed by one individual, but are a product of a collaboration between multiple stakeholders who develop the system from different domain-specific views. Inconsistencies between views, however, hinder collaboration and therefore, must be managed. Since the encountered inconsistencies may potentially disappear as the natural consequence of a design workflow, tolerating them to a given extent may be desirable and can lead to a more efficient collaboration. A key to reason about tolerance is the quantification of the impact of single inconsistencies on the overall system design. In this paper we present a quantification model for semantic inconsistencies in discrete and continuous systems. We investigate characteristic behavioral patterns of inconsistencies based on this model and identify the links with various forms of tolerance. Finally, we discuss the directions of further expanding the approach required for a comprehensive inconsistency tolerance technique.},
  annote = {cited By 2},
  pages = {35--44},
  volume = {1717}
}"
316;Deantoni2015;"Domain globalization: Using languages to support technical and social coordination";http://dx.doi.org/10.1007/978-3-319-26172-0_5;"<p><b><i>ARTICLE</i>(Deantoni2015)</b></p>
<p>J. Deantoni., C. Brun., B. Caillaud., R. B. France., G. Karsai., O. Nierstrasz., and E. Syriani. Domain globalization: Using languages to support technical and social coordination. <i>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</i>: 9400, pp. 70&#8211;87 (2015).</p>
<p><center>cited By 2</center></p>";"When a project is realized in a globalized environment, multiple stakeholders from different organizations work on the same system. Depending on the stakeholders and their organizations, various (possibly overlapping) concerns are raised in the development of the system. In this context a Domain Specific Language (DSL) supports the work of a group of stakeholders who are responsible for addressing a specific set of concerns. This chapter identifies the open challenges arising from the coordination of globalized domain-specific languages. We identify two types of coordination: technical coordination and social coordination. After presenting an overview of the current state of the art, we discuss first the open challenges arising from the composition of multiple DSLs, and then the open challenges associated to the collaboration in a globalized environment. {\textcopyright} Springer International Publishing Switzerland 2015.";2015;"@ARTICLE{Deantoni2015,
  author = {Deantoni, J and Brun, C and Caillaud, B and France, R B and Karsai, G and Nierstrasz, O and Syriani, E},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  title = {{Domain globalization: Using languages to support technical and social coordination}},
  year = {2015},
  abstract = {When a project is realized in a globalized environment, multiple stakeholders from different organizations work on the same system. Depending on the stakeholders and their organizations, various (possibly overlapping) concerns are raised in the development of the system. In this context a Domain Specific Language (DSL) supports the work of a group of stakeholders who are responsible for addressing a specific set of concerns. This chapter identifies the open challenges arising from the coordination of globalized domain-specific languages. We identify two types of coordination: technical coordination and social coordination. After presenting an overview of the current state of the art, we discuss first the open challenges arising from the composition of multiple DSLs, and then the open challenges associated to the collaboration in a globalized environment. {\textcopyright} Springer International Publishing Switzerland 2015.},
  annote = {cited By 2},
  pages = {70--87},
  volume = {9400},
  doi = {10.1007/978-3-319-26172-0_5},
  paper = {http://dx.doi.org/10.1007/978-3-319-26172-0_5}
}"
317;Denil2017;"DEVS for AUTOSAR-based system deployment modeling and simulation";http://dx.doi.org/10.1177/0037549716684552;"<p><b><i>ARTICLE</i>(Denil2017)</b></p>
<p>J. Denil., P. De Meulenaere., S. Demeyer., and H. Vangheluwe. DEVS for AUTOSAR-based system deployment modeling and simulation. <i>Simulation</i>: 93(6), pp. 489&#8211;513 (2017).</p>
<p><center>cited By 1</center></p>";"AUTOSAR (AUTomotive Open System ARchitecture) is an open and standardized automotive software architecture, developed by automobile manufacturers, suppliers, and tool developers. Its design is a direct consequence of the increasingly important role played by software in vehicles. As design choices during the software deployment phase have a large impact on the behavior of the system, designers need to explore various trade-offs. Examples of such design choices are the mapping of software components to processors, the priorities of tasks and messages, and buffer allocation. In this paper, we evaluate the appropriateness of DEVS, the Discrete-Event System specification, for modeling and subsequent performance evaluation of AUTOSAR-based systems. Moreover, a DEVS simulation model is constructed for AUTOSAR-based electronic control units connected by a communication bus. To aid developers in evaluating a deployment solution, the simulation model is extended with co-simulation with a plant and environment model, evaluation at different levels of detail, and fault injection. Finally, we examine how the simulation model supports the relationship between the supplier and the original equipment manufacturer in the automotive industry. We demonstrate and validate our work by means of a power window case study. {\textcopyright} Simulation Councils Inc.";2017;"@ARTICLE{Denil2017,
  author = {Denil, J and {De Meulenaere}, P and Demeyer, S and Vangheluwe, H},
  journal = {Simulation},
  title = {{DEVS for AUTOSAR-based system deployment modeling and simulation}},
  year = {2017},
  abstract = {AUTOSAR (AUTomotive Open System ARchitecture) is an open and standardized automotive software architecture, developed by automobile manufacturers, suppliers, and tool developers. Its design is a direct consequence of the increasingly important role played by software in vehicles. As design choices during the software deployment phase have a large impact on the behavior of the system, designers need to explore various trade-offs. Examples of such design choices are the mapping of software components to processors, the priorities of tasks and messages, and buffer allocation. In this paper, we evaluate the appropriateness of DEVS, the Discrete-Event System specification, for modeling and subsequent performance evaluation of AUTOSAR-based systems. Moreover, a DEVS simulation model is constructed for AUTOSAR-based electronic control units connected by a communication bus. To aid developers in evaluating a deployment solution, the simulation model is extended with co-simulation with a plant and environment model, evaluation at different levels of detail, and fault injection. Finally, we examine how the simulation model supports the relationship between the supplier and the original equipment manufacturer in the automotive industry. We demonstrate and validate our work by means of a power window case study. {\textcopyright} Simulation Councils Inc.},
  annote = {cited By 1},
  number = {6},
  pages = {489--513},
  volume = {93},
  doi = {10.1177/0037549716684552},
  paper = {http://dx.doi.org/10.1177/0037549716684552}
}"
318;Denil2017a;"Towards agile model-based systems engineering";;"<p><b><i>ARTICLE</i>(Denil2017a)</b></p>
<p>J. Denil., R. Salay., C. Paredis., and H. Vangheluwe. Towards agile model-based systems engineering. <i>CEUR Workshop Proceedings</i>: 2019, pp. 424&#8211;429 (2017).</p>
<p><center>cited By 0</center></p>";"Engineering organisations following a traditional development process often suffer from under-specified requirements and from poor responsiveness to changes in those requirements during the course of a project. Furthermore, these organizations need to deliver highly dependable products and decrease time-to-market. In the software engineering community, Agile methods have been proposed to address similar issues. Pilot projects that apply agile approaches in Cyber-Physical Systems (CPS) engineering have reported some success. This position paper studies the challenges faced when adopting an agile process to design CPS. These challenges are broken down into their essential components and solutions are proposed, both pertaining to model/simulation management and to processes.";2017;"@ARTICLE{Denil2017a,
  author = {Denil, J and Salay, R and Paredis, C and Vangheluwe, H},
  journal = {CEUR Workshop Proceedings},
  title = {{Towards agile model-based systems engineering}},
  year = {2017},
  abstract = {Engineering organisations following a traditional development process often suffer from under-specified requirements and from poor responsiveness to changes in those requirements during the course of a project. Furthermore, these organizations need to deliver highly dependable products and decrease time-to-market. In the software engineering community, Agile methods have been proposed to address similar issues. Pilot projects that apply agile approaches in Cyber-Physical Systems (CPS) engineering have reported some success. This position paper studies the challenges faced when adopting an agile process to design CPS. These challenges are broken down into their essential components and solutions are proposed, both pertaining to model/simulation management and to processes.},
  annote = {cited By 0},
  pages = {424--429},
  volume = {2019}
}"
319;Derler2012;"Modeling Cyber \#x2013;Physical Systems";http://dx.doi.org/10.1109/JPROC.2011.2160929;"<p><b><i>ARTICLE</i>(Derler2012)</b></p>
<p>P. Derler., E. A. Lee., and A. S. Vincentelli. Modeling Cyber \#x2013;Physical Systems. <i>Proceedings of the IEEE</i>: 100(1), pp. 13&#8211;28, jan (2012).</p>
<p><center></center></p>";"This paper focuses on the challenges of modeling cyber-physical systems (CPSs) that arise from the intrinsic heterogeneity, concurrency, and sensitivity to timing of such systems. It uses a portion of an aircraft vehicle management system (VMS), specifically the fuel management subsystem, to illustrate the challenges, and then discusses technologies that at least partially address the challenges. Specific technologies described include hybrid system modeling and simulation, concurrent and heterogeneous models of computation, the use of domain-specific ontologies to enhance modularity, and the joint modeling of functionality and implementation architectures.";2012;"@ARTICLE{Derler2012,
  author = {Derler, P and Lee, E A and Vincentelli, A Sangiovanni},
  journal = {Proceedings of the IEEE},
  title = {{Modeling Cyber {\#}x2013;Physical Systems}},
  year = {2012},
  abstract = {This paper focuses on the challenges of modeling cyber-physical systems (CPSs) that arise from the intrinsic heterogeneity, concurrency, and sensitivity to timing of such systems. It uses a portion of an aircraft vehicle management system (VMS), specifically the fuel management subsystem, to illustrate the challenges, and then discusses technologies that at least partially address the challenges. Specific technologies described include hybrid system modeling and simulation, concurrent and heterogeneous models of computation, the use of domain-specific ontologies to enhance modularity, and the joint modeling of functionality and implementation architectures.},
  month = {jan},
  number = {1},
  pages = {13--28},
  volume = {100},
  doi = {10.1109/JPROC.2011.2160929},
  paper = {http://dx.doi.org/10.1109/JPROC.2011.2160929}
}"
320;Dhungana2015;"Smart factory product lines: A configuration perspective on smart production ecosystems";http://dx.doi.org/10.1145/2791060.2791066;"<p><b><i>ARTICLE</i>(Dhungana2015)</b></p>
<p>D. Dhungana., A. Falkner., A. Haselb&ouml;ck., and H. Schreiner. Smart factory product lines: A configuration perspective on smart production ecosystems. <i>ACM International ARTICLE Proceeding Series</i>: 20-24-July-2015, pp. 201&#8211;210 (2015).</p>
<p><center>cited By 4</center></p>";"Smart production aims to increase the flexibility of the production processes and be more efficient in the use of resources. Two important pillars of this initiative are ""smart products"" and ""smart factories"". From the perspective of product line engineering, these can be seen as two product lines (product line of factories and product line of goods) that need to be integrated for a common systems engineering approach. In this paper, we look at this problem from the perspective of configuration technologies, outline the research challenges in this area and illustrate our vision using an industrial example. The factory product line goes handin- hand with the product line of the products to be manufactured. Future research in product line engineering needs to consider an ecosystem of a multitude of stakeholders - e.g., factory component vendors, product designers, factory owners/operators and end-consumers. {\textcopyright} 2015 ACM.";2015;"@ARTICLE{Dhungana2015,
  author = {Dhungana, D and Falkner, A and Haselb{\"{o}}ck, A and Schreiner, H},
  journal = {ACM International ARTICLE Proceeding Series},
  title = {{Smart factory product lines: A configuration perspective on smart production ecosystems}},
  year = {2015},
  abstract = {Smart production aims to increase the flexibility of the production processes and be more efficient in the use of resources. Two important pillars of this initiative are ""smart products"" and ""smart factories"". From the perspective of product line engineering, these can be seen as two product lines (product line of factories and product line of goods) that need to be integrated for a common systems engineering approach. In this paper, we look at this problem from the perspective of configuration technologies, outline the research challenges in this area and illustrate our vision using an industrial example. The factory product line goes handin- hand with the product line of the products to be manufactured. Future research in product line engineering needs to consider an ecosystem of a multitude of stakeholders - e.g., factory component vendors, product designers, factory owners/operators and end-consumers. {\textcopyright} 2015 ACM.},
  annote = {cited By 4},
  pages = {201--210},
  volume = {20-24-July-2015},
  doi = {10.1145/2791060.2791066},
  paper = {http://dx.doi.org/10.1145/2791060.2791066}
}"
321;DiNatale2014;"An MDA approach for the generation of communication adapters integrating SW and FW components from simulink";;"<p><b><i>ARTICLE</i>(DiNatale2014)</b></p>
<p>M. Di Natale., F. Chirico., A. Sindico., and A. Sangiovanni-Vincentelli. An MDA approach for the generation of communication adapters integrating SW and FW components from simulink. <i>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</i>: 8767, pp. 353&#8211;369 (2014).</p>
<p><center>cited By 2</center></p>";"We present the tools, metamodels and code generation techniques in use at Elettronica SpA for the development of communication adapters for software and firmware systems from heterogeneous models. The process start from a SysML system model, developed according to the platform-based design (PBD) paradigm, in which a functional model of the system is paired to a model of the execution platform. Subsystems are refined as Simulink models or hand coded in C++. In turn, Simulink models are implemented as software code or firmware on FPGA, and an automatic generation of the implementation is obtained. Based on the SysML system architecture specification, our framework drives the generation of Simulink models with consistent interfaces, allows the automatic generation of the communication code among all subsystems (including the HW-FW interface code). {\textcopyright} Springer International Publishing Switzerland 2014";2014;"@ARTICLE{DiNatale2014,
  author = {{Di Natale}, M and Chirico, F and Sindico, A and Sangiovanni-Vincentelli, A},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  title = {{An MDA approach for the generation of communication adapters integrating SW and FW components from simulink}},
  year = {2014},
  abstract = {We present the tools, metamodels and code generation techniques in use at Elettronica SpA for the development of communication adapters for software and firmware systems from heterogeneous models. The process start from a SysML system model, developed according to the platform-based design (PBD) paradigm, in which a functional model of the system is paired to a model of the execution platform. Subsystems are refined as Simulink models or hand coded in C++. In turn, Simulink models are implemented as software code or firmware on FPGA, and an automatic generation of the implementation is obtained. Based on the SysML system architecture specification, our framework drives the generation of Simulink models with consistent interfaces, allows the automatic generation of the communication code among all subsystems (including the HW-FW interface code). {\textcopyright} Springer International Publishing Switzerland 2014},
  annote = {cited By 2},
  pages = {353--369},
  volume = {8767}
}"
322;DiNatale2018;"A Model-based approach for the synthesis of software to firmware adapters for use with automatically generated components";http://dx.doi.org/10.1007/s10270-016-0534-0;"<p><b><i>ARTICLE</i>(DiNatale2018)</b></p>
<p>M. Di Natale., D. Perillo., F. Chirico., A. Sindico., and A. Sangiovanni-Vincentelli. A Model-based approach for the synthesis of software to firmware adapters for use with automatically generated components. <i>Software and Systems Modeling</i>: 17(1), pp. 11&#8211;33 (2018).</p>
<p><center>cited By 0</center></p>";"This paper presents the MDE process in use at Elettronica SpA (ELT) for the development of complex embedded systems integrating software and firmware. The process is based on the adoption of SysML as the system-level modeling language and the use of Simulink for the refinement of selected subsystems. Implementations are generated automatically for both the software (C++ code) and firmware parts, and communication adapters are automatically generated from SysML using a dedicated profile and open-source tools for modeling and code generation. The process starts from a SysML system model, developed according to the platform-based design paradigm, in which a functional model of the system is paired to a model of the execution platform. Subsystems are refined as Simulink models or hand-coded in C++. An implementation for Simulink models is generated as software code or firmware on FPGA. Based on the SysML system architecture specification, our framework drives the generation of Simulink models with consistent interfaces, allows the automatic generation of the communication code among all subsystems (including the HW\endashFW interface code). In addition, it provides for the automatic generation of connectors for system-level simulation and of test harnesses and mockups to ease the integration and verification stage. We provide early results on the time savings obtained by using these technologies in the development process. {\textcopyright} 2016, Springer-Verlag Berlin Heidelberg.";2018;"@ARTICLE{DiNatale2018,
  author = {{Di Natale}, M and Perillo, D and Chirico, F and Sindico, A and Sangiovanni-Vincentelli, A},
  journal = {Software and Systems Modeling},
  title = {{A Model-based approach for the synthesis of software to firmware adapters for use with automatically generated components}},
  year = {2018},
  abstract = {This paper presents the MDE process in use at Elettronica SpA (ELT) for the development of complex embedded systems integrating software and firmware. The process is based on the adoption of SysML as the system-level modeling language and the use of Simulink for the refinement of selected subsystems. Implementations are generated automatically for both the software (C++ code) and firmware parts, and communication adapters are automatically generated from SysML using a dedicated profile and open-source tools for modeling and code generation. The process starts from a SysML system model, developed according to the platform-based design paradigm, in which a functional model of the system is paired to a model of the execution platform. Subsystems are refined as Simulink models or hand-coded in C++. An implementation for Simulink models is generated as software code or firmware on FPGA. Based on the SysML system architecture specification, our framework drives the generation of Simulink models with consistent interfaces, allows the automatic generation of the communication code among all subsystems (including the HW\endashFW interface code). In addition, it provides for the automatic generation of connectors for system-level simulation and of test harnesses and mockups to ease the integration and verification stage. We provide early results on the time savings obtained by using these technologies in the development process. {\textcopyright} 2016, Springer-Verlag Berlin Heidelberg.},
  annote = {cited By 0},
  number = {1},
  pages = {11--33},
  volume = {17},
  doi = {10.1007/s10270-016-0534-0},
  paper = {http://dx.doi.org/10.1007/s10270-016-0534-0}
}"
323;Durak2017;"System entity structure and model base framework in model based engineering of simulations for technical systems";;"<p><b><i>ARTICLE</i>(Durak2017)</b></p>
<p>U. Durak., T. Pawletta., H. Oguztuzun., and B. P. Zeigler. System entity structure and model base framework in model based engineering of simulations for technical systems. <i>Simulation Series</i>: 49(7), pp. 1&#8211;10 (2017).</p>
<p><center>cited By 0</center></p>";"Model-based engineering is defined as the pragmatic utilization of model-based practices, namely, modeling, metamodeling and model transformations in various steps of engineering. In the last decade, the simulation of technical systems has leveraged graphical modeling and model-to-text transformations, but metamodeling and model transformation practices have not become widely accessible. Thereby, the benefits of employed model-driven approaches have been limited. System Entity Structures are directed labelled graphs that were proposed in the 1980s for specifying a family of system configurations for modular and hierarchical systems. The System Entity Structure and Model Base (SES/MB) framework combines the SES ontology with the classical workflow of modeling for an interactive or automatic generation of executable simulation models. After reviewing comparable approaches in software engineering, this paper discusses the application of SES/MB framework for metamodeling and model transformations for model-based engineering of simulations of technical systems. {\textcopyright}2017 Society for Modeling {\&} Simulation International (SCS).";2017;"@ARTICLE{Durak2017,
  author = {Durak, U and Pawletta, T and Oguztuzun, H and Zeigler, B P},
  journal = {Simulation Series},
  title = {{System entity structure and model base framework in model based engineering of simulations for technical systems}},
  year = {2017},
  abstract = {Model-based engineering is defined as the pragmatic utilization of model-based practices, namely, modeling, metamodeling and model transformations in various steps of engineering. In the last decade, the simulation of technical systems has leveraged graphical modeling and model-to-text transformations, but metamodeling and model transformation practices have not become widely accessible. Thereby, the benefits of employed model-driven approaches have been limited. System Entity Structures are directed labelled graphs that were proposed in the 1980s for specifying a family of system configurations for modular and hierarchical systems. The System Entity Structure and Model Base (SES/MB) framework combines the SES ontology with the classical workflow of modeling for an interactive or automatic generation of executable simulation models. After reviewing comparable approaches in software engineering, this paper discusses the application of SES/MB framework for metamodeling and model transformations for model-based engineering of simulations of technical systems. {\textcopyright}2017 Society for Modeling {\&} Simulation International (SCS).},
  annote = {cited By 0},
  number = {7},
  pages = {1--10},
  volume = {49}
}"
324;Falkner2018;"Model-driven performance prediction of systems of systems";http://dx.doi.org/10.1007/s10270-016-0547-8;"<p><b><i>ARTICLE</i>(Falkner2018)</b></p>
<p>K. Falkner., C. Szabo., V. Chiprianov., G. Puddy., M. Rieckmann., D. Fraser., and C. Aston. Model-driven performance prediction of systems of systems. <i>Software and Systems Modeling</i>: 17(2), pp. 415&#8211;441 (2018).</p>
<p><center>cited By 1</center></p>";"Systems of systems exhibit characteristics that pose difficulty in modelling and predicting their overall performance capabilities, including the presence of operational independence, emergent behaviour, and evolutionary development. When considering systems of systems within the autonomous defence systems context, these aspects become increasingly critical, as constraints on the performance of the final system are typically driven by hard constraints on space, weight and power. System execution modelling languages and tools permit early prediction of the performance of model-driven systems; however, the focus to date has been on understanding the performance of a model rather than determining whether it meets performance requirements, and only subsequently carrying out analysis to reveal the causes of any requirement violations. Moreover, such an analysis is even more difficult when applied to several systems cooperating to achieve a common goal\emdasha system of systems. In this article, we propose an integrated approach to performance prediction of model-driven real-time embedded defence systems and systems of systems. Our architectural prototyping system supports a scenario-driven experimental platform for evaluating model suitability within a set of deployment and real-time performance constraints. We present an overview of our performance prediction system, demonstrating the integration of modelling, execution and performance analysis, and discuss a case study to illustrate our approach. {\textcopyright} 2016, Springer-Verlag Berlin Heidelberg.";2018;"@ARTICLE{Falkner2018,
  author = {Falkner, K and Szabo, C and Chiprianov, V and Puddy, G and Rieckmann, M and Fraser, D and Aston, C},
  journal = {Software and Systems Modeling},
  title = {{Model-driven performance prediction of systems of systems}},
  year = {2018},
  abstract = {Systems of systems exhibit characteristics that pose difficulty in modelling and predicting their overall performance capabilities, including the presence of operational independence, emergent behaviour, and evolutionary development. When considering systems of systems within the autonomous defence systems context, these aspects become increasingly critical, as constraints on the performance of the final system are typically driven by hard constraints on space, weight and power. System execution modelling languages and tools permit early prediction of the performance of model-driven systems; however, the focus to date has been on understanding the performance of a model rather than determining whether it meets performance requirements, and only subsequently carrying out analysis to reveal the causes of any requirement violations. Moreover, such an analysis is even more difficult when applied to several systems cooperating to achieve a common goal\emdasha system of systems. In this article, we propose an integrated approach to performance prediction of model-driven real-time embedded defence systems and systems of systems. Our architectural prototyping system supports a scenario-driven experimental platform for evaluating model suitability within a set of deployment and real-time performance constraints. We present an overview of our performance prediction system, demonstrating the integration of modelling, execution and performance analysis, and discuss a case study to illustrate our approach. {\textcopyright} 2016, Springer-Verlag Berlin Heidelberg.},
  annote = {cited By 1},
  number = {2},
  pages = {415--441},
  volume = {17},
  doi = {10.1007/s10270-016-0547-8},
  paper = {http://dx.doi.org/10.1007/s10270-016-0547-8}
}"
325;Fitzgerald2014;"Collaborative design for embedded systems: Co-modelling and co-simulation";http://dx.doi.org/10.1007/978-3-642-54118-6;"<p><b><i>BOOK</i>(Fitzgerald2014)</b></p>
<p>J. Fitzgerald., P. G. Larsen., and M. Verhoef. <i>Collaborative design for embedded systems: Co-modelling and co-simulation</i>. Springer Berlin Heidelberg (2014).</p>
<p><center>cited By 21</center></p>";"One of the most significant challenges in the development of embedded and cyber-physical systems is the gap between the disciplines of software and control engineering. In a marketplace, where rapid innovation is essential, engineers from both disciplines need to be able to explore system designs collaboratively, allocating responsibilities to software and physical elements, and analyzing trade-offs between them. To this end, this book presents a framework that allows the very different kinds of design models - discrete-event (DE) models of software and continuous time (CT) models of the physical environment - to be analyzed and simulated jointly, based on common scenarios. The individual chapters provide introductions to both sides of this co-simulation technology, and give a step-by-step guide to the methodology for designing and analyzing co-models. They are grouped into three parts: Part I introduces the technical basis for collaborative modeling and simulation with the Crescendo technology. Part II continues with different methodological guidelines for creating co-models and analyzing them in different ways using case studies. Part III then delves into more advanced topics and looks into the potential future of this technology in the area of cyber-physical systems. Finally various appendices provide summaries of the VDM and 20-sim technologies, a number of valuable design patterns applicable for co-models, and an acronym list along with indices and references to other literature. By combining descriptions of the underlying theory with records of real engineers' experience in using the framework on a series of case studies the book appeals to scientists and practitioners alike. It is complemented by tools, examples, videos, and other material on www.crescendotool.org. Scientists/researchers and graduate students working in embedded and cyber-physical systems will learn the semantic foundations for collaborative modeling and simulation, as well as the current capabilities and limitations of methods and tools in this field. Practitioners will be able to develop an appreciation of the capabilities of the co-modeling techniques, to assess the benefits of more collaborative approaches to modeling and simulation, and will benefit from the included guidelines and modeling patterns. {\textcopyright} Springer-Verlag Berlin Heidelberg 2014.";2014;"@BOOK{Fitzgerald2014,
  author = {Fitzgerald, J and Larsen, P G and Verhoef, M},
  publisher = {Springer Berlin Heidelberg},
  title = {{Collaborative design for embedded systems: Co-modelling and co-simulation}},
  year = {2014},
  abstract = {One of the most significant challenges in the development of embedded and cyber-physical systems is the gap between the disciplines of software and control engineering. In a marketplace, where rapid innovation is essential, engineers from both disciplines need to be able to explore system designs collaboratively, allocating responsibilities to software and physical elements, and analyzing trade-offs between them. To this end, this book presents a framework that allows the very different kinds of design models - discrete-event (DE) models of software and continuous time (CT) models of the physical environment - to be analyzed and simulated jointly, based on common scenarios. The individual chapters provide introductions to both sides of this co-simulation technology, and give a step-by-step guide to the methodology for designing and analyzing co-models. They are grouped into three parts: Part I introduces the technical basis for collaborative modeling and simulation with the Crescendo technology. Part II continues with different methodological guidelines for creating co-models and analyzing them in different ways using case studies. Part III then delves into more advanced topics and looks into the potential future of this technology in the area of cyber-physical systems. Finally various appendices provide summaries of the VDM and 20-sim technologies, a number of valuable design patterns applicable for co-models, and an acronym list along with indices and references to other literature. By combining descriptions of the underlying theory with records of real engineers' experience in using the framework on a series of case studies the book appeals to scientists and practitioners alike. It is complemented by tools, examples, videos, and other material on www.crescendotool.org. Scientists/researchers and graduate students working in embedded and cyber-physical systems will learn the semantic foundations for collaborative modeling and simulation, as well as the current capabilities and limitations of methods and tools in this field. Practitioners will be able to develop an appreciation of the capabilities of the co-modeling techniques, to assess the benefits of more collaborative approaches to modeling and simulation, and will benefit from the included guidelines and modeling patterns. {\textcopyright} Springer-Verlag Berlin Heidelberg 2014.},
  annote = {cited By 21},
  doi = {10.1007/978-3-642-54118-6},
  paper = {http://dx.doi.org/10.1007/978-3-642-54118-6}
}"
326;Fitzgerald2014a;"Collaborative development of dependable cyber- physical systems by co- modeling and co-simulation";http://dx.doi.org/10.4018/978-1-4666-6194-3.ch001;"<p><b><i>BOOK</i>(Fitzgerald2014a)</b></p>
<p>J. Fitzgerald., K. Pierce., and P. G. Larsen. <i>Collaborative development of dependable cyber- physical systems by co- modeling and co-simulation</i>. IGI Global (2014).</p>
<p><center>cited By 0</center></p>";"The pace of innovation in Cyber-Physical Systems (CPSs) drives the need for multi-disciplinary methods and tools to support rapid and accurate assessment of design alternatives. In this chapter, the authors describe collaborative models (co-models) that link Discrete-Event (DE) models of control software with Continuous-Time (CT) models of controlled plant. They present methods and tools for co-modeling using VDM as the DE formalism, and bond graphs on the CT side, using the Crescendo platform to link existing simulators (Overture for VDM and 20-sim for bond graphs). The authors discuss the exploitation of co-models within the design flow, including their use with SysML, and the roles of Software-in the-Loop and Hardware-in-the-Loop simulation on the way to realising co-models in cyber and physical media. The authors identify research challenges in providing sufficient model fidelity and the evidence needed to support the engineering of certifiably dependable systems. {\textcopyright} 2014 by IGI Global. All rights reserved.";2014;"@BOOK{Fitzgerald2014a,
  author = {Fitzgerald, J and Pierce, K and Larsen, P G},
  publisher = {IGI Global},
  title = {{Collaborative development of dependable cyber- physical systems by co- modeling and co-simulation}},
  year = {2014},
  abstract = {The pace of innovation in Cyber-Physical Systems (CPSs) drives the need for multi-disciplinary methods and tools to support rapid and accurate assessment of design alternatives. In this chapter, the authors describe collaborative models (co-models) that link Discrete-Event (DE) models of control software with Continuous-Time (CT) models of controlled plant. They present methods and tools for co-modeling using VDM as the DE formalism, and bond graphs on the CT side, using the Crescendo platform to link existing simulators (Overture for VDM and 20-sim for bond graphs). The authors discuss the exploitation of co-models within the design flow, including their use with SysML, and the roles of Software-in the-Loop and Hardware-in-the-Loop simulation on the way to realising co-models in cyber and physical media. The authors identify research challenges in providing sufficient model fidelity and the evidence needed to support the engineering of certifiably dependable systems. {\textcopyright} 2014 by IGI Global. All rights reserved.},
  annote = {cited By 0},
  doi = {10.4018/978-1-4666-6194-3.ch001},
  paper = {http://dx.doi.org/10.4018/978-1-4666-6194-3.ch001}
}"
327;Flammini2009;"Models for the analysis of critical systems [Modelli per l'analisi di sistemi critici]";;"<p><b><i>ARTICLE</i>(Flammini2009)</b></p>
<p>F. Flammini., N. Mazzocca., and V. Vittorini. Models for the analysis of critical systems Modelli per l'analisi di sistemi critici. <i>Mondo Digitale</i>: 8(3), pp. 11&#8211;21 (2009).</p>
<p><center>cited By 2</center></p>";;2009;"@ARTICLE{Flammini2009,
  author = {Flammini, F and Mazzocca, N and Vittorini, V},
  journal = {Mondo Digitale},
  title = {{Models for the analysis of critical systems [Modelli per l'analisi di sistemi critici]}},
  year = {2009},
  annote = {cited By 2},
  number = {3},
  pages = {11--21},
  volume = {8}
}"
328;Kappel2012;"Model transformation by-example: A survey of the first wave";http://dx.doi.org/10.1007/978-3-642-28279-9-15;"<p><b><i>ARTICLE</i>(Kappel2012)</b></p>
<p>G. Kappel., P. Langer., W. Retschitzegger., W. Schwinger., and M. Wimmer. Model transformation by-example: A survey of the first wave. <i>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</i>: 7260 LNCS, pp. 197&#8211;215 (2012).</p>
<p><center>cited By 37</center></p>";"Model-Driven Engineering (MDE) places models as first-class artifacts throughout the software lifecycle. In this context, model transformations are crucial for the success of MDE, being comparable in role and importance to compilers for high-level programming languages. Thus, several model transformation approaches have been developed in the last decade, whereby originally most of them are based on the abstract syntax of modeling languages. However, this implementation specific focus makes it difficult for modelers to develop model transformations, because they are familiar with the concrete syntax but not with its computer internal representation. To tackle this problem, model transformation by-example approaches have been proposed which follow the same fundamental idea as query by-example and programming by-example approaches. Instead of using the computer internal representation of models, examples represented in concrete syntax are used to define transformations. Because different transformation scenarios occur in MDE, different by-example approaches have been developed. This chapter gives an overview on the emerging concepts, techniques, and approaches in this young by-example area. {\textcopyright} 2012 Springer-Verlag Berlin Heidelberg.";2012;"@ARTICLE{Kappel2012,
  author = {Kappel, G and Langer, P and Retschitzegger, W and Schwinger, W and Wimmer, M},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  title = {{Model transformation by-example: A survey of the first wave}},
  year = {2012},
  abstract = {Model-Driven Engineering (MDE) places models as first-class artifacts throughout the software lifecycle. In this context, model transformations are crucial for the success of MDE, being comparable in role and importance to compilers for high-level programming languages. Thus, several model transformation approaches have been developed in the last decade, whereby originally most of them are based on the abstract syntax of modeling languages. However, this implementation specific focus makes it difficult for modelers to develop model transformations, because they are familiar with the concrete syntax but not with its computer internal representation. To tackle this problem, model transformation by-example approaches have been proposed which follow the same fundamental idea as query by-example and programming by-example approaches. Instead of using the computer internal representation of models, examples represented in concrete syntax are used to define transformations. Because different transformation scenarios occur in MDE, different by-example approaches have been developed. This chapter gives an overview on the emerging concepts, techniques, and approaches in this young by-example area. {\textcopyright} 2012 Springer-Verlag Berlin Heidelberg.},
  annote = {cited By 37},
  pages = {197--215},
  volume = {7260 LNCS},
  doi = {10.1007/978-3-642-28279-9-15},
  paper = {http://dx.doi.org/10.1007/978-3-642-28279-9-15}
}"
329;Khaitan2015;"Design Techniques and Applications of Cyberphysical Systems: A Survey";http://dx.doi.org/10.1109/JSYST.2014.2322503;"<p><b><i>ARTICLE</i>(Khaitan2015)</b></p>
<p>S. K. Khaitan. and J. D. McCalley. Design Techniques and Applications of Cyberphysical Systems: A Survey. <i>IEEE Systems Journal</i>: 9(2), pp. 350&#8211;365, jun (2015).</p>
<p><center></center></p>";"Cyberphysical systems (CPSs) are new class of engineered systems that offer close interaction between cyber and physical components. The field of CPS has been identified as a key area of research, and CPSs are expected to play a major role in the design and development of future systems. In this paper, we survey recent advancements made in the development and applications of CPSs. We classify the existing research work based on their characteristics and identify the future challenges. We also discuss the examples of prototypes of CPSs. The aim of this survey is to enable researchers and system designers to get insights into the working and applications of CPSs and motivate them to propose novel solutions for making wide-scale adoption of CPS a tangible reality.";2015;"@ARTICLE{Khaitan2015,
  author = {Khaitan, S K and McCalley, J D},
  journal = {IEEE Systems Journal},
  title = {{Design Techniques and Applications of Cyberphysical Systems: A Survey}},
  year = {2015},
  abstract = {Cyberphysical systems (CPSs) are new class of engineered systems that offer close interaction between cyber and physical components. The field of CPS has been identified as a key area of research, and CPSs are expected to play a major role in the design and development of future systems. In this paper, we survey recent advancements made in the development and applications of CPSs. We classify the existing research work based on their characteristics and identify the future challenges. We also discuss the examples of prototypes of CPSs. The aim of this survey is to enable researchers and system designers to get insights into the working and applications of CPSs and motivate them to propose novel solutions for making wide-scale adoption of CPS a tangible reality.},
  month = {jun},
  number = {2},
  pages = {350--365},
  volume = {9},
  doi = {10.1109/JSYST.2014.2322503},
  paper = {http://dx.doi.org/10.1109/JSYST.2014.2322503}
}"
330;Lee2011;"Heterogeneous actor modeling";http://dx.doi.org/10.1145/2038642.2038646;"<p><b><i>INPROCEEDINGS</i>(Lee2011)</b></p>
<p>E. A. Lee. Heterogeneous actor modeling. <i>2011 Proceedings of the Ninth ACM International Conference on Embedded Software (EMSOFT)</i>. pp. 3&#8211;12. oct (2011).</p>
<p><center></center></p>";"Complex systems demand diversity in the modeling mechanisms. This ``roadmap'' paper prescribes an approach to modeling based on concurrent communicating components (called actors), where a diversity of orchestration strategies govern the execution and interaction of the components. The prescribed approach has been extensively explored in the Ptolemy Project, but as yet is not widely deployed in engineering practice. The approach achieves interaction between diverse models using an abstract semantics, which is a deliberately incomplete semantics that cannot by itself define a useful modeling framework. It instead focuses on the interactions between diverse models, reducing the nature of those interactions to a minimum that achieves a well-defined composition. The actor semantics is an abstract semantics that can handle many heterogeneous models that are built today, and some that are not common today. The actor abstract semantics and many concrete semantics are implemented in Ptolemy II, an open-source software framework.";2011;"@INPROCEEDINGS{Lee2011,
  author = {Lee, E A},
  booktitle = {2011 Proceedings of the Ninth ACM International Conference on Embedded Software (EMSOFT)},
  title = {{Heterogeneous actor modeling}},
  year = {2011},
  abstract = {Complex systems demand diversity in the modeling mechanisms. This ``roadmap'' paper prescribes an approach to modeling based on concurrent communicating components (called actors), where a diversity of orchestration strategies govern the execution and interaction of the components. The prescribed approach has been extensively explored in the Ptolemy Project, but as yet is not widely deployed in engineering practice. The approach achieves interaction between diverse models using an abstract semantics, which is a deliberately incomplete semantics that cannot by itself define a useful modeling framework. It instead focuses on the interactions between diverse models, reducing the nature of those interactions to a minimum that achieves a well-defined composition. The actor semantics is an abstract semantics that can handle many heterogeneous models that are built today, and some that are not common today. The actor abstract semantics and many concrete semantics are implemented in Ptolemy II, an open-source software framework.},
  month = {oct},
  pages = {3--12},
  doi = {10.1145/2038642.2038646},
  paper = {http://dx.doi.org/10.1145/2038642.2038646}
}"
331;Lee2011a;"Component-based design for the future";http://dx.doi.org/10.1109/DATE.2011.5763168;"<p><b><i>INPROCEEDINGS</i>(Lee2011a)</b></p>
<p>E. A. Lee. and A. L. Sangiovanni-Vincentelli. Component-based design for the future. <i>2011 Design, Automation Test in Europe</i>. pp. 1&#8211;5. mar (2011).</p>
<p><center></center></p>";"The specific root causes of the design problems that are haunting system companies such as automotive and avionics companies are complex and relate to a number of issues ranging from design processes and relationships with different departments of the same company and with suppliers to incomplete requirement specification and testing. The issue is the need of a substantive evolution of the design methodology in use today in system companies. The issue to address is the understanding of the principles of system design, the necessary change to design methodologies, and the dynamics of the supply chain. Developing this understanding is necessary to define a sound approach to the needs of the system companies as they try to serve their customers better, to develop their products faster and with higher quality. An important approach to tackle these issues is component-based design.";2011;"@INPROCEEDINGS{Lee2011a,
  author = {Lee, E A and Sangiovanni-Vincentelli, A L},
  booktitle = {2011 Design, Automation Test in Europe},
  title = {{Component-based design for the future}},
  year = {2011},
  abstract = {The specific root causes of the design problems that are haunting system companies such as automotive and avionics companies are complex and relate to a number of issues ranging from design processes and relationships with different departments of the same company and with suppliers to incomplete requirement specification and testing. The issue is the need of a substantive evolution of the design methodology in use today in system companies. The issue to address is the understanding of the principles of system design, the necessary change to design methodologies, and the dynamics of the supply chain. Developing this understanding is necessary to define a sound approach to the needs of the system companies as they try to serve their customers better, to develop their products faster and with higher quality. An important approach to tackle these issues is component-based design.},
  month = {mar},
  pages = {1--5},
  doi = {10.1109/DATE.2011.5763168},
  paper = {http://dx.doi.org/10.1109/DATE.2011.5763168}
}"
332;Lu2018;"Empirical-evolution of frameworks supporting co-simulation tool-chain development";http://dx.doi.org/10.1007/978-3-319-77703-0_80;"<p><b><i>ARTICLE</i>(Lu2018)</b></p>
<p>J. Lu., D. G&uuml;rd&uuml;r., D. Chen., J. Wang., and M. T&ouml;rngren. Empirical-evolution of frameworks supporting co-simulation tool-chain development. <i>Advances in Intelligent Systems and Computing</i>: 745, pp. 813&#8211;828 (2018).</p>
<p><center>cited By 0</center></p>";"Co-simulation has been proposed as a method for facilitating integrated simulation of multi-domain models of Cyber-physical Systems (CPS). To ensure that co-simulations are well-managed, concerns beyond technical mechanisms for co-simulation also need to be addressed during tool-chain development. In this paper, an evolution of two frameworks supporting co-simulation tool-chain development is first introduced. Drawing upon the empirical findings from an initial framework SPIT developed based on model-driven techniques, we develop a service-oriented framework, SPIRIT based on model-driven and tool-integration techniques. Moreover, we propose a 3D viewpoint based method to formalize concept models of co-simulation tool-chains. In order to evaluate the evolution, we use visualizations of related concept models to compare tool-chains developed based on these two frameworks. {\textcopyright} 2018, Springer International Publishing AG, part of Springer Nature.";2018;"@ARTICLE{Lu2018,
  author = {Lu, J and G{\"{u}}rd{\"{u}}r, D and Chen, D.-J. and Wang, J and T{\"{o}}rngren, M},
  journal = {Advances in Intelligent Systems and Computing},
  title = {{Empirical-evolution of frameworks supporting co-simulation tool-chain development}},
  year = {2018},
  abstract = {Co-simulation has been proposed as a method for facilitating integrated simulation of multi-domain models of Cyber-physical Systems (CPS). To ensure that co-simulations are well-managed, concerns beyond technical mechanisms for co-simulation also need to be addressed during tool-chain development. In this paper, an evolution of two frameworks supporting co-simulation tool-chain development is first introduced. Drawing upon the empirical findings from an initial framework SPIT developed based on model-driven techniques, we develop a service-oriented framework, SPIRIT based on model-driven and tool-integration techniques. Moreover, we propose a 3D viewpoint based method to formalize concept models of co-simulation tool-chains. In order to evaluate the evolution, we use visualizations of related concept models to compare tool-chains developed based on these two frameworks. {\textcopyright} 2018, Springer International Publishing AG, part of Springer Nature.},
  annote = {cited By 0},
  pages = {813--828},
  volume = {745},
  doi = {10.1007/978-3-319-77703-0_80},
  paper = {http://dx.doi.org/10.1007/978-3-319-77703-0_80}
}"
333;Lucio2014;"Advances in model-driven security";http://dx.doi.org/10.1016/B978-0-12-800162-2.00003-8;"<p><b><i>ARTICLE</i>(Lucio2014)</b></p>
<p>L. L&uacute;cio., Q. Zhang., P. H. Nguyen., M. Amrani., J. Klein., H. Vangheluwe., and Y. L. Traon. Advances in model-driven security. <i>Advances in Computers</i>: 93, pp. 103&#8211;152 (2014).</p>
<p><center>cited By 11</center></p>";"Sound methodologies for constructing security-critical systems are extremely important in order to confront the increasingly varied security threats. As a response to this need, Model-Driven Security has emerged in the early 2000s as a specialized Model-Driven Engineering approach for supporting the development of security-critical systems.In this chapter we summarize the most important developments of Model-Driven Security during the past decade. In order to do so we start by building a taxonomy of the most important concepts of this domain. We then use our taxonomy to describe and evaluate a set of representative and influential Model-Driven Security approaches in the literature. In our development of this topic we concentrate on the concepts shared by Model-Driven Engineering and Model-Driven Security. This allows us to identify and debate the advantages, disadvantages, and open issues when applying Model-Driven Engineering to the Information Security domain.This chapter provides a broad view of Model-Driven Security and is intended as an introduction to Model-Driven Security for students, researchers, and practitioners. {\textcopyright} 2014 Elsevier Inc.";2014;"@ARTICLE{Lucio2014,
  author = {L{\'{u}}cio, L and Zhang, Q and Nguyen, P H and Amrani, M and Klein, J and Vangheluwe, H and Traon, Y L},
  journal = {Advances in Computers},
  title = {{Advances in model-driven security}},
  year = {2014},
  abstract = {Sound methodologies for constructing security-critical systems are extremely important in order to confront the increasingly varied security threats. As a response to this need, Model-Driven Security has emerged in the early 2000s as a specialized Model-Driven Engineering approach for supporting the development of security-critical systems.In this chapter we summarize the most important developments of Model-Driven Security during the past decade. In order to do so we start by building a taxonomy of the most important concepts of this domain. We then use our taxonomy to describe and evaluate a set of representative and influential Model-Driven Security approaches in the literature. In our development of this topic we concentrate on the concepts shared by Model-Driven Engineering and Model-Driven Security. This allows us to identify and debate the advantages, disadvantages, and open issues when applying Model-Driven Engineering to the Information Security domain.This chapter provides a broad view of Model-Driven Security and is intended as an introduction to Model-Driven Security for students, researchers, and practitioners. {\textcopyright} 2014 Elsevier Inc.},
  annote = {cited By 11},
  pages = {103--152},
  volume = {93},
  doi = {10.1016/B978-0-12-800162-2.00003-8},
  paper = {http://dx.doi.org/10.1016/B978-0-12-800162-2.00003-8}
}"
334;Marrone2013;"Combining heterogeneity, compositionality, and automatic generation in formal modelling";http://dx.doi.org/10.4018/978-1-4666-4659-9.ch002;"<p><b><i>BOOK</i>(Marrone2013)</b></p>
<p>S. Marrone., N. Mazzocca., R. Nardone., and V. Vittorini. <i>Combining heterogeneity, compositionality, and automatic generation in formal modelling</i>. IGI Global (2013).</p>
<p><center>cited By 0</center></p>";"Critical Computer-Based systems have an increasing complexity due to the number of components, to their heterogeneity, and to the relationships among them. Such systems must meet strict non-functional requirements and should be able to cope with competitive market needs. The adoption of formal methods is often advocated in order to provide formal proof, but their application does not scale with the growing size of systems. The aim of this chapter is to introduce a modelling and analysis methodology that allows the combination of three proven research trends in formal modelling of large systems: formal model generation (by means of model-driven techniques), multiformalism, and compositional approaches. In this chapter there is also a discussion about enabling techniques. The proposed approach has been applied to the performability modelling and evaluation of flexible manufacturing systems. {\textcopyright} 2014, IGI Global. All right reserved.";2013;"@BOOK{Marrone2013,
  author = {Marrone, S and Mazzocca, N and Nardone, R and Vittorini, V},
  publisher = {IGI Global},
  title = {{Combining heterogeneity, compositionality, and automatic generation in formal modelling}},
  year = {2013},
  abstract = {Critical Computer-Based systems have an increasing complexity due to the number of components, to their heterogeneity, and to the relationships among them. Such systems must meet strict non-functional requirements and should be able to cope with competitive market needs. The adoption of formal methods is often advocated in order to provide formal proof, but their application does not scale with the growing size of systems. The aim of this chapter is to introduce a modelling and analysis methodology that allows the combination of three proven research trends in formal modelling of large systems: formal model generation (by means of model-driven techniques), multiformalism, and compositional approaches. In this chapter there is also a discussion about enabling techniques. The proposed approach has been applied to the performability modelling and evaluation of flexible manufacturing systems. {\textcopyright} 2014, IGI Global. All right reserved.},
  annote = {cited By 0},
  doi = {10.4018/978-1-4666-4659-9.ch002},
  paper = {http://dx.doi.org/10.4018/978-1-4666-4659-9.ch002}
}"
335;Marshall2015;"Selecting a dynamic simulation modeling method for health care delivery research - Part 2: Report of the ISPOR dynamic simulation modeling emerging good practices task force";http://dx.doi.org/10.1016/j.jval.2015.01.006;"<p><b><i>ARTICLE</i>(Marshall2015)</b></p>
<p>D. A. Marshall., L. Burgos-Liz., M. J. Ijzerman., W. Crown., W. V. Padula., P. K. Wong., K. S. Pasupathy., M. K. Higashi., and N. D. Osgood. Selecting a dynamic simulation modeling method for health care delivery research - Part 2: Report of the ISPOR dynamic simulation modeling emerging good practices task force. <i>Value in Health</i>: 18(2), pp. 147&#8211;160 (2015).</p>
<p><center>cited By 26</center></p>";"In a previous report, the ISPOR Task Force on Dynamic Simulation Modeling Applications in Health Care Delivery Research Emerging Good Practices introduced the fundamentals of dynamic simulation modeling and identified the types of health care delivery problems for which dynamic simulation modeling can be used more effectively than other modeling methods. The hierarchical relationship between the health care delivery system, providers, patients, and other stakeholders exhibits a level of complexity that ought to be captured using dynamic simulation modeling methods. As a tool to help researchers decide whether dynamic simulation modeling is an appropriate method for modeling the effects of an intervention on a health care system, we presented the System, Interactions, Multilevel, Understanding, Loops, Agents, Time, Emergence (SIMULATE) checklist consisting of eight elements. This report builds on the previous work, systematically comparing each of the three most commonly used dynamic simulation modeling methods - system dynamics, discrete-event simulation, and agent-based modeling. We review criteria for selecting the most suitable method depending on 1) the purpose - type of problem and research questions being investigated, 2) the object - scope of the model, and 3) the method to model the object to achieve the purpose. Finally, we provide guidance for emerging good practices for dynamic simulation modeling in the health sector, covering all aspects, from the engagement of decision makers in the model design through model maintenance and upkeep. We conclude by providing some recommendations about the application of these methods to add value to informed decision making, with an emphasis on stakeholder engagement, starting with the problem definition. Finally, we identify areas in which further methodological development will likely occur given the growing ""volume, velocity and variety"" and availability of ""big data"" to provide empirical evidence and techniques such as machine learning for parameter estimation in dynamic simulation models. Upon reviewing this report in addition to using the SIMULATE checklist, the readers should be able to identify whether dynamic simulation modeling methods are appropriate to address the problem at hand and to recognize the differences of these methods from those of other, more traditional modeling approaches such as Markov models and decision trees. This report provides an overview of these modeling methods and examples of health care system problems in which such methods have been useful. The primary aim of the report was to aid decisions as to whether these simulation methods are appropriate to address specific health systems problems. The report directs readers to other resources for further education on these individual modeling methods for system interventions in the emerging field of health care delivery science and implementation. {\textcopyright} 2015 Published by Elsevier Inc.";2015;"@ARTICLE{Marshall2015,
  author = {Marshall, D A and Burgos-Liz, L and Ijzerman, M J and Crown, W and Padula, W V and Wong, P K and Pasupathy, K S and Higashi, M K and Osgood, N D},
  journal = {Value in Health},
  title = {{Selecting a dynamic simulation modeling method for health care delivery research - Part 2: Report of the ISPOR dynamic simulation modeling emerging good practices task force}},
  year = {2015},
  abstract = {In a previous report, the ISPOR Task Force on Dynamic Simulation Modeling Applications in Health Care Delivery Research Emerging Good Practices introduced the fundamentals of dynamic simulation modeling and identified the types of health care delivery problems for which dynamic simulation modeling can be used more effectively than other modeling methods. The hierarchical relationship between the health care delivery system, providers, patients, and other stakeholders exhibits a level of complexity that ought to be captured using dynamic simulation modeling methods. As a tool to help researchers decide whether dynamic simulation modeling is an appropriate method for modeling the effects of an intervention on a health care system, we presented the System, Interactions, Multilevel, Understanding, Loops, Agents, Time, Emergence (SIMULATE) checklist consisting of eight elements. This report builds on the previous work, systematically comparing each of the three most commonly used dynamic simulation modeling methods - system dynamics, discrete-event simulation, and agent-based modeling. We review criteria for selecting the most suitable method depending on 1) the purpose - type of problem and research questions being investigated, 2) the object - scope of the model, and 3) the method to model the object to achieve the purpose. Finally, we provide guidance for emerging good practices for dynamic simulation modeling in the health sector, covering all aspects, from the engagement of decision makers in the model design through model maintenance and upkeep. We conclude by providing some recommendations about the application of these methods to add value to informed decision making, with an emphasis on stakeholder engagement, starting with the problem definition. Finally, we identify areas in which further methodological development will likely occur given the growing ""volume, velocity and variety"" and availability of ""big data"" to provide empirical evidence and techniques such as machine learning for parameter estimation in dynamic simulation models. Upon reviewing this report in addition to using the SIMULATE checklist, the readers should be able to identify whether dynamic simulation modeling methods are appropriate to address the problem at hand and to recognize the differences of these methods from those of other, more traditional modeling approaches such as Markov models and decision trees. This report provides an overview of these modeling methods and examples of health care system problems in which such methods have been useful. The primary aim of the report was to aid decisions as to whether these simulation methods are appropriate to address specific health systems problems. The report directs readers to other resources for further education on these individual modeling methods for system interventions in the emerging field of health care delivery science and implementation. {\textcopyright} 2015 Published by Elsevier Inc.},
  annote = {cited By 26},
  number = {2},
  pages = {147--160},
  volume = {18},
  doi = {10.1016/j.jval.2015.01.006},
  paper = {http://dx.doi.org/10.1016/j.jval.2015.01.006}
}"
336;Metzger2010;"Analytical quality assurance";http://dx.doi.org/10.1007/978-3-642-17599-2_7;"<p><b><i>ARTICLE</i>(Metzger2010)</b></p>
<p>A. Metzger., S. Benbernou., M. Carro., M. Driss., G. Kecskemeti., R. Kazhamiakin., K. Krytikos., A. Mocci., E. Di Nitto., B. Wetzstein., and F. Silvestri. Analytical quality assurance. <i>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</i>: 6500, pp. 209&#8211;270 (2010).</p>
<p><center>cited By 6</center></p>";"As we described in Chapter 1, Services are often provisioned within short-term, volatile and highly dynamic (business) processes. These processes are designed in an abstract manner and when instantiated can involve service providers not known of during the design time of the service-based application. Thus, different from traditional software systems, service-based applications require the composition and coordination of services within highly distributed environments, cutting across the administrative boundaries of various organizations. This chapter provides a review of quality contracts, or more generally, those parts of Service Level Agreements (SLAs) which deal with statements about the services quality levels on which the service requestor and the providers have reached an agreement. Aspects of the contracts, such as the identification of parties, legal obligations and penalties for contract violation, are not covered by this chapter. {\textcopyright} 2010 Springer-Verlag Berlin Heidelberg.";2010;"@ARTICLE{Metzger2010,
  author = {Metzger, A and Benbernou, S and Carro, M and Driss, M and Kecskemeti, G and Kazhamiakin, R and Krytikos, K and Mocci, A and {Di Nitto}, E and Wetzstein, B and Silvestri, F},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  title = {{Analytical quality assurance}},
  year = {2010},
  abstract = {As we described in Chapter 1, Services are often provisioned within short-term, volatile and highly dynamic (business) processes. These processes are designed in an abstract manner and when instantiated can involve service providers not known of during the design time of the service-based application. Thus, different from traditional software systems, service-based applications require the composition and coordination of services within highly distributed environments, cutting across the administrative boundaries of various organizations. This chapter provides a review of quality contracts, or more generally, those parts of Service Level Agreements (SLAs) which deal with statements about the services quality levels on which the service requestor and the providers have reached an agreement. Aspects of the contracts, such as the identification of parties, legal obligations and penalties for contract violation, are not covered by this chapter. {\textcopyright} 2010 Springer-Verlag Berlin Heidelberg.},
  annote = {cited By 6},
  pages = {209--270},
  volume = {6500},
  doi = {10.1007/978-3-642-17599-2_7},
  paper = {http://dx.doi.org/10.1007/978-3-642-17599-2_7}
}"
337;Montalvillo2016;"Requirement-driven evolution in software product lines: A systematic mapping study";http://dx.doi.org/10.1016/j.jss.2016.08.053;"<p><b><i>ARTICLE</i>(Montalvillo2016)</b></p>
<p>L. Montalvillo. and O. D&iacute;az. Requirement-driven evolution in software product lines: A systematic mapping study. <i>Journal of Systems and Software</i>: 122, pp. 110&#8211;143 (2016).</p>
<p><center>cited By 2</center></p>";"CONTEXT. Software Product Lines (SPLs) aim to support the development of a whole family of software products through systematic reuse of shared assets. As SPLs exhibit a long life-span, evolution is an even greater concern than for single-systems. For the purpose of this work, evolution refers to the adaptation of the SPL as a result of changing requirements. Hence, evolution is triggered by requirement changes, and not by bug fixing or refactoring. OBJECTIVE. Research on SPL evolution has not been previously mapped. This work provides a mapping study along Petersen's and Kichenham's guidelines, to identify strong areas of knowledge, trends and gaps. RESULTS. We identified 107 relevant contributions. They were classified according to four facets: evolution activity (e.g., identify, analyze and plan, implement), product-derivation approach (e.g., annotation-based, composition-based), research type (e.g., solution, experience, evaluation), and asset type (i.e., variability model, SPL architecture, code assets and products). CONCLUSION. Analyses of the results indicate that ``Solution proposals'' are the most common type of contribution (31{\%}). Regarding the evolution activity, ``Implement change'' (43{\%}) and ``Analyze and plan change'' (37{\%}) are the most covered ones. A finer-grained analysis uncovered some tasks as being underexposed. A detailed description of the 107 papers is also included. {\textcopyright} 2016 Elsevier Inc.";2016;"@ARTICLE{Montalvillo2016,
  author = {Montalvillo, L and D{\'{i}}az, O},
  journal = {Journal of Systems and Software},
  title = {{Requirement-driven evolution in software product lines: A systematic mapping study}},
  year = {2016},
  abstract = {CONTEXT. Software Product Lines (SPLs) aim to support the development of a whole family of software products through systematic reuse of shared assets. As SPLs exhibit a long life-span, evolution is an even greater concern than for single-systems. For the purpose of this work, evolution refers to the adaptation of the SPL as a result of changing requirements. Hence, evolution is triggered by requirement changes, and not by bug fixing or refactoring. OBJECTIVE. Research on SPL evolution has not been previously mapped. This work provides a mapping study along Petersen's and Kichenham's guidelines, to identify strong areas of knowledge, trends and gaps. RESULTS. We identified 107 relevant contributions. They were classified according to four facets: evolution activity (e.g., identify, analyze and plan, implement), product-derivation approach (e.g., annotation-based, composition-based), research type (e.g., solution, experience, evaluation), and asset type (i.e., variability model, SPL architecture, code assets and products). CONCLUSION. Analyses of the results indicate that ``Solution proposals'' are the most common type of contribution (31{\%}). Regarding the evolution activity, ``Implement change'' (43{\%}) and ``Analyze and plan change'' (37{\%}) are the most covered ones. A finer-grained analysis uncovered some tasks as being underexposed. A detailed description of the 107 papers is also included. {\textcopyright} 2016 Elsevier Inc.},
  annote = {cited By 2},
  pages = {110--143},
  volume = {122},
  doi = {10.1016/j.jss.2016.08.053},
  paper = {http://dx.doi.org/10.1016/j.jss.2016.08.053}
}"
338;Motii2016;"Model-based real-time evaluation of security patterns: A SCADA system case study";http://dx.doi.org/10.1007/978-3-319-45480-1_30;"<p><b><i>ARTICLE</i>(Motii2016)</b></p>
<p>A. Motii., A. Lanusse., B. Hamid., and J. Bruel. Model-based real-time evaluation of security patterns: A SCADA system case study. <i>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</i>: 9923 LNCS, pp. 375&#8211;389 (2016).</p>
<p><center>cited By 1</center></p>";"Securing critical systems such as cyber physical systems (CPS) is an important feature especially when it comes to critical transmitted data. At the same time, the implementation of security counter-measures in such systems may impact other functional or non-functional concerns. In this context, we propose a model-based approach for securing critical systems at early design stage. This approach combines security analysis and mitigation solution proposals with multi-concern architectural evaluation. It exploits two views of security countermeasures patterns: abstract and concrete. The abstract view is used to select relevant solutions to security requirements on a logical point of view. Then, the concrete view helps the architect evaluating different possible implementation alternatives against other design constraints. The modeling is based on accepted OMG standards such as UML and MARTE. In this paper, the approach is illustrated on a SCADA (Supervisory Control and Data Acquisition) system case study and a tool chain based on Papyrus UML supports the approach. {\textcopyright} Springer International Publishing Switzerland 2016.";2016;"@ARTICLE{Motii2016,
  author = {Motii, A and Lanusse, A and Hamid, B and Bruel, J.-M.},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  title = {{Model-based real-time evaluation of security patterns: A SCADA system case study}},
  year = {2016},
  abstract = {Securing critical systems such as cyber physical systems (CPS) is an important feature especially when it comes to critical transmitted data. At the same time, the implementation of security counter-measures in such systems may impact other functional or non-functional concerns. In this context, we propose a model-based approach for securing critical systems at early design stage. This approach combines security analysis and mitigation solution proposals with multi-concern architectural evaluation. It exploits two views of security countermeasures patterns: abstract and concrete. The abstract view is used to select relevant solutions to security requirements on a logical point of view. Then, the concrete view helps the architect evaluating different possible implementation alternatives against other design constraints. The modeling is based on accepted OMG standards such as UML and MARTE. In this paper, the approach is illustrated on a SCADA (Supervisory Control and Data Acquisition) system case study and a tool chain based on Papyrus UML supports the approach. {\textcopyright} Springer International Publishing Switzerland 2016.},
  annote = {cited By 1},
  pages = {375--389},
  volume = {9923 LNCS},
  doi = {10.1007/978-3-319-45480-1_30},
  paper = {http://dx.doi.org/10.1007/978-3-319-45480-1_30}
}"
339;Muller2014;"A conceptual reference model of modeling and verification concepts for hybrid systems";;"<p><b><i>ARTICLE</i>(Muller2014)</b></p>
<p>A. M&uuml;ller., S. Mitsch., W. Retschitzegger., and W. Schwinger. A conceptual reference model of modeling and verification concepts for hybrid systems. <i>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</i>: 8793, pp. 368&#8211;379 (2014).</p>
<p><center>cited By 0</center></p>";"Cyber-physical systems (CPS), which are computerized systems directly interfacing their real-world surroundings, leverage the construction of increasingly autonomous systems. To meet the high safety demands of CPS, verification of their behavior is crucial, which has led to a wide range of tools for modeling and verification of hybrid systems. These tools are often used in combination, because they employ a wide range of different formalisms for modeling, and aim at distinct verification goals and techniques. To manage and exchange knowledge in the verification process and to overcome a lack of a common classification, we unify different terminologies and concepts of a variety of modeling and verification tools in a conceptual reference model (CRM). Furthermore, we illustrate how the CRM can support comparing models and propose future extension. {\textcopyright} Springer International Publishing Switzerland 2014.";2014;"@ARTICLE{Muller2014,
  author = {M{\"{u}}ller, A and Mitsch, S and Retschitzegger, W and Schwinger, W},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  title = {{A conceptual reference model of modeling and verification concepts for hybrid systems}},
  year = {2014},
  abstract = {Cyber-physical systems (CPS), which are computerized systems directly interfacing their real-world surroundings, leverage the construction of increasingly autonomous systems. To meet the high safety demands of CPS, verification of their behavior is crucial, which has led to a wide range of tools for modeling and verification of hybrid systems. These tools are often used in combination, because they employ a wide range of different formalisms for modeling, and aim at distinct verification goals and techniques. To manage and exchange knowledge in the verification process and to overcome a lack of a common classification, we unify different terminologies and concepts of a variety of modeling and verification tools in a conceptual reference model (CRM). Furthermore, we illustrate how the CRM can support comparing models and propose future extension. {\textcopyright} Springer International Publishing Switzerland 2014.},
  annote = {cited By 0},
  pages = {368--379},
  volume = {8793}
}"
340;Nie2013;"Towards a search-based interactive configuration of cyber physical system product lines";;"<p><b><i>ARTICLE</i>(Nie2013)</b></p>
<p>K. Nie., T. Yue., and S. Ali. Towards a search-based interactive configuration of cyber physical system product lines. <i>CEUR Workshop Proceedings</i>: 1115, pp. 71&#8211;75 (2013).</p>
<p><center>cited By 1</center></p>";"Product Line Engineering (PLE) is a technique to improve the quality and productivity of developing (via configuration) Cyber Physical Systems (CPSs). A CPS often contains many heterogeneous components with complex constraints relevant to product configuration in the context of PLE. Manual configuration is error-prone and has low productivity since managing and manipulating such constraints in a real industrial context is very complicated and thus warrants an automated solution. However, fully automated solution is often impossible for CPSs since some decisions must be made manually by users, thus requiring an interactive configuration solution. Therefore, we propose a semi-automated and interactive configuration solution for CPSs. We started our research by analyzing the characteristics of three industrial CPS product lines and constraints required for supporting such a configuration solution. Then we conducted some pilot experiments on applying search algorithms to find optimal decision orders for configuring a product. In this poster, we describe the whole research idea and, discsusion on the work we have completed, the initial results, and the future plan.";2013;"@ARTICLE{Nie2013,
  author = {Nie, K and Yue, T and Ali, S},
  journal = {CEUR Workshop Proceedings},
  title = {{Towards a search-based interactive configuration of cyber physical system product lines}},
  year = {2013},
  abstract = {Product Line Engineering (PLE) is a technique to improve the quality and productivity of developing (via configuration) Cyber Physical Systems (CPSs). A CPS often contains many heterogeneous components with complex constraints relevant to product configuration in the context of PLE. Manual configuration is error-prone and has low productivity since managing and manipulating such constraints in a real industrial context is very complicated and thus warrants an automated solution. However, fully automated solution is often impossible for CPSs since some decisions must be made manually by users, thus requiring an interactive configuration solution. Therefore, we propose a semi-automated and interactive configuration solution for CPSs. We started our research by analyzing the characteristics of three industrial CPS product lines and constraints required for supporting such a configuration solution. Then we conducted some pilot experiments on applying search algorithms to find optimal decision orders for configuring a product. In this poster, we describe the whole research idea and, discsusion on the work we have completed, the initial results, and the future plan.},
  annote = {cited By 1},
  pages = {71--75},
  volume = {1115}
}"
341;Nikiforova2017;"The two-hemisphere modelling approach to the composition of cyber-physical systems";;"<p><b><i>ARTICLE</i>(Nikiforova2017)</b></p>
<p>O. Nikiforova., N. El Marzouki., K. Gusarovs., H. Vangheluwe., T. Bures., R. Al-Ali., M. Iacono., P. O. Esquivel., and F. Leon. The two-hemisphere modelling approach to the composition of cyber-physical systems. <i>ICSOFT 2017 - Proceedings of the 12th International ARTICLE on Software Technologies</i>, pp. 286&#8211;293 (2017).</p>
<p><center>cited By 0</center></p>";"The Two-hemisphere model-driven (2HMD) approach assumes modelling and use of procedural and conceptual knowledge on an equal and related basis. This differentiates 2HMD approach from pure procedural, pure conceptual, and object oriented approaches. The approach may be applied in the context of modelling of a particular business domain as well as in the context of modelling the knowledge about the domain. Cyber-physical systems are heterogeneous systems, which require multi-disciplinary approach to their modelling. Modelling of cyber-physical systems by 2HMD approach gives an opportunity to transparently compose and analyse system components to be provided and components actually provided, and, thus, to identify and fill the gaps between desirable and actual system content. Copyright {\textcopyright} 2017 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.";2017;"@ARTICLE{Nikiforova2017,
  author = {Nikiforova, O and {El Marzouki}, N and Gusarovs, K and Vangheluwe, H and Bures, T and Al-Ali, R and Iacono, M and Esquivel, P O and Leon, F},
  journal = {ICSOFT 2017 - Proceedings of the 12th International ARTICLE on Software Technologies},
  title = {{The two-hemisphere modelling approach to the composition of cyber-physical systems}},
  year = {2017},
  abstract = {The Two-hemisphere model-driven (2HMD) approach assumes modelling and use of procedural and conceptual knowledge on an equal and related basis. This differentiates 2HMD approach from pure procedural, pure conceptual, and object oriented approaches. The approach may be applied in the context of modelling of a particular business domain as well as in the context of modelling the knowledge about the domain. Cyber-physical systems are heterogeneous systems, which require multi-disciplinary approach to their modelling. Modelling of cyber-physical systems by 2HMD approach gives an opportunity to transparently compose and analyse system components to be provided and components actually provided, and, thus, to identify and fill the gaps between desirable and actual system content. Copyright {\textcopyright} 2017 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  annote = {cited By 0},
  pages = {286--293}
}"
342;Ozkaya2018;"The analysis of architectural languages for the needs of practitioners";http://dx.doi.org/10.1002/spe.2561;"<p><b><i>ARTICLE</i>(Ozkaya2018)</b></p>
<p>M. Ozkaya. The analysis of architectural languages for the needs of practitioners. <i>Software - Practice and Experience</i>: 48(5), pp. 985&#8211;1018 (2018).</p>
<p><center>cited By 1</center></p>";"Architectural languages (ALs) have attracted much attention as the modeling notations for specifying and reasoning about important design decisions. In this study, 124 different existing ALs have been analyzed for a set of requirements that are crucial for practitioners. These requirements are concerned with language definition, language features, and tool support. Some of the important findings obtained from the analysis are as follows: (1) performance is the top popular nonfunctional requirement supported by ALs; (2) no ALs offer both textual and visual notation sets, one of which could be used independently; (3) process algebras are the top preferred formal method by formal ALs; (4) the physical, deployment, and operational viewpoints are rarely supported by ALs; (5) the top preferred extension mechanism of the extensible ALs is XML for syntax extension; (6) Java is the top preferred programming language in generating software code; (7) the exhaustive model checking is the top preferred automated analysis method; (8) the logic-based formal techniques are so popular in specifying system requirements; (9) among the analysis properties considered, consistency is the top supported property for the automated checking; and (10) most ALs do not provide any discussion platform (eg, forums). Hence, these findings can be used by the new AL developers in addressing the needs of practitioners and bridging the gaps in the field. Practitioners can also use the findings to find out about the existing ALs and compare them to choose the one(s) that suits their needs best. Copyright {\textcopyright} 2018 John Wiley {\&} Sons, Ltd.";2018;"@ARTICLE{Ozkaya2018,
  author = {Ozkaya, M},
  journal = {Software - Practice and Experience},
  title = {{The analysis of architectural languages for the needs of practitioners}},
  year = {2018},
  abstract = {Architectural languages (ALs) have attracted much attention as the modeling notations for specifying and reasoning about important design decisions. In this study, 124 different existing ALs have been analyzed for a set of requirements that are crucial for practitioners. These requirements are concerned with language definition, language features, and tool support. Some of the important findings obtained from the analysis are as follows: (1) performance is the top popular nonfunctional requirement supported by ALs; (2) no ALs offer both textual and visual notation sets, one of which could be used independently; (3) process algebras are the top preferred formal method by formal ALs; (4) the physical, deployment, and operational viewpoints are rarely supported by ALs; (5) the top preferred extension mechanism of the extensible ALs is XML for syntax extension; (6) Java is the top preferred programming language in generating software code; (7) the exhaustive model checking is the top preferred automated analysis method; (8) the logic-based formal techniques are so popular in specifying system requirements; (9) among the analysis properties considered, consistency is the top supported property for the automated checking; and (10) most ALs do not provide any discussion platform (eg, forums). Hence, these findings can be used by the new AL developers in addressing the needs of practitioners and bridging the gaps in the field. Practitioners can also use the findings to find out about the existing ALs and compare them to choose the one(s) that suits their needs best. Copyright {\textcopyright} 2018 John Wiley {\&} Sons, Ltd.},
  annote = {cited By 1},
  number = {5},
  pages = {985--1018},
  volume = {48},
  doi = {10.1002/spe.2561},
  paper = {http://dx.doi.org/10.1002/spe.2561}
}"
343;Prehofer2017;"Modeling RESTful Web of Things Services: Concepts and Tools";http://dx.doi.org/10.1016/B978-0-12-809764-9.00004-4;"<p><b><i>BOOK</i>(Prehofer2017)</b></p>
<p>C. Prehofer. and I. Gerostathopoulos. <i>Modeling RESTful Web of Things Services: Concepts and Tools</i>. Elsevier Inc. (2017).</p>
<p><center>cited By 1</center></p>";"In this chapter we consider tools and methodologies for the development of Web of Things applications based on REST design principles. We discuss tools and methods for creating Web of Things services, in particular mashup tools as well as model-driven engineering approaches. While mashup tools mainly focus on modeling the data flow and rapid development, model-driven engineering approaches permit different views and more expressive modeling concepts. We analyze both concepts and techniques regarding expressiveness, suitability for the problem domain as well as ease of use and scalability. Then, we discuss how mashup tools can be extended based on model-driven engineering concepts, while preserving the advantages of simplicity and ease of use. In particular, we show how mashup tools can be extended to more flexible, generic operations on sets of things, based on advanced modeling concepts. {\textcopyright} 2017 Elsevier Inc. All rights reserved.";2017;"@BOOK{Prehofer2017,
  author = {Prehofer, C and Gerostathopoulos, I},
  publisher = {Elsevier Inc.},
  title = {{Modeling RESTful Web of Things Services: Concepts and Tools}},
  year = {2017},
  abstract = {In this chapter we consider tools and methodologies for the development of Web of Things applications based on REST design principles. We discuss tools and methods for creating Web of Things services, in particular mashup tools as well as model-driven engineering approaches. While mashup tools mainly focus on modeling the data flow and rapid development, model-driven engineering approaches permit different views and more expressive modeling concepts. We analyze both concepts and techniques regarding expressiveness, suitability for the problem domain as well as ease of use and scalability. Then, we discuss how mashup tools can be extended based on model-driven engineering concepts, while preserving the advantages of simplicity and ease of use. In particular, we show how mashup tools can be extended to more flexible, generic operations on sets of things, based on advanced modeling concepts. {\textcopyright} 2017 Elsevier Inc. All rights reserved.},
  annote = {cited By 1},
  doi = {10.1016/B978-0-12-809764-9.00004-4},
  paper = {http://dx.doi.org/10.1016/B978-0-12-809764-9.00004-4}
}"
344;Ruchkin2015;"Analytic dependency loops in architectural models of cyber-physical systems";;"<p><b><i>ARTICLE</i>(Ruchkin2015)</b></p>
<p>I. Ruchkin., B. Schmerl., and D. Garlan. Analytic dependency loops in architectural models of cyber-physical systems. <i>CEUR Workshop Proceedings</i>: 1508, pp. 3&#8211;10 (2015).</p>
<p><center>cited By 0</center></p>";"Rigorous engineering of safety-critical Cyber-Physical Systems (CPS) requires integration of heterogeneous modeling methods from different disciplines. It is often necessary to view this integration from the perspective of analyses - algorithms that read and change models. Although such analytic integration supports formal contract-based verification of model evolution, it suffers from the limitation of analytic dependency loops. Dependency loops between analyses cannot be resolved based on existing contract-based verification. This paper makes a step towards using rich architectural descriptions to resolve circular analytic dependencies. We characterize the dependency loop problem and discuss three algorithmic approaches to resolving such loops: analysis iteration, constraint solving, and genetic search. These approaches take advantage of information in multiview architectures to resolve analytic dependency loops.";2015;"@ARTICLE{Ruchkin2015,
  author = {Ruchkin, I and Schmerl, B and Garlan, D},
  journal = {CEUR Workshop Proceedings},
  title = {{Analytic dependency loops in architectural models of cyber-physical systems}},
  year = {2015},
  abstract = {Rigorous engineering of safety-critical Cyber-Physical Systems (CPS) requires integration of heterogeneous modeling methods from different disciplines. It is often necessary to view this integration from the perspective of analyses - algorithms that read and change models. Although such analytic integration supports formal contract-based verification of model evolution, it suffers from the limitation of analytic dependency loops. Dependency loops between analyses cannot be resolved based on existing contract-based verification. This paper makes a step towards using rich architectural descriptions to resolve circular analytic dependencies. We characterize the dependency loop problem and discuss three algorithmic approaches to resolving such loops: analysis iteration, constraint solving, and genetic search. These approaches take advantage of information in multiview architectures to resolve analytic dependency loops.},
  annote = {cited By 0},
  pages = {3--10},
  volume = {1508}
}"
345;SanchezCuadrado2014;"Scheduling model-to-model transformations with continuations";http://dx.doi.org/10.1002/spe.2202;"<p><b><i>ARTICLE</i>(SanchezCuadrado2014)</b></p>
<p>J. S&aacute;nchez Cuadrado. and J. Perera Aracil. Scheduling model-to-model transformations with continuations. <i>Software - Practice and Experience</i>: 44(11), pp. 1351&#8211;1378 (2014).</p>
<p><center>cited By 3</center></p>";"Model transformations are at the heart of model-driven engineering because they allow the automation of diverse kinds of model manipulations. Transformation scheduling is a key issue in the design and implementation of many transformation languages. This paper reports our results using continuations as the underlying technique for building a scheduling mechanism implicitly driven by data dependence among transformation rules. To support our experiments, we have built a proof-of-concept model transformation language, which is also reported here. First, we motivate the problem by analyzing the scheduling mechanism of current model transformation languages. Then, we introduce the notion of continuation, showing its applicability to model transformations. Afterwards, we present our approach, notably explaining how dependence is specified and giving the scheduling algorithm. We also analyze the lazy resolution of rules and how to deal with collection operations. The approach is validated by an implementation that targets the Java Virtual Machine and by running of the performance benchmarks that show its efficiency and scalability. Besides, we discuss how it can be applied to other existing transformation languages and present several applicability scenarios. Copyright {\textcopyright} 2013 John Wiley {\&} Sons, Ltd.";2014;"@ARTICLE{SanchezCuadrado2014,
  author = {{S{\'{a}}nchez Cuadrado}, J and {Perera Aracil}, J},
  journal = {Software - Practice and Experience},
  title = {{Scheduling model-to-model transformations with continuations}},
  year = {2014},
  abstract = {Model transformations are at the heart of model-driven engineering because they allow the automation of diverse kinds of model manipulations. Transformation scheduling is a key issue in the design and implementation of many transformation languages. This paper reports our results using continuations as the underlying technique for building a scheduling mechanism implicitly driven by data dependence among transformation rules. To support our experiments, we have built a proof-of-concept model transformation language, which is also reported here. First, we motivate the problem by analyzing the scheduling mechanism of current model transformation languages. Then, we introduce the notion of continuation, showing its applicability to model transformations. Afterwards, we present our approach, notably explaining how dependence is specified and giving the scheduling algorithm. We also analyze the lazy resolution of rules and how to deal with collection operations. The approach is validated by an implementation that targets the Java Virtual Machine and by running of the performance benchmarks that show its efficiency and scalability. Besides, we discuss how it can be applied to other existing transformation languages and present several applicability scenarios. Copyright {\textcopyright} 2013 John Wiley {\&} Sons, Ltd.},
  annote = {cited By 3},
  number = {11},
  pages = {1351--1378},
  volume = {44},
  doi = {10.1002/spe.2202},
  paper = {http://dx.doi.org/10.1002/spe.2202}
}"
346;Sethy2015;"Contemporary ethical issues in engineering";http://dx.doi.org/10.4018/978-1-4666-8130-9;"<p><b><i>BOOK</i>(Sethy2015)</b></p>
<p>S. S. Sethy. <i>Contemporary ethical issues in engineering</i>. IGI Global (2015).</p>
<p><center>cited By 0</center></p>";"For most professions, a code of ethics exists to promote positive behavior among practitioners in order to enrich others within the field as well as the communities they serve. Similar to the medical, law, and business fields, the engineering discipline also instills a code of ethical conduct. Contemporary Ethical Issues in Engineering highlights a modern approach to the topic of engineering ethics and the current moral dilemmas facing practitioners in the field. Focusing on key issues, theoretical foundations, and the best methods for promoting engineering ethics from the pre-practitioner to the managerial level, this timely publication is ideally designed for use by engineering students, active professionals, and academics, as well as researchers in all disciplines of engineering. {\textcopyright} 2015 by IGI Global. All rights reserved.";2015;"@BOOK{Sethy2015,
  author = {Sethy, S S},
  publisher = {IGI Global},
  title = {{Contemporary ethical issues in engineering}},
  year = {2015},
  abstract = {For most professions, a code of ethics exists to promote positive behavior among practitioners in order to enrich others within the field as well as the communities they serve. Similar to the medical, law, and business fields, the engineering discipline also instills a code of ethical conduct. Contemporary Ethical Issues in Engineering highlights a modern approach to the topic of engineering ethics and the current moral dilemmas facing practitioners in the field. Focusing on key issues, theoretical foundations, and the best methods for promoting engineering ethics from the pre-practitioner to the managerial level, this timely publication is ideally designed for use by engineering students, active professionals, and academics, as well as researchers in all disciplines of engineering. {\textcopyright} 2015 by IGI Global. All rights reserved.},
  annote = {cited By 0},
  doi = {10.4018/978-1-4666-8130-9},
  paper = {http://dx.doi.org/10.4018/978-1-4666-8130-9}
}"
347;Shahrah2017;"Modelling emergency response process using case management model and notation";http://dx.doi.org/10.1049/iet-sen.2016.0209;"<p><b><i>ARTICLE</i>(Shahrah2017)</b></p>
<p>A. Y. Shahrah. and M. A. Al-Mashari. Modelling emergency response process using case management model and notation. <i>IET Software</i>: 11(6), pp. 301&#8211;308 (2017).</p>
<p><center>cited By 0</center></p>";"Emergency response is a knowledge-intensive process that is very hard to model and automate. This primarily returns to the unpredictability and unrepeatability nature that characterises such process. Traditional modelling approaches are too rigid and do not effectively support the flexibility and dynamicity required by emergency response process. Case Management Model and Notation (CMMN) is a new standard modelling specification that has recently been released by Object Management Group (OMG) to standardise the modelling of Case Management approach. The objective of this study is to demonstrate how the CMMN can be used to model emergency response process. The authors use the CMMN to build a template model for a generic emergency response process. This model can easily be extended or interchanged among different modelling tools or execution platforms. In addition, they present a case study of a flood management process as a concrete example of using CMMN in modelling emergency response process. Finally, they conclude that the CMMN has a great potential to model case-based processes such as emergency response, but CMMN still in its infancy. As a result, there is a lack of mature modelling tools and execution engines to execute the CMMN models. {\textcopyright} The Institution of Engineering and Technology 2017.";2017;"@ARTICLE{Shahrah2017,
  author = {Shahrah, A Y and Al-Mashari, M A},
  journal = {IET Software},
  title = {{Modelling emergency response process using case management model and notation}},
  year = {2017},
  abstract = {Emergency response is a knowledge-intensive process that is very hard to model and automate. This primarily returns to the unpredictability and unrepeatability nature that characterises such process. Traditional modelling approaches are too rigid and do not effectively support the flexibility and dynamicity required by emergency response process. Case Management Model and Notation (CMMN) is a new standard modelling specification that has recently been released by Object Management Group (OMG) to standardise the modelling of Case Management approach. The objective of this study is to demonstrate how the CMMN can be used to model emergency response process. The authors use the CMMN to build a template model for a generic emergency response process. This model can easily be extended or interchanged among different modelling tools or execution platforms. In addition, they present a case study of a flood management process as a concrete example of using CMMN in modelling emergency response process. Finally, they conclude that the CMMN has a great potential to model case-based processes such as emergency response, but CMMN still in its infancy. As a result, there is a lack of mature modelling tools and execution engines to execute the CMMN models. {\textcopyright} The Institution of Engineering and Technology 2017.},
  annote = {cited By 0},
  number = {6},
  pages = {301--308},
  volume = {11},
  doi = {10.1049/iet-sen.2016.0209},
  paper = {http://dx.doi.org/10.1049/iet-sen.2016.0209}
}"
348;Smith2015;"Mission adaptive display technologies and operational decision making in aviation";http://dx.doi.org/10.4018/978-1-4666-8673-1;"<p><b><i>BOOK</i>(Smith2015)</b></p>
<p>K. M. Smith. and S. Larrieu. <i>Mission adaptive display technologies and operational decision making in aviation</i>. IGI Global (2015).</p>
<p><center>cited By 1</center></p>";"Avionics often serves as the tip of the spear for research into user-interface and systems usability in aviation. However, this emphasis on flashy, technology-driven design can come with a cost: the sacrifice of practical utility, which, in the high-stakes environment of military aviation, can lead directly to catastrophe. Mission Adaptive Display Technologies and Operational Decision Making in Aviation explores the use of adaptive and assistive technologies in aviation to establish clear guidelines for the design and implementation of such technologies to better serve the needs of both military and civilian pilots. Benefiting from the authors' combined experience of more than 40 years in the aviation industry and over 25,000 flight-hours, this volume targets a wide audience of engineers and business professionals. This premier reference source covers topics of interest to aviators and engineers, including aerodynamic systems design, operational decision theory, user interface design, avionics, and concepts and cases in flight operations, mission performance, and pilot training. {\textcopyright} 2015 by IGI Global. All rights reserved.";2015;"@BOOK{Smith2015,
  author = {Smith, K M and Larrieu, S},
  publisher = {IGI Global},
  title = {{Mission adaptive display technologies and operational decision making in aviation}},
  year = {2015},
  abstract = {Avionics often serves as the tip of the spear for research into user-interface and systems usability in aviation. However, this emphasis on flashy, technology-driven design can come with a cost: the sacrifice of practical utility, which, in the high-stakes environment of military aviation, can lead directly to catastrophe. Mission Adaptive Display Technologies and Operational Decision Making in Aviation explores the use of adaptive and assistive technologies in aviation to establish clear guidelines for the design and implementation of such technologies to better serve the needs of both military and civilian pilots. Benefiting from the authors' combined experience of more than 40 years in the aviation industry and over 25,000 flight-hours, this volume targets a wide audience of engineers and business professionals. This premier reference source covers topics of interest to aviators and engineers, including aerodynamic systems design, operational decision theory, user interface design, avionics, and concepts and cases in flight operations, mission performance, and pilot training. {\textcopyright} 2015 by IGI Global. All rights reserved.},
  annote = {cited By 1},
  doi = {10.4018/978-1-4666-8673-1},
  paper = {http://dx.doi.org/10.4018/978-1-4666-8673-1}
}"
349;Taborsky2015;"Feature model driven generation of software artifacts";http://dx.doi.org/10.15439/2015F364;"<p><b><i>ARTICLE</i>(Taborsky2015)</b></p>
<p>R. Taborsky. and V. Vranic. Feature model driven generation of software artifacts. <i>Proceedings of the 2015 Federated ARTICLE on Computer Science and Information Systems, FedCSIS 2015</i>, pp. 1007&#8211;1018 (2015).</p>
<p><center>cited By 5</center></p>";"The objective of feature modeling is to foster software reuse by enabling to explicitly and abstractly express commonality and variability in the domain. Feature modeling alone is not sufficient to express all the aspects of the software being developed. Other models and, eventually, code is necessary. These software assets are being configured by the feature model based on the selection of variable features. However, selecting a feature is far from a naive component based approach where feature inclusion would simply mean including the corresponding component. More often than not, feature inclusion affects several places in models or code to be configured requiring their nontrivial adaptation. Feature inclusion recalls transformation and this is at heart of the approach to feature model driven generation of software artifacts proposed in this paper. Features are viewed as solution space transformations that may be executed during the generative process conducted by the feature model configuration.";2015;"@ARTICLE{Taborsky2015,
  author = {Taborsky, R and Vranic, V},
  journal = {Proceedings of the 2015 Federated ARTICLE on Computer Science and Information Systems, FedCSIS 2015},
  title = {{Feature model driven generation of software artifacts}},
  year = {2015},
  abstract = {The objective of feature modeling is to foster software reuse by enabling to explicitly and abstractly express commonality and variability in the domain. Feature modeling alone is not sufficient to express all the aspects of the software being developed. Other models and, eventually, code is necessary. These software assets are being configured by the feature model based on the selection of variable features. However, selecting a feature is far from a naive component based approach where feature inclusion would simply mean including the corresponding component. More often than not, feature inclusion affects several places in models or code to be configured requiring their nontrivial adaptation. Feature inclusion recalls transformation and this is at heart of the approach to feature model driven generation of software artifacts proposed in this paper. Features are viewed as solution space transformations that may be executed during the generative process conducted by the feature model configuration.},
  annote = {cited By 5},
  pages = {1007--1018},
  doi = {10.15439/2015F364},
  paper = {http://dx.doi.org/10.15439/2015F364}
}"
350;Thomas2016;"Virtual systems integration using model based systems engineering";;"<p><b><i>ARTICLE</i>(Thomas2016)</b></p>
<p>D. Thomas. and B. Mesmer. Virtual systems integration using model based systems engineering. <i>AIAA Space and Astronautics Forum and Exposition, SPACE 2016</i> (2016).</p>
<p><center>cited By 0</center></p>";"This paper provides a first step in recognizing where we have been and some of the challenges that lie ahead in the design of complex engineered systems. The history of Hardware-In-the-Loop (HIL) simulation and Model Based Systems Engineering (MBSE) are reviewed in the context of their respective roles in the development of complex engineered systems. The combination of HIL and MBSE is then proposed as a paradigm shift in the way design is performed, bringing valuable information early to the designer. However, there is much work to be done in understanding how to combine these two concepts and how to handle the information that would be generated. It is on the shoulders of both academia and industry to tackle different elements of this problem, as one entity acting alone will not effectively solve it. If history is a guide, industry will tend to linearly grow capabilities of existing toolsets to support existing customer bases. Academia will explore innovative approaches in the laboratory which may be of little practical use in industry. Research to determine the best way to integrate the total systems viewpoint and system effectiveness aspects of MBSE with the HIL simulation aspects of virtual HIL toolsets will bring those capabilities to bear jointly on complex engineered systems sooner and more effectively. {\textcopyright} 2016, American Institute of Aeronautics and Astronautics Inc, AIAA. All rights reserved.";2016;"@ARTICLE{Thomas2016,
  author = {Thomas, D and Mesmer, B},
  journal = {AIAA Space and Astronautics Forum and Exposition, SPACE 2016},
  title = {{Virtual systems integration using model based systems engineering}},
  year = {2016},
  abstract = {This paper provides a first step in recognizing where we have been and some of the challenges that lie ahead in the design of complex engineered systems. The history of Hardware-In-the-Loop (HIL) simulation and Model Based Systems Engineering (MBSE) are reviewed in the context of their respective roles in the development of complex engineered systems. The combination of HIL and MBSE is then proposed as a paradigm shift in the way design is performed, bringing valuable information early to the designer. However, there is much work to be done in understanding how to combine these two concepts and how to handle the information that would be generated. It is on the shoulders of both academia and industry to tackle different elements of this problem, as one entity acting alone will not effectively solve it. If history is a guide, industry will tend to linearly grow capabilities of existing toolsets to support existing customer bases. Academia will explore innovative approaches in the laboratory which may be of little practical use in industry. Research to determine the best way to integrate the total systems viewpoint and system effectiveness aspects of MBSE with the HIL simulation aspects of virtual HIL toolsets will bring those capabilities to bear jointly on complex engineered systems sooner and more effectively. {\textcopyright} 2016, American Institute of Aeronautics and Astronautics Inc, AIAA. All rights reserved.},
  annote = {cited By 0}
}"
351;Torngren2014;"Integrating viewpoints in the development of mechatronic products";http://dx.doi.org/10.1016/j.mechatronics.2013.11.013;"<p><b><i>ARTICLE</i>(Torngren2014)</b></p>
<p>M. T&ouml;rngren., A. Qamar., M. Biehl., F. Loiret., and J. El-Khoury. Integrating viewpoints in the development of mechatronic products. <i>Mechatronics</i>: 24(7), pp. 745&#8211;762 (2014).</p>
<p><center>cited By 18</center></p>";"The development of mechatronic products involves multiple stakeholders which have different viewpoints and therefore use different concepts, models and tools to deal with their concerns of interest. This paper argues that an increased emphasis needs to be placed on the relations between viewpoints to be able to deal with the evolving scope and requirements on mechatronic products. We study relations between viewpoints at the levels of people, models and tools, and present solutions that are used to formally and explicitly capture such relations. Viewpoint contracts are used to define the vocabulary, assumptions and constraints required for ensuring smooth communication between stakeholders (people level). Dependency models capture relations between product properties belonging to different viewpoints, and how such dependencies relate to predictions and decisions (model level). Tool integration models describe the relations between tools in terms of traceability, data exchange, invocation and notifications (tool level). A major contribution of this paper is a unification approach, elaborating how these solutions can be used synergetically to integrate viewpoints. An industrial robot case study is utilized to illustrate the challenges and solutions with respect to relations between viewpoints, including the unification approach. {\textcopyright} 2013 Elsevier Ltd.";2014;"@ARTICLE{Torngren2014,
  author = {T{\"{o}}rngren, M and Qamar, A and Biehl, M and Loiret, F and El-Khoury, J},
  journal = {Mechatronics},
  title = {{Integrating viewpoints in the development of mechatronic products}},
  year = {2014},
  abstract = {The development of mechatronic products involves multiple stakeholders which have different viewpoints and therefore use different concepts, models and tools to deal with their concerns of interest. This paper argues that an increased emphasis needs to be placed on the relations between viewpoints to be able to deal with the evolving scope and requirements on mechatronic products. We study relations between viewpoints at the levels of people, models and tools, and present solutions that are used to formally and explicitly capture such relations. Viewpoint contracts are used to define the vocabulary, assumptions and constraints required for ensuring smooth communication between stakeholders (people level). Dependency models capture relations between product properties belonging to different viewpoints, and how such dependencies relate to predictions and decisions (model level). Tool integration models describe the relations between tools in terms of traceability, data exchange, invocation and notifications (tool level). A major contribution of this paper is a unification approach, elaborating how these solutions can be used synergetically to integrate viewpoints. An industrial robot case study is utilized to illustrate the challenges and solutions with respect to relations between viewpoints, including the unification approach. {\textcopyright} 2013 Elsevier Ltd.},
  annote = {cited By 18},
  number = {7},
  pages = {745--762},
  volume = {24},
  doi = {10.1016/j.mechatronics.2013.11.013},
  paper = {http://dx.doi.org/10.1016/j.mechatronics.2013.11.013}
}"
352;VanDerAuweraer2013;"Virtual engineering at work: The challenges for designing mechatronic products";http://dx.doi.org/10.1007/s00366-012-0286-6;"<p><b><i>ARTICLE</i>(VanDerAuweraer2013)</b></p>
<p>H. Van Der Auweraer., J. Anthonis., S. De Bruyne., and J. Leuridan. Virtual engineering at work: The challenges for designing mechatronic products. <i>Engineering with Computers</i>: 29(3), pp. 389&#8211;408 (2013).</p>
<p><center>cited By 27</center></p>";"The product race has become an innovation race, reconciling challenges of branding, performance, time to market and competitive pricing while complying with ecological, safety and legislation constraints. The answer lies in ""smart"" products of high complexity, relying on heterogeneous technologies and involving active components. To keep pace with this evolution and further accelerate the design cycle, the design engineering process must be rethought. The paper presents a mechatronic simulation approach to achieve this goal. The starting point is the current virtual prototyping paradigm that is widely adopted and that continues to improve in terms of model complexity, accuracy, robustness and automated optimization. Two evolutions are discussed. A first one is the extension to multi-physics simulation answering the design needs of the inherent multi-disciplinarity of ""intelligent"" products. Integration of thermal, hydraulic, mechanical, haptic and electrical functions requires simulation to extend beyond the traditional CAD-FEM approach, supporting the use of system, functional and perception models. The second evolution is the integration of control functions in the products. Where current industrial practice treats mechanical system design and control design as different design loops, this paper discusses their integration in a model-based design process at all design stages, turning concepts such as software-in-the-loop and hardware-in-the-loop into basic elements of an industrial design approach. These concepts are illustrated by a number of automotive design engineering cases, which demonstrate that the combined use of perception, geometric and system models allows to develop innovative solutions for the active safety, low-emission and high-comfort performance of next-generation vehicles. This process in turn poses new challenges to the design in terms of the specification and validation of such innovative products, including their failure modes and fault-tolerant behaviour. This will imply adopting a model-based system engineering approach that is currently already common practice in software engineering. {\textcopyright} 2012 The Author(s).";2013;"@ARTICLE{VanDerAuweraer2013,
  author = {{Van Der Auweraer}, H and Anthonis, J and {De Bruyne}, S and Leuridan, J},
  journal = {Engineering with Computers},
  title = {{Virtual engineering at work: The challenges for designing mechatronic products}},
  year = {2013},
  abstract = {The product race has become an innovation race, reconciling challenges of branding, performance, time to market and competitive pricing while complying with ecological, safety and legislation constraints. The answer lies in ""smart"" products of high complexity, relying on heterogeneous technologies and involving active components. To keep pace with this evolution and further accelerate the design cycle, the design engineering process must be rethought. The paper presents a mechatronic simulation approach to achieve this goal. The starting point is the current virtual prototyping paradigm that is widely adopted and that continues to improve in terms of model complexity, accuracy, robustness and automated optimization. Two evolutions are discussed. A first one is the extension to multi-physics simulation answering the design needs of the inherent multi-disciplinarity of ""intelligent"" products. Integration of thermal, hydraulic, mechanical, haptic and electrical functions requires simulation to extend beyond the traditional CAD-FEM approach, supporting the use of system, functional and perception models. The second evolution is the integration of control functions in the products. Where current industrial practice treats mechanical system design and control design as different design loops, this paper discusses their integration in a model-based design process at all design stages, turning concepts such as software-in-the-loop and hardware-in-the-loop into basic elements of an industrial design approach. These concepts are illustrated by a number of automotive design engineering cases, which demonstrate that the combined use of perception, geometric and system models allows to develop innovative solutions for the active safety, low-emission and high-comfort performance of next-generation vehicles. This process in turn poses new challenges to the design in terms of the specification and validation of such innovative products, including their failure modes and fault-tolerant behaviour. This will imply adopting a model-based system engineering approach that is currently already common practice in software engineering. {\textcopyright} 2012 The Author(s).},
  annote = {cited By 27},
  number = {3},
  pages = {389--408},
  volume = {29},
  doi = {10.1007/s00366-012-0286-6},
  paper = {http://dx.doi.org/10.1007/s00366-012-0286-6}
}"
353;Vanherpen2015;"Model transformations for round-trip engineering in control deployment co-design";;"<p><b><i>ARTICLE</i>(Vanherpen2015)</b></p>
<p>K. Vanherpen., J. Denil., H. Vangheluwe., and P. De Meulenaere. Model transformations for round-trip engineering in control deployment co-design. <i>Simulation Series</i>: 47(8), pp. 55&#8211;62 (2015).</p>
<p><center>cited By 2</center></p>";"When developing a control algorithm for a mechatronic system, its deployment on hardware is rarely taken into account. Hardware properties such as execution performance, memory consumption, communication delays, buffer sizes, (un)reliability of the communication channel, etc. are often not the first concern of the control engineer. However, these properties may have important effects on the control loop behaviour such that initial requirements may no longer be fulfilled. To tackle this issue, we propose a Round-Trip Engineering (RTE) method allowing for a semi-automatic integration of hardware properties, corresponding to the deployment, into the control model. The proposed RTE method combines techniques of model transformations and model-based design space exploration. The resulting method will enable an engineer to further enhance the control model based on implementation properties such that the initial requirements are still satisfied when deployed on the target hardware platform. {\textcopyright} 2015 Society for Modeling {\&} Simulation International (SCS).";2015;"@ARTICLE{Vanherpen2015,
  author = {Vanherpen, K and Denil, J and Vangheluwe, H and {De Meulenaere}, P},
  journal = {Simulation Series},
  title = {{Model transformations for round-trip engineering in control deployment co-design}},
  year = {2015},
  abstract = {When developing a control algorithm for a mechatronic system, its deployment on hardware is rarely taken into account. Hardware properties such as execution performance, memory consumption, communication delays, buffer sizes, (un)reliability of the communication channel, etc. are often not the first concern of the control engineer. However, these properties may have important effects on the control loop behaviour such that initial requirements may no longer be fulfilled. To tackle this issue, we propose a Round-Trip Engineering (RTE) method allowing for a semi-automatic integration of hardware properties, corresponding to the deployment, into the control model. The proposed RTE method combines techniques of model transformations and model-based design space exploration. The resulting method will enable an engineer to further enhance the control model based on implementation properties such that the initial requirements are still satisfied when deployed on the target hardware platform. {\textcopyright} 2015 Society for Modeling {\&} Simulation International (SCS).},
  annote = {cited By 2},
  number = {8},
  pages = {55--62},
  volume = {47}
}"
354;VaraLarsen2015;"A Behavioral Coordination Operator Language (BCOoL)";http://dx.doi.org/10.1109/MODELS.2015.7338249;"<p><b><i>ARTICLE</i>(VaraLarsen2015)</b></p>
<p>M. E. Vara Larsen., J. Deantoni., B. Combemale., and F. Mallet. A Behavioral Coordination Operator Language (BCOoL). <i>2015 ACM/IEEE 18th International ARTICLE on Model Driven Engineering Languages and Systems, MODELS 2015 - Proceedings</i>, pp. 186&#8211;195 (2015).</p>
<p><center>cited By 11</center></p>";"The design of complex systems involves various, possibly heterogeneous, structural and behavioral models. In model-driven engineering, the coordination of behavioral models to produce a single integrated model is necessary to provide support for validation and verification. Indeed, it allows system designers to understand and validate the global and emerging behavior of the system. However, the manual coordination of models is tedious and error-prone, and current approaches to automate the coordination are bound to a fixed set of coordination patterns. In this paper, we propose a Behavioral Coordination Operator Language (B-COoL) to reify coordination patterns between specific domains by using coordination operators between the Domain-Specific Modeling Languages used in these domains. Those operators are then used to automate the coordination of models conforming to these languages. We illustrate the use of B-COoL with the definition of coordination operators between timed finite state machines and activity diagrams. {\textcopyright} 2015 IEEE.";2015;"@ARTICLE{VaraLarsen2015,
  author = {{Vara Larsen}, M E and Deantoni, J and Combemale, B and Mallet, F},
  journal = {2015 ACM/IEEE 18th International ARTICLE on Model Driven Engineering Languages and Systems, MODELS 2015 - Proceedings},
  title = {{A Behavioral Coordination Operator Language (BCOoL)}},
  year = {2015},
  abstract = {The design of complex systems involves various, possibly heterogeneous, structural and behavioral models. In model-driven engineering, the coordination of behavioral models to produce a single integrated model is necessary to provide support for validation and verification. Indeed, it allows system designers to understand and validate the global and emerging behavior of the system. However, the manual coordination of models is tedious and error-prone, and current approaches to automate the coordination are bound to a fixed set of coordination patterns. In this paper, we propose a Behavioral Coordination Operator Language (B-COoL) to reify coordination patterns between specific domains by using coordination operators between the Domain-Specific Modeling Languages used in these domains. Those operators are then used to automate the coordination of models conforming to these languages. We illustrate the use of B-COoL with the definition of coordination operators between timed finite state machines and activity diagrams. {\textcopyright} 2015 IEEE.},
  annote = {cited By 11},
  pages = {186--195},
  doi = {10.1109/MODELS.2015.7338249},
  paper = {http://dx.doi.org/10.1109/MODELS.2015.7338249}
}"
355;Varro2016;"Road to a reactive and incremental model transformation platform: three generations of the VIATRA framework";http://dx.doi.org/10.1007/s10270-016-0530-4;"<p><b><i>ARTICLE</i>(Varro2016)</b></p>
<p>D. Varr&oacute;., G. Bergmann., &. Heged&uuml;s., &. Horv&aacute;th., I. R&aacute;th., and Z. Ujhelyi. Road to a reactive and incremental model transformation platform: three generations of the VIATRA framework. <i>Software and Systems Modeling</i>: 15(3), pp. 609&#8211;629 (2016).</p>
<p><center>cited By 13</center></p>";"The current release of VIATRA provides open-source tool support for an event-driven, reactive model transformation engine built on top of highly scalable incremental graph queries for models with millions of elements and advanced features such as rule-based design space exploration complex event processing or model obfuscation. However, the history of the VIATRA model transformation framework dates back to over 16 years. Starting as an early academic research prototype as part of the M.Sc project of the the first author it first evolved into a Prolog-based engine followed by a family of open-source projects which by now matured into a component integrated into various industrial and open-source tools and deployed over multiple technologies. This invited paper briefly overviews the evolution of the VIATRA/IncQuery family by highlighting key features and illustrating main transformation concepts along an open case study influenced by an industrial project. {\textcopyright} 2016, The Author(s).";2016;"@ARTICLE{Varro2016,
  author = {Varr{\'{o}}, D and Bergmann, G and Heged{\"{u}}s, {\'{A}} and Horv{\'{a}}th, {\'{A}} and R{\'{a}}th, I and Ujhelyi, Z},
  journal = {Software and Systems Modeling},
  title = {{Road to a reactive and incremental model transformation platform: three generations of the VIATRA framework}},
  year = {2016},
  abstract = {The current release of VIATRA provides open-source tool support for an event-driven, reactive model transformation engine built on top of highly scalable incremental graph queries for models with millions of elements and advanced features such as rule-based design space exploration complex event processing or model obfuscation. However, the history of the VIATRA model transformation framework dates back to over 16 years. Starting as an early academic research prototype as part of the M.Sc project of the the first author it first evolved into a Prolog-based engine followed by a family of open-source projects which by now matured into a component integrated into various industrial and open-source tools and deployed over multiple technologies. This invited paper briefly overviews the evolution of the VIATRA/IncQuery family by highlighting key features and illustrating main transformation concepts along an open case study influenced by an industrial project. {\textcopyright} 2016, The Author(s).},
  annote = {cited By 13},
  number = {3},
  pages = {609--629},
  volume = {15},
  doi = {10.1007/s10270-016-0530-4},
  paper = {http://dx.doi.org/10.1007/s10270-016-0530-4}
}"
356;Varro2018;"Towards the automated generation of consistent, diverse, scalable and realistic graph models";http://dx.doi.org/10.1007/978-3-319-75396-6_16;"<p><b><i>ARTICLE</i>(Varro2018)</b></p>
<p>D. Varr&oacute;., O. Semer&aacute;th., G. Sz&aacute;rnyas., and &. Horv&aacute;th. Towards the automated generation of consistent, diverse, scalable and realistic graph models. <i>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</i>: 10800 LNCS, pp. 285&#8211;312 (2018).</p>
<p><center>cited By 2</center></p>";"Automated model generation can be highly beneficial for various application scenarios including software tool certification, validation of cyber-physical systems or benchmarking graph databases to avoid tedious manual synthesis of models. In the paper, we present a long-term research challenge how to generate graph models specific to a domain which are consistent, diverse, scalable and realistic at the same time. We provide foundations for a class of model generators along a refinement relation which operates over partial models with 3-valued representation and ensures that subsequently derived partial models preserve the truth evaluation of well-formedness constraints in the domain. We formally prove completeness, i.e. any finite instance model of a domain can be generated by model generator transformations in finite steps and soundness, i.e. any instance model retrieved as a solution satisfies all well-formedness constraints. An experimental evaluation is carried out in the context of a statechart modeling tool to evaluate the trade-off between different characteristics of model generators. {\textcopyright} 2018, Springer International Publishing AG, part of Springer Nature.";2018;"@ARTICLE{Varro2018,
  author = {Varr{\'{o}}, D and Semer{\'{a}}th, O and Sz{\'{a}}rnyas, G and Horv{\'{a}}th, {\'{A}}},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  title = {{Towards the automated generation of consistent, diverse, scalable and realistic graph models}},
  year = {2018},
  abstract = {Automated model generation can be highly beneficial for various application scenarios including software tool certification, validation of cyber-physical systems or benchmarking graph databases to avoid tedious manual synthesis of models. In the paper, we present a long-term research challenge how to generate graph models specific to a domain which are consistent, diverse, scalable and realistic at the same time. We provide foundations for a class of model generators along a refinement relation which operates over partial models with 3-valued representation and ensures that subsequently derived partial models preserve the truth evaluation of well-formedness constraints in the domain. We formally prove completeness, i.e. any finite instance model of a domain can be generated by model generator transformations in finite steps and soundness, i.e. any instance model retrieved as a solution satisfies all well-formedness constraints. An experimental evaluation is carried out in the context of a statechart modeling tool to evaluate the trade-off between different characteristics of model generators. {\textcopyright} 2018, Springer International Publishing AG, part of Springer Nature.},
  annote = {cited By 2},
  pages = {285--312},
  volume = {10800 LNCS},
  doi = {10.1007/978-3-319-75396-6_16},
  paper = {http://dx.doi.org/10.1007/978-3-319-75396-6_16}
}"
357;Vranic2015;"Challenges in preserving intent comprehensibility in software";;"<p><b><i>ARTICLE</i>(Vranic2015)</b></p>
<p>V. Vrani&cacute;., J. Porub&auml;n., M. Bystrick&yacute;., T. Fr?ala., I. Pol&aacute;\vsek., M. Nos&aacute;?., and J. Lang. Challenges in preserving intent comprehensibility in software. <i>Acta Polytechnica Hungarica</i>: 12(7), pp. 57&#8211;75 (2015).</p>
<p><center>cited By 4</center></p>";"Software is not only difficult to create, but it is also difficult to understand. Even the authors themselves in a relatively short time become unable to readily interpret their own code and to explain what intent they have followed by it. Software is being created with the goal to satisfy the needs of a customer or directly of the end users. Out of these needs comes the intent, which is relatively well understandable to all stakeholders. By using other specialized modeling techniques (typically the UML language) or in the code itself, use cases and other high-level specification and analytical artifacts in common software development almost completely dissolve. Along with dedicated initiatives to improve preserving intent comprehensibility in software, such as literate programming, intentional programming, aspect-oriented programming, or the DCI (Data, Context and Interaction) approach, this issue is a subject of contemporary research in the re-revealed area of engaging end users in software development, which has its roots in Alan Kay's vision of a personal computer programmable by end users. From the perspective of the reality of complex software system development, the existing approaches are solving the problem of losing intent comprehensibility only partially by a simplified and limited perception of the intent and do this only at the code level. This paper explores the challenges in preserving the intent comprehensibility in software. The thorough treatment of this problem requires a number of techniques and approaches to be engaged, including preserving use cases in the code, dynamic code structuring, executable intent representation using domain specific languages, advanced UML modularization, 3D rendering of UML, and representation and animation of organizational patterns. {\textcopyright} 2015, Budapest Tech Polytechnical Institution. All Rights Reserved.";2015;"@ARTICLE{Vranic2015,
  author = {Vrani{\'{c}}, V and Porub{\"{a}}n, J and Bystrick{\'{y}}, M and Fr?ala, T and Pol{\'{a}}{\v{s}}ek, I and Nos{\'{a}}?, M and Lang, J},
  journal = {Acta Polytechnica Hungarica},
  title = {{Challenges in preserving intent comprehensibility in software}},
  year = {2015},
  abstract = {Software is not only difficult to create, but it is also difficult to understand. Even the authors themselves in a relatively short time become unable to readily interpret their own code and to explain what intent they have followed by it. Software is being created with the goal to satisfy the needs of a customer or directly of the end users. Out of these needs comes the intent, which is relatively well understandable to all stakeholders. By using other specialized modeling techniques (typically the UML language) or in the code itself, use cases and other high-level specification and analytical artifacts in common software development almost completely dissolve. Along with dedicated initiatives to improve preserving intent comprehensibility in software, such as literate programming, intentional programming, aspect-oriented programming, or the DCI (Data, Context and Interaction) approach, this issue is a subject of contemporary research in the re-revealed area of engaging end users in software development, which has its roots in Alan Kay's vision of a personal computer programmable by end users. From the perspective of the reality of complex software system development, the existing approaches are solving the problem of losing intent comprehensibility only partially by a simplified and limited perception of the intent and do this only at the code level. This paper explores the challenges in preserving the intent comprehensibility in software. The thorough treatment of this problem requires a number of techniques and approaches to be engaged, including preserving use cases in the code, dynamic code structuring, executable intent representation using domain specific languages, advanced UML modularization, 3D rendering of UML, and representation and animation of organizational patterns. {\textcopyright} 2015, Budapest Tech Polytechnical Institution. All Rights Reserved.},
  annote = {cited By 4},
  number = {7},
  pages = {57--75},
  volume = {12}
}"
358;Vranic2016;"Features as transformations: A generative approach to software development";http://dx.doi.org/10.2298/CSIS160128027V;"<p><b><i>ARTICLE</i>(Vranic2016)</b></p>
<p>V. Vrani&cacute;. and R. T&aacute;borsk&yacute;. Features as transformations: A generative approach to software development. <i>Computer Science and Information Systems</i>: 13(3), pp. 759&#8211;778 (2016).</p>
<p><center>cited By 0</center></p>";"The objective of feature modeling is to foster software reuse by enabling to explicitly and abstractly express commonality and variability in the domain. Feature modeling is used to configure other models and, eventually, code. These software assets are being configured by the feature model based on the selection of variable features. However, selecting a feature is far from a naive component based approach where feature inclusion would simply mean including the corresponding component. More often than not, feature inclusion affects several places in models or code to be configured requiring their nontrivial adaptation. Thus, feature inclusion recalls transformation and this is at heart of the approach to feature model driven generation of software artifacts proposed in this paper. Features are viewed as transformations that may be executed during the generative process conducted by the feature model configuration. The generative process is distributed in respective transformations enabling the developers to have a better control over it. This approach can be applied to modularize changes in product customization and to establish generative software product lines by gradual refactoring of existing products. {\textcopyright} 2016, ComSIS Consortium. All rights reserved.";2016;"@ARTICLE{Vranic2016,
  author = {Vrani{\'{c}}, V and T{\'{a}}borsk{\'{y}}, R},
  journal = {Computer Science and Information Systems},
  title = {{Features as transformations: A generative approach to software development}},
  year = {2016},
  abstract = {The objective of feature modeling is to foster software reuse by enabling to explicitly and abstractly express commonality and variability in the domain. Feature modeling is used to configure other models and, eventually, code. These software assets are being configured by the feature model based on the selection of variable features. However, selecting a feature is far from a naive component based approach where feature inclusion would simply mean including the corresponding component. More often than not, feature inclusion affects several places in models or code to be configured requiring their nontrivial adaptation. Thus, feature inclusion recalls transformation and this is at heart of the approach to feature model driven generation of software artifacts proposed in this paper. Features are viewed as transformations that may be executed during the generative process conducted by the feature model configuration. The generative process is distributed in respective transformations enabling the developers to have a better control over it. This approach can be applied to modularize changes in product customization and to establish generative software product lines by gradual refactoring of existing products. {\textcopyright} 2016, ComSIS Consortium. All rights reserved.},
  annote = {cited By 0},
  number = {3},
  pages = {759--778},
  volume = {13},
  doi = {10.2298/CSIS160128027V},
  paper = {http://dx.doi.org/10.2298/CSIS160128027V}
}"
359;Walch2017;"Knowledge-driven enrichment of cyber-physical systems for industrial applications using the KbR modelling approach";http://dx.doi.org/10.1109/AGENTS.2017.8015307;"<p><b><i>ARTICLE</i>(Walch2017)</b></p>
<p>M. Walch. Knowledge-driven enrichment of cyber-physical systems for industrial applications using the KbR modelling approach. <i>ICA 2017 - 2017 IEEE International ARTICLE on Agents</i>, pp. 84&#8211;89 (2017).</p>
<p><center>cited By 0</center></p>";"This paper addresses design and engineering of models that connect cyber-physical systems and conceptualizations of industrial applications (IA). For this purpose, the hybrid modelling method SeRoIn is constructed using metamodel-based implementation (MMbI). Details are presented on specific building blocks of the modelling method, following the Knowledge-based Robotics (KbR) approach. Focusing on Knowledge-driven Enrichment (KdE) to integrate models, two experiments are conducted in the robotics section (OMiRob) of the Open Models Laboratory (OMiLAB), which involves concepts for hybrid automata, processes and ontologies. Thereby, intelligent behaviour is formalized, coining the notion of 'smart models'. The experiments prove the capability of KdE and suggest to establish focused research in the area of KbR. {\textcopyright} 2017 IEEE.";2017;"@ARTICLE{Walch2017,
  author = {Walch, M},
  journal = {ICA 2017 - 2017 IEEE International ARTICLE on Agents},
  title = {{Knowledge-driven enrichment of cyber-physical systems for industrial applications using the KbR modelling approach}},
  year = {2017},
  abstract = {This paper addresses design and engineering of models that connect cyber-physical systems and conceptualizations of industrial applications (IA). For this purpose, the hybrid modelling method SeRoIn is constructed using metamodel-based implementation (MMbI). Details are presented on specific building blocks of the modelling method, following the Knowledge-based Robotics (KbR) approach. Focusing on Knowledge-driven Enrichment (KdE) to integrate models, two experiments are conducted in the robotics section (OMiRob) of the Open Models Laboratory (OMiLAB), which involves concepts for hybrid automata, processes and ontologies. Thereby, intelligent behaviour is formalized, coining the notion of 'smart models'. The experiments prove the capability of KdE and suggest to establish focused research in the area of KbR. {\textcopyright} 2017 IEEE.},
  annote = {cited By 0},
  pages = {84--89},
  doi = {10.1109/AGENTS.2017.8015307},
  paper = {http://dx.doi.org/10.1109/AGENTS.2017.8015307}
}"
360;Wang2013;"Management science, logistics, and operations research";http://dx.doi.org/10.4018/978-1-4666-4506-6;"<p><b><i>BOOK</i>(Wang2013)</b></p>
<p>J. Wang. <i>Management science, logistics, and operations research</i>. IGI Global (2013).</p>
<p><center>cited By 1</center></p>";"With the influence of operations research and management science, business and administration methods have made significant strides in advancing the effective application methods for decision-making processes. Management Science, Logistics, and Operations Research examines related research in decision, management, and other behavioral sciences in order to exchange and collaborate on information among business, industry, and government. This book presents innovative theories and practices in operations research and is essential for practitioners, educators, and researchers for improving business functions and decision-making. {\textcopyright} 2014 by IGI Global. All rights reserved.";2013;"@BOOK{Wang2013,
  author = {Wang, J},
  publisher = {IGI Global},
  title = {{Management science, logistics, and operations research}},
  year = {2013},
  abstract = {With the influence of operations research and management science, business and administration methods have made significant strides in advancing the effective application methods for decision-making processes. Management Science, Logistics, and Operations Research examines related research in decision, management, and other behavioral sciences in order to exchange and collaborate on information among business, industry, and government. This book presents innovative theories and practices in operations research and is essential for practitioners, educators, and researchers for improving business functions and decision-making. {\textcopyright} 2014 by IGI Global. All rights reserved.},
  annote = {cited By 1},
  doi = {10.4018/978-1-4666-4506-6},
  paper = {http://dx.doi.org/10.4018/978-1-4666-4506-6}
}"
361;Wang2011;"Service-oriented simulation framework: An overview and unifying methodology";http://dx.doi.org/10.1177/0037549710391838;"<p><b><i>ARTICLE</i>(Wang2011)</b></p>
<p>W. Wang., W. Wang., Y. Zhu., and Q. Li. Service-oriented simulation framework: An overview and unifying methodology. <i>SIMULATION</i>: 87(3), pp. 221&#8211;252 (2011).</p>
<p><center>cited By 24</center></p>";"With the prevalence of net-centric environments, Service-Oriented Architectures (SOAs) have emerged as a paradigm that greatly impacts the modeling and simulation (M{\&}S) community. This paper has two interrelated goals. The first is to give a comprehensive review of various service-oriented simulation frameworks to help researchers select the appropriate one for their specific purpose. The second goal is to combine the common features derived from the review into one unifying framework that can describe and prescribe various specific approaches. The focus of this paper is on the common functionalities of service-oriented simulations reflected in the review and unifying framework. In particular, we emphasize the way SOAs and M{\&}S are combined, and the interoperability and composability challenges of distributed M{\&}S services. We describe some fundamental concepts first. Then we present a comprehensive survey of several classical frameworks, including formalism-based, model-driven, interoperability protocol based, eXtensible Modeling and Simulation Framework (XMSF), Open Grid Services Architecture (OGSA) based, and ontology-driven frameworks. Based on the review, we propose a novel three-dimensional reference model that can unify the ad hoc approaches into a common framework. The model can be used as a guideline or an analytic means to find potential and possible future directions. In particular, the model inspects the crossover between the disciplines of M{\&}S, service-orientation, and software/systems engineering. Based on the model, we present a detailed comparison of the reviewed frameworks. Finally the significance of the paper is discussed and future directions are recommended. {\textcopyright} 2011, SAGE Publications. All rights reserved.";2011;"@ARTICLE{Wang2011,
  author = {Wang, W and Wang, W and Zhu, Y and Li, Q},
  journal = {SIMULATION},
  title = {{Service-oriented simulation framework: An overview and unifying methodology}},
  year = {2011},
  abstract = {With the prevalence of net-centric environments, Service-Oriented Architectures (SOAs) have emerged as a paradigm that greatly impacts the modeling and simulation (M{\&}S) community. This paper has two interrelated goals. The first is to give a comprehensive review of various service-oriented simulation frameworks to help researchers select the appropriate one for their specific purpose. The second goal is to combine the common features derived from the review into one unifying framework that can describe and prescribe various specific approaches. The focus of this paper is on the common functionalities of service-oriented simulations reflected in the review and unifying framework. In particular, we emphasize the way SOAs and M{\&}S are combined, and the interoperability and composability challenges of distributed M{\&}S services. We describe some fundamental concepts first. Then we present a comprehensive survey of several classical frameworks, including formalism-based, model-driven, interoperability protocol based, eXtensible Modeling and Simulation Framework (XMSF), Open Grid Services Architecture (OGSA) based, and ontology-driven frameworks. Based on the review, we propose a novel three-dimensional reference model that can unify the ad hoc approaches into a common framework. The model can be used as a guideline or an analytic means to find potential and possible future directions. In particular, the model inspects the crossover between the disciplines of M{\&}S, service-orientation, and software/systems engineering. Based on the model, we present a detailed comparison of the reviewed frameworks. Finally the significance of the paper is discussed and future directions are recommended. {\textcopyright} 2011, SAGE Publications. All rights reserved.},
  annote = {cited By 24},
  number = {3},
  pages = {221--252},
  volume = {87},
  doi = {10.1177/0037549710391838},
  paper = {http://dx.doi.org/10.1177/0037549710391838}
}"
362;Xie2013;"PMDA: A physical model driven software architecture for Internet of Things";;"<p><b><i>ARTICLE</i>(Xie2013)</b></p>
<p>K. Xie., H. Chen., and L. Cui. PMDA: A physical model driven software architecture for Internet of Things. <i>Jisuanji Yanjiu yu Fazhan/Computer Research and Development</i>: 50(6), pp. 1185&#8211;1197 (2013).</p>
<p><center>cited By 10</center></p>";"It is a basic method to establish Internet of Things (IoT) by interconnecting all existing physical applications. However, there has not yet been an effective architecture to guide horizontal interconnections of physical applications. To address the problem, this paper proposes a Physical Model Driven software Architecture for Internet of Things (PMDA), which supports the horizontal interconnections of physical applications. PMDA is composed of three models, namely, Physical Model, Sense-Execute Model and Application Model. The connections and interactions between models, and interactions among components in the models are realized by connectors, which satisfies some certain constraints. The composition of the three models in PMDA and the interactions among the models are formally described by an Architecture Description Language named Wright. The effectiveness of horizontal interconnections of physical applications based on PMDA is verified by PAT, in terms of deadlock-free, divergence-free and nonterminating. Besides that, those properties of IoT application systems developed under guidance of PMDA are proven by mathematical induction.";2013;"@ARTICLE{Xie2013,
  author = {Xie, K and Chen, H and Cui, L},
  journal = {Jisuanji Yanjiu yu Fazhan/Computer Research and Development},
  title = {{PMDA: A physical model driven software architecture for Internet of Things}},
  year = {2013},
  abstract = {It is a basic method to establish Internet of Things (IoT) by interconnecting all existing physical applications. However, there has not yet been an effective architecture to guide horizontal interconnections of physical applications. To address the problem, this paper proposes a Physical Model Driven software Architecture for Internet of Things (PMDA), which supports the horizontal interconnections of physical applications. PMDA is composed of three models, namely, Physical Model, Sense-Execute Model and Application Model. The connections and interactions between models, and interactions among components in the models are realized by connectors, which satisfies some certain constraints. The composition of the three models in PMDA and the interactions among the models are formally described by an Architecture Description Language named Wright. The effectiveness of horizontal interconnections of physical applications based on PMDA is verified by PAT, in terms of deadlock-free, divergence-free and nonterminating. Besides that, those properties of IoT application systems developed under guidance of PMDA are proven by mathematical induction.},
  annote = {cited By 10},
  number = {6},
  pages = {1185--1197},
  volume = {50}
}"
363;Yang2018;"Improving verification accuracy of CPS by modeling and calibrating interaction uncertainty";http://dx.doi.org/10.1145/3093894;"<p><b><i>ARTICLE</i>(Yang2018)</b></p>
<p>W. Yang., C. Xu., M. Pan., X. Ma., and J. Lu. Improving verification accuracy of CPS by modeling and calibrating interaction uncertainty. <i>ACM Transactions on Internet Technology</i>: 18(2) (2018).</p>
<p><center>cited By 0</center></p>";"Cyber-Physical Systems (CPS) intrinsically combine hardware and physical systems with software and network, which are together creating complex and correlated interactions. CPS applications often experience uncertainty in interacting with environment through unreliable sensors. They can be faulty and exhibit runtime errors if developers have not considered environmental interaction uncertainty adequately. Existing work in verifying CPS applications ignores interaction uncertainty and thus may overlook uncertainty-related faults. To improve verification accuracy, in this article we propose a novel approach to verifying CPS applications with explicit modeling of uncertainty arisen in the interaction between them and the environment. Our approach builds an Interactive State Machine network for a CPS application and models interaction uncertainty by error ranges and distributions. Then it encodes both the application and uncertainty models to Satisfiability Modulo Theories (SMT) formula to leverage SMT solvers searching for counterexamples that represent application failures. The precision of uncertainty model can affect the verification results. However, it may be difficult to model interaction uncertainty precisely enough at the beginning, because of the uncontrollable noise of sensors and insufficient data sample size. To further improve the accuracy of the verification results, we propose an approach to identifying and calibrating imprecise uncertainty models. We exploit the inconsistency between the counterexamples' estimate and actual occurrence probabilities to identify possible imprecision in uncertainty models, and the calibration of imprecise models is to minimize the inconsistency, which is reduced to a Search-Based Software Engineering problem. We experimentally evaluated our verification and calibration approaches with real-world CPS applications, and the experimental results confirmed their effectiveness and efficiency.";2018;"@ARTICLE{Yang2018,
  author = {Yang, W and Xu, C and Pan, M and Ma, X and Lu, J},
  journal = {ACM Transactions on Internet Technology},
  title = {{Improving verification accuracy of CPS by modeling and calibrating interaction uncertainty}},
  year = {2018},
  abstract = {Cyber-Physical Systems (CPS) intrinsically combine hardware and physical systems with software and network, which are together creating complex and correlated interactions. CPS applications often experience uncertainty in interacting with environment through unreliable sensors. They can be faulty and exhibit runtime errors if developers have not considered environmental interaction uncertainty adequately. Existing work in verifying CPS applications ignores interaction uncertainty and thus may overlook uncertainty-related faults. To improve verification accuracy, in this article we propose a novel approach to verifying CPS applications with explicit modeling of uncertainty arisen in the interaction between them and the environment. Our approach builds an Interactive State Machine network for a CPS application and models interaction uncertainty by error ranges and distributions. Then it encodes both the application and uncertainty models to Satisfiability Modulo Theories (SMT) formula to leverage SMT solvers searching for counterexamples that represent application failures. The precision of uncertainty model can affect the verification results. However, it may be difficult to model interaction uncertainty precisely enough at the beginning, because of the uncontrollable noise of sensors and insufficient data sample size. To further improve the accuracy of the verification results, we propose an approach to identifying and calibrating imprecise uncertainty models. We exploit the inconsistency between the counterexamples' estimate and actual occurrence probabilities to identify possible imprecision in uncertainty models, and the calibration of imprecise models is to minimize the inconsistency, which is reduced to a Search-Based Software Engineering problem. We experimentally evaluated our verification and calibration approaches with real-world CPS applications, and the experimental results confirmed their effectiveness and efficiency.},
  annote = {cited By 0},
  number = {2},
  volume = {18},
  doi = {10.1145/3093894},
  paper = {http://dx.doi.org/10.1145/3093894}
}"
364;Zander2012;"A Vision on Collaborative Computation of Things for Personalized Analyses";http://dx.doi.org/10.1109/WETICE.2012.63;"<p><b><i>INPROCEEDINGS</i>(Zander2012)</b></p>
<p>J. Zander. A Vision on Collaborative Computation of Things for Personalized Analyses. <i>2012 IEEE 21st International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises</i>. pp. 214&#8211;219. jun (2012).</p>
<p><center></center></p>";"This is a visionary introduction of a technical opportunity to engineer and maintain a more aware daily life based on continuously updated scientific results and research in such fields as Cyber Physical Systems, Internet of Things, and Modeling and Simulation for engineered systems. A conceptual framework called Computation of Things is proposed, a technical engine as an online platform is being collaboratively developed, and first results on domain convergence in both emerging technologies and applications are discussed.";2012;"@INPROCEEDINGS{Zander2012,
  author = {Zander, J},
  booktitle = {2012 IEEE 21st International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises},
  title = {{A Vision on Collaborative Computation of Things for Personalized Analyses}},
  year = {2012},
  abstract = {This is a visionary introduction of a technical opportunity to engineer and maintain a more aware daily life based on continuously updated scientific results and research in such fields as Cyber Physical Systems, Internet of Things, and Modeling and Simulation for engineered systems. A conceptual framework called Computation of Things is proposed, a technical engine as an online platform is being collaboratively developed, and first results on domain convergence in both emerging technologies and applications are discussed.},
  month = {jun},
  pages = {214--219},
  doi = {10.1109/WETICE.2012.63},
  paper = {http://dx.doi.org/10.1109/WETICE.2012.63}
}"
365;Zeigler2017;"Combining DEVS and model-checking: Concepts and tools for integrating simulation and analysis";http://dx.doi.org/10.1504/IJSPM.2017.082781;"<p><b><i>ARTICLE</i>(Zeigler2017)</b></p>
<p>B. P. Zeigler., J. J. Nutaro., and C. Seo. Combining DEVS and model-checking: Concepts and tools for integrating simulation and analysis. <i>International Journal of Simulation and Process Modelling</i>: 12(1), pp. 2&#8211;15 (2017).</p>
<p><center>cited By 2</center></p>";"Our objectives here are to discuss the development of a formal framework that exploits the advantages of the discrete event system specification (DEVS) formalism and builds upon recent extensive work on verification combining DEVS and model checking for hybrid systems. DEVS offers the ability, via mathematical transformations called system morphisms, to map a system expressed in a formalism suitable for analysis (e.g., timed automata or hybrid automata) into the DEVS formalism for the purpose of simulation. We discuss a probabilistic extension of the FD-DEVS formalism that enables a set of model classes and tools derived from Markov-type models. The MS4 modelling environment provides a suite of tools that support this extension, called FP-DEVS. In this paper, we describe these tools and the concepts underlying them. We also provide examples of application of these concepts and discuss the open opportunities for research in this direction. Copyright {\textcopyright} 2017 Inderscience Enterprises Ltd.";2017;"@ARTICLE{Zeigler2017,
  author = {Zeigler, B P and Nutaro, J J and Seo, C},
  journal = {International Journal of Simulation and Process Modelling},
  title = {{Combining DEVS and model-checking: Concepts and tools for integrating simulation and analysis}},
  year = {2017},
  abstract = {Our objectives here are to discuss the development of a formal framework that exploits the advantages of the discrete event system specification (DEVS) formalism and builds upon recent extensive work on verification combining DEVS and model checking for hybrid systems. DEVS offers the ability, via mathematical transformations called system morphisms, to map a system expressed in a formalism suitable for analysis (e.g., timed automata or hybrid automata) into the DEVS formalism for the purpose of simulation. We discuss a probabilistic extension of the FD-DEVS formalism that enables a set of model classes and tools derived from Markov-type models. The MS4 modelling environment provides a suite of tools that support this extension, called FP-DEVS. In this paper, we describe these tools and the concepts underlying them. We also provide examples of application of these concepts and discuss the open opportunities for research in this direction. Copyright {\textcopyright} 2017 Inderscience Enterprises Ltd.},
  annote = {cited By 2},
  number = {1},
  pages = {2--15},
  volume = {12},
  doi = {10.1504/IJSPM.2017.082781},
  paper = {http://dx.doi.org/10.1504/IJSPM.2017.082781}
}"
366;Zhang2013;"View oriented approach to specify and model aerospace cyber-physical systems";http://dx.doi.org/10.1109/DASC.2013.78;"<p><b><i>ARTICLE</i>(Zhang2013)</b></p>
<p>L. Zhang. View oriented approach to specify and model aerospace cyber-physical systems. <i>Proceedings - 2013 IEEE 11th International ARTICLE on Dependable, Autonomic and Secure Computing, DASC 2013</i>, pp. 296&#8211;303 (2013).</p>
<p><center>cited By 0</center></p>";"The analysis and design of aerospace cyber physical systems call for the proper dimensioning of mechanical, electronic and embedded control subsystems from different views. Usually, the physical world part and the cyber part are modeled independently of each others. This modeling approach does not exploit many potential advantages of an integrated specification, analysis and design process, which are lost in the separate points of view of different engineering domains. In fact, the physical properties and the dynamical behavior of physical world parts play a central role in aerospace cyber physical systems development process. Thus, significant improvements to overall system performances can be obtained by early integrating the physical world and the cyber part development. It is clear that an appropriate specification and modeling approach cannot be fitted into the limitations of one formalism at time, particularly in the early stages of the design process. Hence, it is necessary to take a combination of different methodologies in a multi-formalism approach from different views. In this paper, we propose a view oriented approach to integrated different models, at different level of details to specify and model aerospace cyber physical systems as a whole. The effectiveness of the approach is illustrated by means of one practical case study: specifying and modeling the lunar rover system. In this paper, we specify and model the lunar rover with integrating Modelica and AADL, the physical world is modeled by Modelica, the cyber part is modeled by AADL. {\textcopyright} 2013 IEEE.";2013;"@ARTICLE{Zhang2013,
  author = {Zhang, L},
  journal = {Proceedings - 2013 IEEE 11th International ARTICLE on Dependable, Autonomic and Secure Computing, DASC 2013},
  title = {{View oriented approach to specify and model aerospace cyber-physical systems}},
  year = {2013},
  abstract = {The analysis and design of aerospace cyber physical systems call for the proper dimensioning of mechanical, electronic and embedded control subsystems from different views. Usually, the physical world part and the cyber part are modeled independently of each others. This modeling approach does not exploit many potential advantages of an integrated specification, analysis and design process, which are lost in the separate points of view of different engineering domains. In fact, the physical properties and the dynamical behavior of physical world parts play a central role in aerospace cyber physical systems development process. Thus, significant improvements to overall system performances can be obtained by early integrating the physical world and the cyber part development. It is clear that an appropriate specification and modeling approach cannot be fitted into the limitations of one formalism at time, particularly in the early stages of the design process. Hence, it is necessary to take a combination of different methodologies in a multi-formalism approach from different views. In this paper, we propose a view oriented approach to integrated different models, at different level of details to specify and model aerospace cyber physical systems as a whole. The effectiveness of the approach is illustrated by means of one practical case study: specifying and modeling the lunar rover system. In this paper, we specify and model the lunar rover with integrating Modelica and AADL, the physical world is modeled by Modelica, the cyber part is modeled by AADL. {\textcopyright} 2013 IEEE.},
  annote = {cited By 0},
  pages = {296--303},
  doi = {10.1109/DASC.2013.78},
  paper = {http://dx.doi.org/10.1109/DASC.2013.78}
}"
367;Zhang2014;"Integration design and model transformation for cyber physical systems";http://dx.doi.org/10.1109/ICSESS.2014.6933676;"<p><b><i>INPROCEEDINGS</i>(Zhang2014)</b></p>
<p>L. Zhang. and S. Feng. Integration design and model transformation for cyber physical systems. <i>2014 IEEE 5th International Conference on Software Engineering and Service Science</i>. pp. 754&#8211;757. jun (2014).</p>
<p><center></center></p>";"Cyber physical system is hard to develop because developers need to consider functional properties, nonfunctional properties, such as timeliness, energy, memory, safety and reliability, dynamic continuous properties, spatial requirements and the interaction with physical world. In this paper, we propose an integrated approach to develop cyber physical systems based on multi-dimensions, multi-views and multi-paradigm. This model-integrated development approach addresses the development needs of cyber physical systems through the pervasive use of models. Model transformation is a central concept in model-driven development approaches and integration development approaches in cyber physical systems, as it provides a mechanism for automating the manipulation of models. We present the model transformation methods of cyber physical systems, we propose an approach to transform the models of AADL into the models of Modelica, and Modelica into AADL, clarify the transformation principles and to illustrate the important synergies resulting from the integration between these two languages.";2014;"@INPROCEEDINGS{Zhang2014,
  author = {Zhang, L and Feng, S},
  booktitle = {2014 IEEE 5th International Conference on Software Engineering and Service Science},
  title = {{Integration design and model transformation for cyber physical systems}},
  year = {2014},
  abstract = {Cyber physical system is hard to develop because developers need to consider functional properties, nonfunctional properties, such as timeliness, energy, memory, safety and reliability, dynamic continuous properties, spatial requirements and the interaction with physical world. In this paper, we propose an integrated approach to develop cyber physical systems based on multi-dimensions, multi-views and multi-paradigm. This model-integrated development approach addresses the development needs of cyber physical systems through the pervasive use of models. Model transformation is a central concept in model-driven development approaches and integration development approaches in cyber physical systems, as it provides a mechanism for automating the manipulation of models. We present the model transformation methods of cyber physical systems, we propose an approach to transform the models of AADL into the models of Modelica, and Modelica into AADL, clarify the transformation principles and to illustrate the important synergies resulting from the integration between these two languages.},
  month = {jun},
  pages = {754--757},
  doi = {10.1109/ICSESS.2014.6933676},
  paper = {http://dx.doi.org/10.1109/ICSESS.2014.6933676}
}"
